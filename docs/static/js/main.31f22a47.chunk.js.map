{"version":3,"sources":["store/user/actionTypes.ts","store/global/actionTypes.ts","store/room/actionTypes.ts","store/user/reducer.ts","util/helper.ts","util/constants.ts","../shared/models/RequestMessage.ts","WebsocketClient/index.ts","config.ts","store/user/actions.ts","store/global/actions.ts","store/room/actions.ts","store/user/effects.ts","store/global/effects.ts","model/Notification.ts","../shared/constants/room.ts","store/room/effects.ts","store/connection/reducer.ts","store/global/reducer.ts","store/room/reducer.ts","store/reducers.ts","store/index.ts","ui/FullScreenLoading.tsx","view/GameLobby/components/RoomList/index.tsx","view/GameLobby/components/AccountCard/index.tsx","view/GameLobby/components/GameLobbyHeader.tsx","hooks/index.ts","view/GameLobby/index.tsx","component/NotificationPanel/index.tsx","view/room/CreateRoom/index.tsx","view/room/PlayingRoom/components/RoomMessage/index.tsx","view/room/PlayingRoom/index.tsx","layout/AuthLayout.tsx","ui/AvatarBox/index.tsx","view/game/Game/components/AnswerInputBox/index.tsx","model/DrawAction.ts","controller/CanvasController.ts","view/game/Game/components/CanvasContainer/SetPenColorButton.tsx","ui/PlainLine.tsx","view/game/Game/components/CanvasContainer/SetPenSizeButton.tsx","view/game/Game/components/CanvasContainer/index.tsx","view/game/Game/index.tsx","route/routes.ts","layout/BasicLayout/index.tsx","route/index.tsx","App.tsx","index.ts"],"names":["SET_USERNAME","SET_USER","SET_USER_CURRENT_ROOM_ID","SET_IS_READY","SET_IS_GAMING","SET_NUMBER_OF_ONLINE_PLAYER","ADD_NOTIFICATION","SHIFT_NOTIFICATION","SET_ROOM_LIST","SET_CURRENT_ROOM_USERS","SET_CURRENT_ROOM_STATUS","SET_CURRENT_GAME","SET_ROOM","defaultState","isLogining","user","isRegistering","getToken","token","localStorage","getItem","trim","setToken","setItem","createHandleOnKeyEnterUp","cb","evt","keyCode","IS_DEV_CLIENT","some","p","window","location","origin","includes","RequestMessage","data","handler","desc","id","createAt","Date","now","this","WebsocketClient","options","isConnected","ws","messageCache","eventMap","Map","WebSocket","addr","init","onopen","sendMessageFromCache","onclose","console","log","onerror","onmessage","rawMessage","msg","JSON","parse","emit","requestId","trigger","forEach","sendMessage","reqMsg","send","stringify","push","Promise","resolve","reject","on","callback","_","respMsg","error","off","err","eventName","cbsArray","get","undefined","set","filter","c","cbs","getConfig","createSetUsername","username","type","userActionTypes","payload","createSetUser","createSetIsGaming","status","createSetUserCurrentRoomId","rid","createSetIsReady","createSetNumberOfOnlinePlayer","num","globalActionTypes","createAddNotification","n","createShiftNotification","createSetRoomList","roomList","roomActionTypes","createSetCurrentRoomUsers","users","createSetRoom","r","createSetCurrentGame","g","createSetCurrentRoomStatus","s","login","dispatch","getState","a","wsClient","connection","request","userActions","changeUsername","changedName","getNumberOfOnlinePlayer","result","globalActions","NotificationType","RoomStatus","RoomType","Notification","title","detail","NORMAL","uuidv4","getRoomList","roomActions","isEnteringRoom","enterRoom","roomId","room","batchDispatch","currentRoomId","leaveRoom","createRoom","name","sendChatMessage","content","makeGameIsReady","ready","requestType","isReady","getGame","game","GAMING","ERROR","replace","config","store","userEffects","numberOfOnlinePlayer","notifications","currentRoom","currentGame","reducers","state","action","produce","draft","isGaming","global","shift","createRootReducer","history","combineReducers","router","connectRouter","createHashHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","FullScreenLoading","className","style","display","justifyContent","alignItems","CircularProgress","statusText","WAITING","RoomListItem","useDispatch","String","padStart","Button","onClick","fullWidth","variant","selectorRoomList","RoomList","useSelector","shallowEqual","freshRoomList","useCallback","roomEffects","useEffect","refreshRoomListOff","respData","List","subheader","ListSubheader","IconButton","length","map","key","selectorAccountCard","AccountCard","useState","changedUsername","setChangedUsername","updateUsername","target","value","isShowChangeNameDialog","setIsShowChangeNameDialog","openChangeNameModal","closeChangeName","confirmChangeUsername","isEmptyName","Dialog","open","onClose","DialogTitle","DialogContent","TextField","placeholder","onChange","DialogActions","disabled","Card","CardHeader","toLocaleTimeString","avatar","Avatar","GameLobbyHeader","React","memo","isShowFindRoom","setIsShowFindRoom","closeFindRoom","setRoomId","jumoToFindRoom","onKeyUp","AppBar","boxShadow","position","Toolbar","color","Typography","flex","textAlign","useDocumentTitle","prevTitleRef","useRef","current","document","indexSelector","selectorNotificationPanel","NotificationPanel","shiftNotification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","aria-label","Close","message","selectorRoomMessage","userId","RoomMessage","chatMsgList","setChatMsgList","chatMsg","prev","concat","msgContent","setMsgContent","isValidatedContentt","cm","ListItem","speaker","timestamp","selectorPlayingRoom","roomTypeTextDict","PRIVATE","PUBLIC","selectorAuthLoyout","pathname","AvatarBox","text","AnswerInputBox","DrawActionType","answer","setAnswer","sendGuessAnswer","CanvasController","canvasEl","ctx","createElement","getContext","penColor","setPenColor","penSize","setPenSize","strokeStyle","fillStyle","lineWidth","size","image","img","Image","onload","clearCanvas","drawImage","src","to","beginPath","arc","x","y","Math","PI","fill","closePath","toDataURL","startPoint","sp","moveTo","lineTo","stroke","elementSelector","el","querySelector","Error","append","height","clientHeight","width","clientWidth","prevFillStyle","clearRect","fillRect","op","DrawAction","colors","SetPenColorButton","anchorEl","isShowSetPenColor","setIsShowSetPenColor","updatePenColor","fontSize","Popover","transformOrigin","border","PlainLine","props","backgroundColor","SetPenSizeButton","updatePenSize","isShowSetPenSize","setIsShowSetPenSize","Slider","valueLabelDisplay","step","marks","min","max","Canvas","futureDrawings","pastDrawings","posElRef","createRef","draw","changePlayingUserOff","drawActionOff","getPointFromEvent","touches","t","clientX","clientY","offsetLeft","offsetTop","endDrawing","sendDrawActionToServer","END_DRAW_LINE","newestDrawing","getSnapshot","snapshotCurrentDrawing","CLEAR_CANVAS","undoDrawing","pastDrawing","pop","setState","DRAW_IMAGE","redoDrawing","futureDrawing","handleTouchStart","startDrawLine","handleTouchMove","drawLineTo","handleTouchEnd","mount","bindEvents","initialDrawing","respMsgData","drawAction","START_DRAW_LINE","point","setting","prevSetting","getSetting","drawPoint","DRAW_LINE_TO","imgData","extral","isSelfPlaying","curDrawing","prevState","onTouchStart","onTouchMove","onTouchEnd","ref","Undo","Redo","PureComponent","selectorGame","routes","path","component","children","targetPath","defaultRoomName","roomName","setRoomName","roomType","setRoomType","globalEffects","isUsingDefaultRoomName","setIsUsingDefaultRoomName","updateRoomName","goBack","FormControl","label","RadioGroup","button","FormControlLabel","control","Radio","labelPlacement","chattingList","setChattingList","wrongGuessOff","msgData","prevList","gameOverOff","refreshGameOff","useMemo","playInfo","currentPlayer","keyword","raw","hint","gameUser","userScores","rawRoomId","useParams","parseInt","toggleGameReady","refreshRoomInfoOff","allPlayerReadyOff","Number","isNaN","Array","index","AppRoute","generateRoutes","route","Layout","layout","Component","render","createStore","applyMiddleware","routerMiddleware","ReduxThunk","selectorApp","App","refreshPlayerInfoOff","AppWrapper","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.31f22a47.chunk.js","sourcesContent":["export const SET_USERNAME = 'SET_USERNAME';\n\nexport const SET_USER = 'SET_USER';\n\nexport const SET_USER_CURRENT_ROOM_ID =  'SET_USER_CURRENT_ROOM_ID';\n\nexport const SET_IS_READY = 'SET_IS_READY';\n\nexport const SET_IS_GAMING = 'SET_IS_GAMING';\n\n// export const LOGOUT = 'LOGOUT';\n","export const SET_NUMBER_OF_ONLINE_PLAYER = 'SET_NUMBER_OF_ONLINE_PLAYER';\n\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\n\nexport const SHIFT_NOTIFICATION = 'REMOVE_NOTIFICATION';\n","export const SET_ROOM_LIST = 'SET_ROOM_LIST';\n\nexport const SET_CURRENT_ROOM_USERS = 'SET_CURRENT_ROOM_USERS';\n\nexport const SET_CURRENT_ROOM_STATUS = 'SET_CURRENT_ROOM_STATUS';\n\nexport const SET_CURRENT_GAME = 'SET_CURRENT_GAME';\n\nexport const SET_ROOM = 'SET_ROOM';\n","import { IUser } from '../../../shared/types';\r\nimport { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { userActionTypes } from '../actionTypes';\r\n\r\nexport interface IReduxUserState {\r\n  isLogining: boolean;\r\n  user: null | IUser;\r\n  isRegistering: boolean;\r\n}\r\n\r\nconst defaultState: IReduxUserState = {\r\n  isLogining: false,\r\n  user: null,\r\n  isRegistering: false,\r\n};\r\n\r\nexport default function userReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case userActionTypes.SET_USERNAME:\r\n        if (draft.user != null) {\r\n          draft.user.username = payload as string;\r\n        }\r\n        break;\r\n      case userActionTypes.SET_USER:\r\n        draft.user = payload as IUser;\r\n        break;\r\n      case userActionTypes.SET_IS_GAMING:\r\n        if (draft.user != null) {\r\n          draft.user.isGaming = payload as boolean;\r\n        }\r\n        break;\r\n      case userActionTypes.SET_IS_READY:\r\n        if (draft.user != null) {\r\n          draft.user.isReady = payload as boolean;\r\n        }\r\n        break;\r\n\r\n      case userActionTypes.SET_USER_CURRENT_ROOM_ID:\r\n        if (draft.user != null) {\r\n          draft.user.currentRoomId = payload as number | undefined;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { KeyboardEvent } from 'react';\r\n\r\nexport function getIsDevelopment() {\r\n  const devlopmentPaths = ['localhost', '127.0.0.1', '192.168'];\r\n  return devlopmentPaths.some(p => window.location.origin.includes(p));\r\n}\r\n\r\nexport function getToken() {\r\n  const token = localStorage.getItem('__token');;\r\n  if (token != null && token.trim() === '') return null;\r\n  return token;\r\n}\r\n\r\nexport function setToken(token: string) {\r\n  localStorage.setItem('__token', token);\r\n}\r\n\r\nexport function createHandleOnKeyEnterUp(cb: () => void) {\r\n  return function handleOnKeyEnterUp(evt: KeyboardEvent) {\r\n    const KEY_ENTER_CODE = 13;\r\n    if (evt.keyCode === KEY_ENTER_CODE) {\r\n      cb();\r\n    }\r\n  }\r\n}\r\n\r\n","import { getIsDevelopment } from \"./helper\";\r\n\r\nexport const IS_DEV_CLIENT = getIsDevelopment();\r\n\r\n// export enum MessageType { // 注意这里的字面量很重要的，后端根据这个判断调用哪一个service\r\n//     LOGIN = 'login',\r\n//     ROOM_LIST = 'roomList',\r\n// }\r\n","\r\nexport default class RequestMessage {\r\n  id: string;\r\n  createAt = Date.now();\r\n  constructor(public data: unknown, public handler?: string, public desc?: string) {\r\n    this.id = `${this.handler}-${Date.now()}`;\r\n  }\r\n\r\n  toJSON() {\r\n    const { ...publics } = this;\r\n    return publics;\r\n  }\r\n}\r\n\r\nexport function isRequestMessage(target: any): target is RequestMessage {\r\n  if (target == null) return false;\r\n  if (\r\n    typeof target === 'object' &&\r\n    typeof target.id === 'string' &&\r\n    typeof target.createAt === 'number'\r\n  ) return true;\r\n  return false;\r\n}\r\n","import { IS_DEV_CLIENT } from '../util/constants';\r\nimport ResponseMessage from '../../shared/models/ResponseMessage';\r\nimport RequestMessage from '../../shared/models/RequestMessage';\r\n// import RequestMessage from './models/RequestMessage';\r\n\r\nexport default class WebsocketClient {\r\n  isConnected = false;\r\n  ws: WebSocket;\r\n  messageCache: RequestMessage[] = [];\r\n  eventMap = new Map<\r\n    string,\r\n    ((messageData: unknown, message: RequestMessage) => void)[]\r\n  >();\r\n  constructor(\r\n    public options: {\r\n      addr: string;\r\n      onopen?: (evt: Event) => void;\r\n      onclose?: (evt: Event) => void;\r\n      onerror?: (evt: Event) => void;\r\n    },\r\n  ) {\r\n    this.ws = new window.WebSocket(this.options.addr);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // 注册事件\r\n    this.ws.onopen = evt => {\r\n      this.isConnected = true;\r\n      if (typeof this.options.onopen === 'function') {\r\n        this.options.onopen(evt);\r\n      }\r\n      this.sendMessageFromCache();\r\n    };\r\n    this.ws.onclose = evt => {\r\n      this.isConnected = false;\r\n      if (typeof this.options.onclose === 'function') {\r\n        this.options.onclose(evt);\r\n        if (IS_DEV_CLIENT) {\r\n          console.log('连接断开');\r\n        }\r\n      }\r\n    };\r\n    this.ws.onerror = evt => {\r\n      if (typeof this.options.onerror === 'function') {\r\n        this.options.onerror(evt);\r\n      }\r\n    };\r\n    this.ws.onmessage = ({ data: rawMessage }) => {\r\n      const msg: ResponseMessage = JSON.parse(rawMessage);\r\n      console.log('recive', msg);\r\n      this.emit('message', msg);\r\n      if (msg.requestId != null) {\r\n        this.emit(msg.requestId, msg);\r\n      }\r\n      if (msg.trigger != null) {\r\n        this.emit(msg.trigger, msg);\r\n      }\r\n    };\r\n    // end 注册事件\r\n  }\r\n\r\n  sendMessageFromCache() {\r\n    // 主要是为了处理应用已经加载完成，但是还没建立连接的情况，相当于人为加了一个缓冲层，只要没有connected，这些msg就不会发送\r\n    this.messageCache.forEach(msg => {\r\n      this.sendMessage(msg);\r\n    });\r\n    this.messageCache = [];\r\n  }\r\n\r\n  sendMessage(reqMsg: RequestMessage) {\r\n    if (this.isConnected) {\r\n      console.log(`sendMessage`, reqMsg);\r\n      this.ws.send(JSON.stringify(reqMsg));\r\n    } else {\r\n      this.messageCache.push(reqMsg);\r\n    }\r\n  }\r\n\r\n  // requestSync(type: string, data?: any) {\r\n  //   const messageId = type + '_' + new Date().getTime(); // 这是为了防止收到过时的信息\r\n  //   const msg: RequestMessage = { data, type, id: messageId };\r\n  //   this.sendMessage(msg);\r\n  // }\r\n\r\n  // 不需要等待回复的请求不要用这个方法，会导致内存泄漏，因为无法触发对应reqesut Id的回调函数\r\n  request(handler: string, data?: any) {\r\n    return new Promise<ResponseMessage>((resolve, reject) => {\r\n      try {\r\n        // const messageId = type + '_' + new Date().getTime() // 这是为了防止收到过时的信息\r\n        // const msg: RequestMessage = {data, type, id: messageId}\r\n        const reqMsg = new RequestMessage(data, handler);\r\n        const callback = (_: unknown, respMsg: ResponseMessage) => {\r\n          if (respMsg == null) {\r\n            console.error(`${reqMsg.handler}-${reqMsg.id} 返回来空的message`);\r\n          }\r\n\r\n          // 注意，如果针对本次请求，如果服务器端没有回复响应，则永远不会调用和删除回调\r\n          if (respMsg.error != null) {\r\n            this.emit('error', respMsg);\r\n            reject(respMsg.error);\r\n          }\r\n\r\n          resolve(respMsg);\r\n\r\n          if (respMsg.requestId != null) {\r\n            this.off(respMsg.requestId, callback);\r\n          }\r\n          if (IS_DEV_CLIENT) {\r\n            if (respMsg.requestId != null && respMsg.requestId !== reqMsg.id) {\r\n              console.error(\r\n                `reqMsg.id: ${reqMsg.id} !== respMsg.requestId： ${respMsg.requestId}`,\r\n              );\r\n            }\r\n          }\r\n        };\r\n        this.on(reqMsg.id, callback);\r\n        this.sendMessage(reqMsg);\r\n      } catch (err) {\r\n        console.error(`request时发生错误 ${err}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  on(\r\n    eventName: string,\r\n    callback: (messageData: unknown, message: ResponseMessage) => void,\r\n  ) {\r\n    let cbsArray = this.eventMap.get(eventName);\r\n    if (cbsArray == undefined) {\r\n      cbsArray = [];\r\n      this.eventMap.set(eventName, cbsArray);\r\n    }\r\n    cbsArray.push(callback);\r\n    return () => {\r\n      this.off(eventName, callback);\r\n    };\r\n  }\r\n  off(\r\n    eventName: string,\r\n    cb: (messageData: unknown, message: RequestMessage) => void,\r\n  ) {\r\n    let cbsArray = this.eventMap.get(eventName);\r\n    if (cbsArray != undefined) {\r\n      cbsArray = cbsArray.filter(c => c !== cb);\r\n      this.eventMap.set(eventName, cbsArray);\r\n    }\r\n  }\r\n  emit(eventName: string, msg: RequestMessage) {\r\n    const cbs = this.eventMap.get(eventName);\r\n    if (cbs !== undefined) {\r\n      cbs.forEach(c => c(msg.data, msg));\r\n    }\r\n  }\r\n}\r\n","import { IS_DEV_CLIENT } from \"./util/constants\";\r\n\r\nfunction getConfig() {\r\n    if (IS_DEV_CLIENT) {\r\n        return {\r\n            addr: 'ws://127.0.0.1:9421',\r\n            // addr: 'ws://192.168.137.1:9421',\r\n        }\r\n    }\r\n    return {\r\n        addr: 'ws://101.37.174.138:9421',\r\n    };\r\n}\r\n\r\nexport default getConfig();\r\n\r\n","import { IAction } from '../actions';\nimport { userActionTypes } from '../actionTypes';\nimport { IUser } from '../../../shared/types';\n\nexport function createSetUsername(username: string): IAction {\n  return {\n    type: userActionTypes.SET_USERNAME,\n    payload: username,\n  };\n}\n\nexport function createSetUser(user: IUser): IAction {\n  return {\n    type: userActionTypes.SET_USER,\n    payload: user,\n  };\n}\n\nexport function createSetIsGaming(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_GAMING,\n    payload: status,\n  }\n}\n\nexport function createSetUserCurrentRoomId(rid: number | undefined): IAction {\n  return {\n    type: userActionTypes.SET_USER_CURRENT_ROOM_ID,\n    payload: rid,\n  }\n}\n\nexport function createSetIsReady(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_READY,\n    payload: status,\n  }\n}\n","import { IAction } from '../actions';\nimport { globalActionTypes } from '../actionTypes';\nimport Notification from '@client/model/Notification';\n\nexport function createSetNumberOfOnlinePlayer(num: number): IAction {\n  return {\n    type: globalActionTypes.SET_NUMBER_OF_ONLINE_PLAYER,\n    payload: num,\n  };\n}\n\nexport const createAddNotification = (n: Notification) => ({\n  type: globalActionTypes.ADD_NOTIFICATION,\n  payload: n,\n});\n\nexport const createShiftNotification = () => ({\n  type: globalActionTypes.SHIFT_NOTIFICATION,\n});\n","import { IAction } from '../actions';\nimport { roomActionTypes } from '../actionTypes';\nimport { IRoom, IUser, IGame } from '../../../shared/types';\nimport { RoomStatus } from '../../../shared/constants/room';\n\nexport function createSetRoomList(roomList: any[]): IAction {\n  return {\n    type: roomActionTypes.SET_ROOM_LIST,\n    payload: roomList,\n  };\n}\n\nexport function createSetCurrentRoomUsers(users: IUser[]): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_ROOM_USERS,\n    payload: users,\n  };\n}\n\nexport function createSetRoom(r: IRoom | null): IAction {\n  return {\n    type: roomActionTypes.SET_ROOM,\n    payload: r,\n  };\n}\n\nexport function createSetCurrentGame(g: IGame | null): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_GAME,\n    payload: g,\n  };\n}\n\nexport function createSetCurrentRoomStatus(s: RoomStatus): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_ROOM_STATUS,\n    payload: s,\n  }\n}\n","import { TReduxThunk } from '../effects';\nimport { userActions } from '../actions';\nimport { getToken, setToken } from '../../util/helper';\nimport { IUser } from '../../../shared/types';\n\nexport function login(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    const token = getToken();\n    const user = (await wsClient.request('login', token)).data as IUser;\n    setToken(user.token);\n    dispatch(userActions.createSetUser(user));\n  };\n}\n\nexport function changeUsername(username: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    const changedName = (await wsClient.request(\n      'changeUsername',\n      username,\n    )).data as string;\n    dispatch(userActions.createSetUsername(changedName));\n  };\n}\n","import { TReduxThunk } from '../effects';\nimport { globalActions } from '../actions';\n\n\nexport function getNumberOfOnlinePlayer(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const { connection: { wsClient } } = getState();\n    try {\n      const result = (await wsClient.request('numberOfOnlineUser')).data as number;\n      dispatch(globalActions.createSetNumberOfOnlinePlayer(result));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n","import uuidv4 from 'uuid/v4';\r\n\r\nexport enum NotificationType {\r\n  ERROR = 'error',\r\n  WARN = 'warn',\r\n  SUCCESS = 'success',\r\n  NORMAL = 'nornal',\r\n}\r\n\r\nexport default class Notification {\r\n  public id = uuidv4();\r\n  public createAt = Date.now();\r\n  constructor(\r\n    public title: string,\r\n    public detail?: string,\r\n    public type: NotificationType = NotificationType.NORMAL,\r\n  ) {}\r\n}\r\n","export enum RoomStatus {\r\n  WAITING = 'waiting',\r\n  GAMING = 'gaming',\r\n};\r\n\r\nexport enum RoomType {\r\n  PUBLIC = 'public',\r\n  PRIVATE = 'private',\r\n}\r\n","import Notification, { NotificationType } from '@client/model/Notification';\nimport { push, replace } from 'connected-react-router';\nimport { batch as batchDispatch } from 'react-redux';\n\nimport { RoomStatus, RoomType } from '../../../shared/constants/room';\nimport { IGame, IRoom, IUser } from '../../../shared/types';\nimport { globalActions, roomActions, userActions } from '../actions';\nimport { TReduxThunk } from '../effects';\n\nexport function getRoomList(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('roomList');\n      const result = respMsg.data as any[];\n      dispatch(roomActions.createSetRoomList(result));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nlet isEnteringRoom = false;\nexport function enterRoom(roomId: number): TReduxThunk {\n  return async (dispatch, getState) => {\n    if (isEnteringRoom) return;\n    isEnteringRoom = true;\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('userEnter', {\n        id: roomId,\n      });\n\n      const { room, user } = respMsg.data as {\n        room: IRoom;\n        user: IUser;\n      };\n      batchDispatch(() => {\n        dispatch(roomActions.createSetRoom(room));\n        dispatch(userActions.createSetUserCurrentRoomId(user.currentRoomId));\n        dispatch(push(`/room/${room.id}`));\n      });\n    } catch (err) {\n      dispatch(push('/'));\n      console.error(err);\n    } finally {\n      isEnteringRoom = false;\n    }\n  };\n}\n\nexport function leaveRoom(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n      user: { user },\n    } = getState();\n    if (user == null || user.currentRoomId == null) return;\n    try {\n      wsClient.request('userLeave');\n      dispatch(userActions.createSetUserCurrentRoomId(undefined));\n      dispatch(roomActions.createSetRoom(null));\n      dispatch(push('/'));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function createRoom(name: string, type: RoomType): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('createRoom', {\n        name,\n        type,\n      });\n      const room = respMsg.data as IRoom;\n      dispatch(enterRoom(room.id));\n      // dispatch(getRoomList());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function sendChatMessage(content: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      wsClient.request('sendChatMessage', { content });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function makeGameIsReady(ready: boolean): TReduxThunk {\n  const requestType = ready ? 'makeGameReady' : 'cancelGameReady';\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request(requestType);\n      const { user, room } = respMsg.data as {\n        user: IUser;\n        room: IRoom;\n      };\n      dispatch(roomActions.createSetCurrentRoomUsers(room.users));\n      dispatch(userActions.createSetIsReady(user.isReady));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function getGame(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n      user: { user },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('getGame');\n      const { game } = respMsg.data as {\n        user: IUser;\n        game: IGame;\n      };\n      dispatch(roomActions.createSetCurrentGame(game));\n      dispatch(roomActions.createSetCurrentRoomStatus(RoomStatus.GAMING));\n    } catch (err) {\n      dispatch(\n        globalActions.createAddNotification(\n          new Notification(err.title, undefined, NotificationType.ERROR),\n        ),\n      );\n      if (user != null && user.currentRoomId != null) {\n        dispatch(replace(`/room/${user.currentRoomId}`));\n      } else {\n        dispatch(replace('/'));\n      }\n    }\n  };\n}\n","import { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport WebsocketClient from '../../WebsocketClient';\r\nimport config from '../../config';\r\nimport { userEffects } from '../effects';\r\nimport { store } from '../../App';\r\n\r\nexport interface IReduxConnectionState {\r\n  wsClient: WebsocketClient;\r\n}\r\n\r\nconst defaultState: IReduxConnectionState = {\r\n  wsClient: new WebsocketClient({\r\n    addr: config.addr,\r\n    onopen: () => {\r\n      console.log('服务器已连接');\r\n      store.dispatch(userEffects.login() as any);\r\n    },\r\n  }),\r\n};\r\n\r\nexport default function connectionReducer(state = defaultState, action: IAction) {\r\n  return produce(state, () => {\r\n    const { type } = action;\r\n    switch (type) {\r\n\r\n    }\r\n  });\r\n}\r\n","import { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { globalActionTypes } from '../actionTypes';\r\nimport Notification from '@client/model/Notification';\r\n\r\nexport interface IReduxGlobalState {\r\n  numberOfOnlinePlayer: number;\r\n  notifications: Notification[];\r\n}\r\n\r\nconst defaultState: IReduxGlobalState = {\r\n  numberOfOnlinePlayer: 1,\r\n  notifications: [],\r\n};\r\n\r\nexport default function globalReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case globalActionTypes.SET_NUMBER_OF_ONLINE_PLAYER:\r\n        draft.numberOfOnlinePlayer = payload as number;\r\n        break;\r\n      case globalActionTypes.ADD_NOTIFICATION:\r\n        draft.notifications.push(payload as Notification);\r\n        break;\r\n      case globalActionTypes.SHIFT_NOTIFICATION:\r\n        draft.notifications.shift();\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { RoomStatus } from 'shared/constants/room';\r\nimport { IGame, IRoom, IUser } from 'shared/types';\r\nimport { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { roomActionTypes } from '../actionTypes';\r\n\r\nexport interface IReduxRoomState {\r\n  roomList: IRoom[];\r\n  currentRoom: null | IRoom;\r\n  currentGame: null | IGame;\r\n}\r\n\r\nconst defaultState: IReduxRoomState = {\r\n  roomList: [],\r\n  currentRoom: null,\r\n  currentGame: null,\r\n};\r\n\r\nexport default function roomReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case roomActionTypes.SET_ROOM_LIST:\r\n        draft.roomList = payload as IRoom[];\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_ROOM_USERS:\r\n        if (draft.currentRoom != null) {\r\n          draft.currentRoom.users = payload as IUser[];\r\n        }\r\n        break;\r\n      case roomActionTypes.SET_ROOM:\r\n        draft.currentRoom = payload as IRoom | null;\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_GAME:\r\n        draft.currentGame = payload as IGame | null;\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_ROOM_STATUS:\r\n        if (draft.currentRoom != null) {\r\n          draft.currentRoom.status = payload as RoomStatus;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { Location } from 'history';\r\n\r\nimport userReducer, { IReduxUserState } from \"./user/reducer\";\r\nimport connectionReducer, { IReduxConnectionState } from \"./connection/reducer\";\r\nimport globalReducer, { IReduxGlobalState } from \"./global/reducer\";\r\nimport roomReducer, { IReduxRoomState } from \"./room/reducer\";\r\n\r\nconst reducers = {\r\n  user: userReducer,\r\n  connection: connectionReducer,\r\n  global: globalReducer,\r\n  room: roomReducer,\r\n}\r\n\r\nconst createRootReducer = (history: any) => combineReducers({\r\n  router: connectRouter(history),\r\n  ...reducers,\r\n});\r\n\r\nexport default createRootReducer;\r\n\r\nexport interface IReduxState {\r\n    user: IReduxUserState,\r\n    connection: IReduxConnectionState,\r\n    global: IReduxGlobalState,\r\n    room: IReduxRoomState,\r\n    router: {\r\n      location: Location,\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport createRootReducer from './reducers';\r\nimport { IS_DEV_CLIENT } from '../util/constants';\r\n\r\nexport const history = createHashHistory();\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore() {\r\n  if (IS_DEV_CLIENT) {\r\n    const store = createStore(\r\n      createRootReducer(history), // root reducer with router state\r\n      composeEnhancers(\r\n        applyMiddleware(\r\n          routerMiddleware(history), // for dispatching history actions\r\n          ReduxThunk,\r\n        ),\r\n      ),\r\n    );\r\n\r\n    return store;\r\n  } else {\r\n    const store = createStore(\r\n      createRootReducer(history), // root reducer with router state\r\n      compose(\r\n        applyMiddleware(\r\n          routerMiddleware(history), // for dispatching history actions\r\n          ReduxThunk,\r\n        ),\r\n      ),\r\n    );\r\n\r\n    return store;\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function FullScreenLoading() {\r\n\r\n  return (\r\n    <div className=\"full-screen-loading\" style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import './index.scss';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport { LoopOutlined as FreshIcon } from '@material-ui/icons';\r\n\r\nimport { roomActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { IS_DEV_CLIENT } from '@client/util/constants';\r\nimport { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { IRoom } from '../../../../../shared/types';\r\nimport { RoomStatus } from '../../../../../shared/constants/room';\r\n\r\nconst statusText = {\r\n  [RoomStatus.GAMING]: '游戏中',\r\n  [RoomStatus.WAITING]: '等待中',\r\n};\r\n\r\nfunction RoomListItem({ room }: { room: IRoom }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n      <div className=\"room-list-room\">\r\n        <div className=\"room-name\">{room.name}</div>\r\n        <div className=\"room-info\">\r\n          <div className=\"room-number\">\r\n            No.{String(room.id).padStart(5, '0')}\r\n          </div>\r\n          <div className=\"room-status\">{statusText[room.status]}</div>\r\n        </div>\r\n        <div className=\"room-actions\">\r\n          <Button\r\n            onClick={() => dispatch(push(`/room/${room.id}`))}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          >\r\n            加入房间\r\n          </Button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst selectorRoomList = ({\r\n  room: { roomList },\r\n  connection: { wsClient },\r\n}: IReduxState) => ({\r\n  roomList,\r\n  wsClient,\r\n});\r\n\r\nexport default function RoomList() {\r\n  if (IS_DEV_CLIENT) {\r\n    console.log('render RoomList');\r\n  }\r\n\r\n  const { roomList, wsClient } = useSelector(selectorRoomList, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n  const freshRoomList = useCallback(() => {\r\n    dispatch(roomEffects.getRoomList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    freshRoomList();\r\n\r\n    const refreshRoomListOff = wsClient.on('refreshRoomList', respData => {\r\n      const roomList = respData as IRoom[];\r\n      dispatch(roomActions.createSetRoomList(roomList));\r\n    });\r\n\r\n    return () => {\r\n      refreshRoomListOff();\r\n    };\r\n  }, [dispatch, freshRoomList, wsClient]);\r\n\r\n  return (\r\n    <div className=\"room-list\">\r\n      <List\r\n        subheader={\r\n          <ListSubheader>\r\n            房间列表\r\n            <IconButton onClick={freshRoomList}>\r\n              <FreshIcon />\r\n            </IconButton>\r\n          </ListSubheader>\r\n        }\r\n        className=\"room-list\"\r\n      >\r\n        {roomList.length === 0 ? (\r\n          <div className=\"no-room-text\">暂无公开房间</div>\r\n        ) : (\r\n          <div className=\"room-list-content\">\r\n            {roomList.map(room => (\r\n              <RoomListItem key={room.id} room={room} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, ChangeEvent } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\n\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { userEffects } from '@client/store/effects';\r\nimport { IS_DEV_CLIENT } from '@client/util/constants';\r\n\r\nimport './index.scss';\r\n\r\nconst selectorAccountCard = ({ user: { user } }: IReduxState) => ({ user });\r\n\r\nexport default function AccountCard() {\r\n  if (IS_DEV_CLIENT) {\r\n    console.log('render AccountCard');\r\n  }\r\n  const { user } = useSelector(selectorAccountCard, shallowEqual);\r\n  const [changedUsername, setChangedUsername] = useState(\r\n    user != null ? user.username : '',\r\n  );\r\n  const updateUsername = useCallback(\r\n    (evt: ChangeEvent<HTMLInputElement>) =>\r\n      setChangedUsername(evt.target.value.trim()),\r\n    [setChangedUsername],\r\n  );\r\n\r\n  // -- 更改用户名相关逻辑\r\n  const [isShowChangeNameDialog, setIsShowChangeNameDialog] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const openChangeNameModal = useCallback(() => setIsShowChangeNameDialog(true), [\r\n    setIsShowChangeNameDialog,\r\n  ]);\r\n  const closeChangeName = useCallback(() => setIsShowChangeNameDialog(false), [\r\n    setIsShowChangeNameDialog,\r\n  ]);\r\n  const confirmChangeUsername = useCallback(() => {\r\n    const isEmptyName = changedUsername.trim().length === 0;\r\n    if (user != null && !isEmptyName && user.username !== changedUsername) {\r\n      // 只有名字不为空，且前后发生变化, 才发送请求\r\n      dispatch(userEffects.changeUsername(changedUsername));\r\n    }\r\n    if (!isEmptyName) closeChangeName();\r\n  }, [user, changedUsername, dispatch, closeChangeName]);\r\n\r\n  if (user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isShowChangeNameDialog} onClose={closeChangeName}>\r\n        <DialogTitle>更改用户名</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            placeholder=\"用户名\"\r\n            value={changedUsername}\r\n            onChange={updateUsername}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button disabled={changedUsername.trim().length === 0} onClick={confirmChangeUsername}>确定</Button>\r\n          <Button onClick={closeChangeName}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"user-info\">\r\n        <Card>\r\n          <CardHeader\r\n            title={`你好，${user.username}！`}\r\n            subheader={`登陆于${new Date().toLocaleTimeString()}`}\r\n            avatar={<Avatar>{user.username[0]}</Avatar>}\r\n            action={\r\n              <IconButton onClick={openChangeNameModal}>\r\n                <MoreIcon />\r\n              </IconButton>\r\n            }\r\n          ></CardHeader>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { SearchOutlined as SearchIcon} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\n\r\n\r\nconst GameLobbyHeader = React.memo(function GameLobbyHeader () {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowFindRoom, setIsShowFindRoom] = useState(false);\r\n  const closeFindRoom = useCallback(() => setIsShowFindRoom(false), [setIsShowFindRoom]);\r\n\r\n  const [roomId, setRoomId] = useState('');\r\n  const jumoToFindRoom = useCallback(() => {\r\n    if (roomId.trim().length === 0) return;\r\n    dispatch(push(`/room/${roomId}`));\r\n  }, [roomId, dispatch]);\r\n\r\n  return (\r\n  <>\r\n    <Dialog open={isShowFindRoom} onClose={closeFindRoom}>\r\n        <DialogTitle>查找房间</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            placeholder=\"房间号\"\r\n            value={roomId}\r\n            onChange={evt => setRoomId(evt.target.value.trim())}\r\n            onKeyUp={createHandleOnKeyEnterUp(jumoToFindRoom)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button disabled={roomId.trim().length === 0} onClick={jumoToFindRoom}>确定</Button>\r\n          <Button onClick={closeFindRoom}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    <AppBar\r\n      style={{\r\n        boxShadow: 'none',\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar>\r\n        <Button onClick={() => setIsShowFindRoom(true)} color=\"inherit\">\r\n          <SearchIcon />\r\n          查找房间\r\n        </Button>\r\n        <Typography\r\n          style={{\r\n            flex: 1,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          你画我猜-游戏大厅\r\n        </Typography>\r\n        <Button onClick={() => dispatch(push('/create-room'))} color=\"inherit\">\r\n          创建房间\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </>\r\n  );\r\n});\r\n\r\nexport default GameLobbyHeader;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useDocumentTitle(title: string) {\r\n  const prevTitleRef = useRef('');\r\n  useEffect(() => {\r\n    prevTitleRef.current = document.title;\r\n    document.title = title;\r\n    return () => {\r\n      document.title = prevTitleRef.current;\r\n    }\r\n  }, [title]);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { globalEffects } from '@client/store/effects';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\n\r\nimport RoomList from './components/RoomList';\r\nimport AccountCard from './components/AccountCard';\r\nimport GameLobbyHeader from './components/GameLobbyHeader';\r\n\r\nimport './index.scss';\r\nimport { useDocumentTitle } from '@client/hooks';\r\n\r\nconst indexSelector = ({\r\n  global: { numberOfOnlinePlayer },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  numberOfOnlinePlayer,\r\n  user,\r\n});\r\n\r\nexport default function GameLobby() {\r\n  useDocumentTitle('游戏大厅');\r\n\r\n  const { numberOfOnlinePlayer, user } = useSelector(\r\n    indexSelector,\r\n    shallowEqual,\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(globalEffects.getNumberOfOnlinePlayer());\r\n  }, [dispatch]);\r\n\r\n\r\n  if (user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-game-lobby\">\r\n      <div className=\"view-game-lobby-header\">\r\n        <GameLobbyHeader />\r\n      </div>\r\n      <div className=\"view-game-lobby-main\">\r\n        <AccountCard />\r\n        <div className=\"room-list-wrapper\">\r\n          <RoomList />\r\n        </div>\r\n      </div>\r\n      <div className=\"view-game-lobby-footer\">\r\n        <div className=\"number-of-online-player\">\r\n          当前在线人数: {numberOfOnlinePlayer}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { IconButton, Snackbar } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport { globalActions } from '@client/store/actions';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport React, { useCallback } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst selectorNotificationPanel = ({ global: { notifications } }: IReduxState) => ({\r\n  notifications,\r\n});\r\n\r\nconst NotificationPanel = React.memo(function NotificationPanel() {\r\n  const { notifications } = useSelector(selectorNotificationPanel, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const shiftNotification = useCallback(() => {\r\n    dispatch(globalActions.createShiftNotification());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n    {notifications.map(n => (\r\n      <Snackbar\r\n      key={n.id}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      // key={`${vertical},${horizontal}`}\r\n      open={true}\r\n      onClose={shiftNotification}\r\n      autoHideDuration={4000}\r\n      action={\r\n        <IconButton onClick={shiftNotification} key=\"close\" aria-label=\"close\" color=\"inherit\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      }\r\n      message={<span>{n.detail == null ? n.title : `${n.title}-${n.detail}`}</span>}\r\n    />\r\n    ))}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NotificationPanel;\r\n","import './index.scss';\r\n\r\nimport { useDocumentTitle } from '@client/hooks';\r\nimport { globalEffects, roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ArrowBackOutlined as BackIcon } from '@material-ui/icons';\r\nimport { goBack } from 'connected-react-router';\r\nimport React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { RoomType } from '../../../../shared/constants/room';\r\n\r\nconst indexSelector = ({\r\n  global: { numberOfOnlinePlayer },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  numberOfOnlinePlayer,\r\n  username: user == null ? '' : user.username,\r\n});\r\n\r\nexport default function CreateRoom() {\r\n  useDocumentTitle('创建房间');\r\n\r\n  const { username } = useSelector(indexSelector, shallowEqual);\r\n  const defaultRoomName = `${username}的房间`;\r\n  const [roomName, setRoomName] = useState(defaultRoomName);\r\n  const [roomType, setRoomType] = useState(RoomType.PUBLIC);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(globalEffects.getNumberOfOnlinePlayer());\r\n  }, [dispatch]);\r\n\r\n  const createRoom = useCallback(() => {\r\n    dispatch(roomEffects.createRoom(roomName, roomType));\r\n  }, [roomName, roomType, dispatch]);\r\n\r\n  const [isUsingDefaultRoomName, setIsUsingDefaultRoomName] = useState(true);\r\n  const updateRoomName = useCallback((evt: ChangeEvent<HTMLInputElement>) => {\r\n    setIsUsingDefaultRoomName(false);\r\n    setRoomName(evt.target.value);\r\n  }, [setRoomName, setIsUsingDefaultRoomName]);\r\n\r\n\r\n  return (\r\n    <div className=\"view-room-creator\">\r\n      <div className=\"view-room-creator-header\">\r\n        <AppBar\r\n          style={{\r\n            boxShadow: 'none',\r\n          }}\r\n          position=\"static\"\r\n        >\r\n          <Toolbar>\r\n            <Button onClick={() => dispatch(goBack())} color=\"inherit\">\r\n              <BackIcon />\r\n              返回\r\n            </Button>\r\n            <Typography\r\n              style={{\r\n                flex: 1,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              创建房间\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div className=\"view-room-creator-main\">\r\n        <FormControl fullWidth>\r\n          <List>\r\n            <ListItem>\r\n              <TextField\r\n                label=\"房间名\"\r\n                fullWidth\r\n                placeholder=\"请输入房间名字\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={isUsingDefaultRoomName ? defaultRoomName : roomName}\r\n                onChange={updateRoomName}\r\n              />\r\n            </ListItem>\r\n            <RadioGroup\r\n              value={roomType}\r\n              onChange={evt => setRoomType(evt.target.value as RoomType)}\r\n              name=\"room-type\"\r\n            >\r\n              <ListItem button onClick={() => setRoomType(RoomType.PUBLIC)}>\r\n                <FormControlLabel\r\n                  value={RoomType.PUBLIC}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"公开\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </ListItem>\r\n              <ListItem button onClick={() => setRoomType(RoomType.PRIVATE)}>\r\n                <FormControlLabel\r\n                  value={RoomType.PRIVATE}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"私人(不显示在游戏大厅)\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </ListItem>\r\n            </RadioGroup>\r\n            <ListItem>\r\n              <Button onClick={createRoom} fullWidth variant=\"outlined\">\r\n                创建房间\r\n              </Button>\r\n            </ListItem>\r\n          </List>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './index.scss';\r\n\r\nimport { Button, List, ListItem, TextField } from '@material-ui/core';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ChattingMessage from '../../../../../../shared/models/ChattingMessage';\r\n\r\nconst selectorRoomMessage = ({\r\n  connection: { wsClient },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  wsClient,\r\n  username: user == null ? '' : user.username,\r\n  userId: user == null ? '' : user.id,\r\n});\r\n\r\nfunction RoomMessage() {\r\n  const { wsClient, userId } = useSelector(\r\n    selectorRoomMessage,\r\n    shallowEqual,\r\n  );\r\n  const [chatMsgList, setChatMsgList] = useState<ChattingMessage[]>([]);\r\n  useEffect(() => {\r\n    const offReciveChatMessage = wsClient.on('reciveChatMessage', (_, msg) => {\r\n      const chatMsg = msg.data as ChattingMessage;\r\n      setChatMsgList(prev => [chatMsg].concat(...prev));\r\n    });\r\n    return offReciveChatMessage;\r\n  }, [wsClient, setChatMsgList]);\r\n\r\n  // chat msg 相关\r\n\r\n  const [msgContent, setMsgContent] = useState('');\r\n  const isValidatedContentt = msgContent.trim().length !== 0;\r\n  const dispatch = useDispatch();\r\n  const sendChatMessage = useCallback(() => {\r\n    if (!isValidatedContentt) return;\r\n    setMsgContent('');\r\n    dispatch(roomEffects.sendChatMessage(msgContent));\r\n  }, [isValidatedContentt, msgContent, dispatch, setMsgContent]);\r\n\r\n  return (\r\n    <div className=\"room-message\">\r\n      <List className=\"room-message-list\">\r\n        {chatMsgList.map(cm => (\r\n          <ListItem className=\"room-message-list-item\" key={cm.id}>\r\n            <div className=\"room-message-speaker\">\r\n              <span className=\"room-message-speaker-name\">\r\n                {cm.speaker.id === userId ? '我' : cm.speaker.name}:\r\n              </span>\r\n\r\n            </div>\r\n            <div className=\"room-message-content\">{cm.content}</div>\r\n            <div className=\"room-message-speaker-time\">\r\n              {new Date(cm.timestamp).toLocaleTimeString()}\r\n            </div>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <List className=\"room-message-sender\">\r\n        <ListItem>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            value={msgContent}\r\n            onChange={evt => setMsgContent(evt.target.value)}\r\n            onKeyUp={createHandleOnKeyEnterUp(sendChatMessage)}\r\n            fullWidth\r\n          />\r\n          &nbsp;\r\n          <Button\r\n            onClick={sendChatMessage}\r\n            disabled={!isValidatedContentt}\r\n            variant=\"text\"\r\n          >\r\n            发送\r\n          </Button>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomMessage;\r\n","import './index.scss';\r\n\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport { ArrowBackOutlined as BackIcon } from '@material-ui/icons';\r\nimport { RoomStatus, RoomType } from '../../../../shared/constants/room';\r\nimport { IGame, IRoom, IUser } from 'shared/types';\r\nimport { useDocumentTitle } from '@client/hooks';\r\nimport { roomActions, userActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { batch as batchDispatch, shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\n\r\nimport RoomMessage from './components/RoomMessage';\r\n\r\nconst selectorPlayingRoom = ({\r\n  room: { currentRoom },\r\n  user: { user },\r\n  connection: { wsClient },\r\n}: IReduxState) => ({\r\n  wsClient,\r\n  currentRoom,\r\n  isReady: user == null ? false : user.isReady,\r\n});\r\n\r\nconst roomTypeTextDict = {\r\n  [RoomType.PRIVATE]: '(私人)',\r\n  [RoomType.PUBLIC]: '',\r\n};\r\n\r\nexport default function PlayingRoom() {\r\n  useDocumentTitle('游玩房间');\r\n  const { currentRoom, wsClient, isReady } = useSelector(\r\n    selectorPlayingRoom,\r\n    shallowEqual,\r\n  );\r\n\r\n  const { roomId: rawRoomId } = useParams<{ roomId: string }>();\r\n  const roomId = parseInt(rawRoomId, 10);\r\n\r\n  const dispatch = useDispatch();\r\n  const toggleGameReady = useCallback(() => {\r\n    dispatch(roomEffects.makeGameIsReady(!isReady));\r\n  }, [isReady, dispatch]);\r\n  useEffect(() => {\r\n    const refreshRoomInfoOff = wsClient.on('refreshRoomInfo', (_, msg) => {\r\n      const room = msg.data as IRoom;\r\n      dispatch(roomActions.createSetRoom(room));\r\n    });\r\n    const allPlayerReadyOff = wsClient.on('startGame', (_, msg) => {\r\n      const { user, game } = msg.data as {\r\n        user: IUser,\r\n        game: IGame,\r\n      };\r\n      batchDispatch(() => {\r\n        dispatch(roomActions.createSetCurrentGame(game));\r\n        dispatch(roomActions.createSetCurrentRoomStatus(RoomStatus.GAMING));\r\n        dispatch(userActions.createSetIsGaming(user.isGaming));\r\n        dispatch(push(`/game/${roomId}`));\r\n      })\r\n\r\n    });\r\n    return () => {\r\n      refreshRoomInfoOff();\r\n      allPlayerReadyOff();\r\n    };\r\n  }, [roomId, wsClient, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (Number.isNaN(roomId)) return;\r\n    dispatch(roomEffects.enterRoom(roomId));\r\n  }, [dispatch, roomId]);\r\n\r\n  if (rawRoomId == null) return <Redirect to=\"/\" />;\r\n  if (currentRoom == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-playing-room\">\r\n      <div className=\"view-playing-room-header\">\r\n        <AppBar\r\n          style={{\r\n            boxShadow: 'none',\r\n          }}\r\n          position=\"static\"\r\n        >\r\n          <Toolbar>\r\n            <Button\r\n              onClick={() => {\r\n                console.log('cliuck');\r\n                dispatch(roomEffects.leaveRoom());\r\n              }}\r\n              color=\"inherit\"\r\n            >\r\n              <BackIcon />\r\n              离开房间\r\n            </Button>\r\n            <Typography\r\n              style={{\r\n                flex: 1,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {currentRoom.name}\r\n              {roomTypeTextDict[currentRoom.type]}\r\n            </Typography>\r\n            <Button color=\"inherit\">\r\n              房间号: {String(currentRoom.id).padStart(5, '0')}\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div className=\"view-playing-room-main\">\r\n        <div className=\"player-list\">\r\n          {Array(8)\r\n            .fill(null)\r\n            .map((_, index) => {\r\n              if (index < currentRoom.users.length) {\r\n                const user = currentRoom.users[index];\r\n                return (\r\n                  <div key={index} className=\"player-list-item active\">\r\n                    <div className=\"player-list-item-avatar\">\r\n                      {user.username[0]}\r\n                    </div>\r\n                    <div className=\"player-list-item-username\">\r\n                      {user.username}({user.isReady ? '准备' : '未准备'})\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <div key={index} className=\"player-list-item\">\r\n                  <div className=\"player-list-item-avatar\">空</div>\r\n                  <div className=\"player-list-item-username\">等待加入</div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"start-game-button-wrapper\">\r\n          <Button onClick={toggleGameReady} className=\"start-game-button\" variant=\"outlined\" fullWidth>\r\n            {isReady ? '取消准备' : '准备'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"room-message-wrapper\">\r\n          <RoomMessage />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { replace } from 'connected-react-router';\r\nimport { IReduxState } from '../store/reducers';\r\n\r\nconst selectorAuthLoyout = ({ user: { user }, router: { location: { pathname } } }: IReduxState) => ({\r\n  user,\r\n  pathname,\r\n});\r\n\r\nexport default function AuthLoyout({ children}: {children: any}) {\r\n\r\n  const { user, pathname } = useSelector(selectorAuthLoyout, shallowEqual);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user == null) return;\r\n\r\n    if (user.isGaming && user.currentRoomId == null) {\r\n      console.error('用户正在游戏中', '但找不到房间号');\r\n    }\r\n\r\n    if (user.isGaming && user.currentRoomId != null) {\r\n      const targetPath = `/game/${user.currentRoomId}`;\r\n      if (pathname !== targetPath) dispatch(replace(targetPath));\r\n    } else if (user.currentRoomId != null) {\r\n      const targetPath = `/room/${user.currentRoomId}`;\r\n      if (pathname !== targetPath) dispatch(replace(targetPath));\r\n    }\r\n  }, [user, pathname, dispatch]);\r\n\r\n\r\n  return children;\r\n}\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\n\r\nexport default function AvatarBox({\r\n  avatar,\r\n  text,\r\n}: {\r\n  avatar?: any;\r\n  text: string;\r\n}) {\r\n  return (\r\n    <div className=\"avatar-box\">\r\n      <div className=\"avatar-box-avatar\">{text.length ? text[0] : 'A'}</div>\r\n      <div className=\"avatar-box-text\">{text}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nimport './index.scss';\r\nimport WebsocketClient from '@client/WebsocketClient';\r\nimport RequestMessage from '../../../../../../shared/models/RequestMessage';\r\n\r\n// 以 375宽 为标准\r\n\r\nfunction AnswerInputBox({ wsClient }: {\r\n  wsClient: WebsocketClient,\r\n}) {\r\n\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  const sendGuessAnswer = useCallback(() => {\r\n    if (answer.length === 0) return;\r\n    const reqMsg = new RequestMessage(answer, 'guessAnswer');\r\n    wsClient.sendMessage(reqMsg);\r\n    setAnswer('');\r\n  }, [answer, wsClient, setAnswer]);\r\n\r\n  return (\r\n    <div className=\"answer-input-box\">\r\n      <TextField value={answer} onChange={evt => setAnswer(evt.target.value.trim())} placeholder=\"答案\" className=\"answer-input\" variant=\"outlined\" type=\"text\" />\r\n      <Button disabled={answer.length === 0} variant=\"outlined\" onClick={sendGuessAnswer}>发送</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerInputBox;\r\n","export enum DrawActionType {\r\n  START_DRAW_LINE = 'startDrawLine',\r\n  DRAW_LINE_TO = 'drawLineTo',\r\n  END_DRAW_LINE = 'endDrawLine',\r\n  DRAW_IMAGE = 'drawImage',\r\n  CLEAR_CANVAS = 'clearCanvas',\r\n  // SET_OPTIONS = 'setOptions',\r\n}\r\n\r\n\r\nexport default class DrawAction {\r\n  constructor(public type: DrawActionType, public payload?: any) {}\r\n}\r\n","import Point from './Point';\r\n\r\nexport interface ICanvasControllerSetting {\r\n  penSize?: number;\r\n  penColor?: string;\r\n}\r\n\r\nexport default class CanvasController {\r\n  public ctx: CanvasRenderingContext2D;\r\n  public canvasEl: HTMLCanvasElement;\r\n  get penColor() {\r\n    return this.ctx.strokeStyle as string;\r\n  }\r\n  set penColor(color: string) {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n  }\r\n  get penSize() {\r\n    return this.ctx.lineWidth;\r\n  }\r\n  set penSize(size: number) {\r\n    this.ctx.lineWidth = size;\r\n  }\r\n  constructor(canvasEl?: HTMLCanvasElement, options?: {\r\n    penColor?: string;\r\n    penSize?: number;\r\n  }) {\r\n    this.canvasEl =\r\n      canvasEl == null ? document.createElement('canvas') : canvasEl;\r\n    this.ctx = this.canvasEl.getContext('2d') as CanvasRenderingContext2D;\r\n    this.init();\r\n    if (options != null) {\r\n      if (options.penColor != null) this.setPenColor(options.penColor);\r\n      if (options.penSize != null) this.setPenSize(options.penSize);\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.ctx.fillStyle = this.penColor;\r\n    this.ctx.strokeStyle = this.penColor;\r\n    this.ctx.lineWidth = this.penSize;\r\n  }\r\n\r\n  // new\r\n\r\n  getSetting(): Required<ICanvasControllerSetting> {\r\n    return {\r\n      penSize: this.penSize,\r\n      penColor: this.penColor,\r\n    }\r\n  }\r\n\r\n  setting(s: ICanvasControllerSetting) {\r\n    if (s.penColor != null) this.penColor = s.penColor;\r\n    if (s.penSize != null) this.penSize = s.penSize;\r\n  }\r\n\r\n  drawImage(image: HTMLImageElement | string) {\r\n    // console.log('image', image);\r\n    if (typeof image === 'string') {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        this.clearCanvas();\r\n        this.drawImage(img);\r\n      };\r\n      img.src = image;\r\n    } else {\r\n      this.ctx.drawImage(image, 0, 0);\r\n    }\r\n  }\r\n\r\n  drawPoint(to: Point, r: number = this.penSize / 2) {\r\n    const { ctx } = this;\r\n    console.log('drawPoint', 'r',r , 'lineWidth', this.ctx.lineWidth);\r\n    ctx.beginPath();\r\n    ctx.arc(to.x, to.y, r, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    // ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  getSnapshot() {\r\n    return this.canvasEl.toDataURL('image/jpeg');\r\n  }\r\n\r\n  startDrawLine(startPoint: Point) {\r\n    const sp = startPoint;\r\n    const { ctx } = this;\r\n    ctx.beginPath();\r\n    ctx.moveTo(sp.x, sp.y);\r\n  }\r\n\r\n  drawLineTo(to: Point) {\r\n    // console.log('to', to);\r\n    const { ctx } = this;\r\n    ctx.lineTo(to.x, to.y);\r\n    ctx.stroke();\r\n  }\r\n\r\n  mount(elementSelector: string) {\r\n    const el = document.querySelector(elementSelector);\r\n    (window as any).el = el;\r\n    console.log(el, elementSelector);\r\n    if (el != null) {\r\n      el.append(this.canvasEl);\r\n      this.canvasEl.height = el.clientHeight;\r\n      this.canvasEl.width = el.clientWidth;\r\n      this.clearCanvas();\r\n    } else {\r\n      throw new Error(`无法通过 ${elementSelector} 找到相应的元素，请确定选择器书写正确`);\r\n    }\r\n  }\r\n\r\n  clearCanvas() {\r\n    const prevFillStyle = this.ctx.fillStyle;\r\n    this.ctx.fillStyle = '#fff';\r\n    this.ctx.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    this.ctx.fillStyle = prevFillStyle;\r\n  }\r\n\r\n  // end new\r\n\r\n  setOptions(op: {\r\n    penColor?: string;\r\n    penSize?: number;\r\n  }) {\r\n    if (op.penColor != null) this.setPenColor(op.penColor);\r\n    if (op.penSize != null) this.setPenSize(op.penSize);\r\n  }\r\n\r\n  getOptions() {\r\n    return {\r\n      penColor: this.penColor,\r\n      penSize: this.penSize,\r\n    }\r\n  }\r\n\r\n  setPenSize(size: number) {\r\n    this.ctx.lineWidth = size;\r\n  }\r\n\r\n  setPenColor(color: string) {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n  }\r\n\r\n\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Popover } from '@material-ui/core';\r\nimport {\r\n  ColorLens as ColorIcon,\r\n  FiberManualRecord as CircleIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport CanvasController from '@client/controller/CanvasController';\r\n\r\nconst colors = [\r\n  '#000',\r\n  '#F44336',\r\n  '#E91E63',\r\n  '#9C27B0',\r\n  '#2196F3',\r\n  '#48C6FF',\r\n  '#4CAF50',\r\n  '#8BC34A',\r\n  '#FFEB3B',\r\n  '#FFC107',\r\n  '#FF9800',\r\n  '#795548',\r\n  '#607D8B',\r\n  '#666',\r\n  '#999',\r\n  '#BBB',\r\n  '#DDD',\r\n  '#FFF',\r\n];\r\n\r\nexport default function SetPenColorButton({\r\n  anchorEl,\r\n  penColor,\r\n  setPenColor,\r\n}: {\r\n  draw: CanvasController;\r\n  anchorEl: Element | null;\r\n  penColor: string;\r\n  setPenColor: (color: string) => void;\r\n}) {\r\n  const [isShowSetPenColor, setIsShowSetPenColor] = useState(false);\r\n  const updatePenColor = useCallback(\r\n    (color: string) => {\r\n      setPenColor(color);\r\n      setIsShowSetPenColor(false);\r\n    },\r\n    [setPenColor, setIsShowSetPenColor],\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{\r\n          flex: '1',\r\n        }}\r\n        onClick={() => setIsShowSetPenColor(prev => !prev)}\r\n        className=\"canvas-operation-list-item\"\r\n      >\r\n        <ColorIcon style={{\r\n          color: penColor,\r\n        }} fontSize=\"large\" />\r\n      </IconButton>\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        onClose={() => setIsShowSetPenColor(false)}\r\n        open={isShowSetPenColor}\r\n      >\r\n        <div className=\"pen-color-wrapper\">\r\n          {colors.map(color => (\r\n            <IconButton onClick={() => updatePenColor(color)} key={color}>\r\n              <CircleIcon style={{\r\n                border: '1px solid #000',\r\n                color,\r\n              }} />\r\n            </IconButton>\r\n          ))}\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function PlainLine(props: {\r\n  length?: number;\r\n  width?: number;\r\n  vertical?: boolean;\r\n  color?: string;\r\n}) {\r\n  let { length, width, vertical, color  } = props;\r\n  if (length == null) length = 24;\r\n  if (width == null) width = 2;\r\n  if (vertical == null) vertical = false;\r\n  if (color == null) color = '#000';\r\n  if (vertical) {\r\n    [length, width] = [width, length];\r\n  }\r\n  return (\r\n    <div\r\n      className=\"plain-line\"\r\n      style={{\r\n        height: width,\r\n        width: length,\r\n        backgroundColor: color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Popover, Slider } from '@material-ui/core';\r\n\r\nimport PlainLine from '@client/ui/PlainLine';\r\n\r\nexport default function SetPenSizeButton({\r\n  anchorEl,\r\n  penColor,\r\n  penSize,\r\n  setPenSize,\r\n}: {\r\n  anchorEl: Element | null;\r\n  penSize: number;\r\n  setPenSize: (size: number) => void;\r\n  penColor: string;\r\n}) {\r\n  const updatePenSize = useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      const size = value as number;\r\n      setPenSize(size);\r\n    },\r\n    [setPenSize],\r\n  );\r\n  const [isShowSetPenSize, setIsShowSetPenSize] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{\r\n          flex: '1',\r\n        }}\r\n        onClick={() => setIsShowSetPenSize(prev => !prev)}\r\n        className=\"canvas-operation-list-item\"\r\n      >\r\n        <PlainLine color={penColor} length={30} width={penSize} />\r\n      </IconButton>\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        anchorEl={anchorEl == null ? undefined : anchorEl}\r\n        onClose={() => setIsShowSetPenSize(false)}\r\n        open={isShowSetPenSize}\r\n      >\r\n        <div className=\"pen-size-slider-wrapper\">\r\n          <Slider\r\n            style={{\r\n              width: '80vw',\r\n            }}\r\n            value={penSize}\r\n            onChange={updatePenSize}\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            marks\r\n            min={1}\r\n            max={20}\r\n          />\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import './Canvas.scss';\r\n\r\nimport CanvasController, { ICanvasControllerSetting } from '@client/controller/CanvasController';\r\nimport Point from '@client/controller/Point';\r\nimport DrawAction, { DrawActionType } from '@client/model/DrawAction';\r\nimport WebsocketClient from '@client/WebsocketClient';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Redo as RedoIcon, RestoreFromTrash as ClearIcon, Undo as UndoIcon } from '@material-ui/icons';\r\nimport React, { createRef, TouchEvent } from 'react';\r\n\r\nimport RequestMessage from '../../../../../../shared/models/RequestMessage';\r\nimport SetPenColorButton from './SetPenColorButton';\r\nimport SetPenSizeButton from './SetPenSizeButton';\r\nimport { roomActions } from '@client/store/actions';\r\nimport { IGame } from 'shared/types';\r\n\r\n// import RequestMessage from '@client/WebsocketClient/models/RequestMessage';\r\n\r\ninterface ICanvasState {\r\n  futureDrawings: string[];\r\n  pastDrawings: string[];\r\n  penColor: string;\r\n  penSize: number;\r\n}\r\n\r\nexport default class Canvas extends React.PureComponent<\r\n  {\r\n    isSelfPlaying: boolean;\r\n    wsClient: WebsocketClient;\r\n    initialDrawing?: string;\r\n  },\r\n  ICanvasState\r\n> {\r\n  state: ICanvasState = {\r\n    futureDrawings: [],\r\n    pastDrawings: [],\r\n    penColor: '#000',\r\n    penSize: 1,\r\n  };\r\n  posElRef = createRef<HTMLDivElement>();\r\n  draw = new CanvasController();\r\n  // warn 维持一个currentDrawing变量,每次都调用toDataUrl是非常消耗性能的操作\r\n\r\n  // 生命周期\r\n\r\n  //\r\n  changePlayingUserOff: undefined | (() => void);\r\n  drawActionOff: undefined | (() => void);\r\n\r\n  componentDidMount() {\r\n    this.draw.mount('#id-canvas');\r\n    this.bindEvents();\r\n    const { initialDrawing } = this.props;\r\n    if (initialDrawing !== undefined) {\r\n      this.draw.drawImage(initialDrawing);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.changePlayingUserOff && this.changePlayingUserOff();\r\n    this.drawActionOff && this.drawActionOff();\r\n  }\r\n\r\n  bindEvents() {\r\n    const { wsClient } = this.props;\r\n    const { draw } = this;\r\n    this.changePlayingUserOff = wsClient.on('changePlayingUser', () => { // 清除别人在画布上的东西\r\n      this.clearCanvas();\r\n      this.setState({\r\n        futureDrawings: [],\r\n        pastDrawings: [],\r\n      });\r\n    });\r\n\r\n    this.drawActionOff = wsClient.on('drawAction', respMsgData => {\r\n      // if (!this.props.isSelfPlaying) return; // 不能写上面，闭包导致无法取得变量最新值\r\n      const drawAction = respMsgData as DrawAction;\r\n      const { type, payload } = drawAction;\r\n      switch (type) {\r\n        case DrawActionType.START_DRAW_LINE:\r\n          {\r\n            const { point, setting } = payload as {\r\n              point: Point;\r\n              setting?: ICanvasControllerSetting;\r\n            };\r\n            let prevSetting = draw.getSetting();\r\n            if (setting != null) draw.setting(setting);\r\n            draw.drawPoint(point);\r\n            draw.startDrawLine(point);\r\n            draw.setting(prevSetting);\r\n          }\r\n          break;\r\n        case DrawActionType.DRAW_LINE_TO:\r\n          {\r\n            const { point, setting } = payload as {\r\n              point: Point;\r\n              setting?: ICanvasControllerSetting;\r\n            };\r\n            let prevSetting = draw.getSetting();\r\n            if (setting != null) draw.setting(setting);\r\n            draw.drawLineTo(point);\r\n            draw.setting(prevSetting);\r\n          }\r\n          break;\r\n        case DrawActionType.CLEAR_CANVAS:\r\n          draw.clearCanvas();\r\n          break;\r\n        case DrawActionType.DRAW_IMAGE:\r\n          {\r\n            const imgData = payload as string;\r\n            draw.drawImage(imgData);\r\n          }\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  // -- end 生命周期\r\n\r\n  // 辅助函数\r\n\r\n  sendDrawActionToServer(\r\n    type: DrawActionType,\r\n    payload?: unknown,\r\n    extral?: { newestDrawing?: string },\r\n  ) {\r\n    const { wsClient, isSelfPlaying } = this.props;\r\n    if (!isSelfPlaying) return;\r\n    const drawAction = new DrawAction(type, payload);\r\n    const reqMsg = new RequestMessage(\r\n      {\r\n        drawAction,\r\n        ...(extral !== undefined ? extral : {}),\r\n      },\r\n      'drawAction',\r\n    );\r\n    wsClient.sendMessage(reqMsg);\r\n  }\r\n\r\n  getPointFromEvent = (evt: TouchEvent): Point => {\r\n    // 获得相对画布左上角的坐标\r\n    const { touches, target } = evt;\r\n    const t = touches[0];\r\n    const { clientX, clientY } = t;\r\n    const result = {\r\n      x: clientX - (target as HTMLCanvasElement).offsetLeft,\r\n      y: clientY - (target as HTMLCanvasElement).offsetTop,\r\n    };\r\n    return result;\r\n  };\r\n\r\n  // 画画相关\r\n\r\n  snapshotCurrentDrawing() {\r\n    const curDrawing = this.draw.getSnapshot();\r\n    this.setState(prevState => ({\r\n      pastDrawings: prevState.pastDrawings.concat(curDrawing),\r\n    }));\r\n  }\r\n\r\n  startDrawLine(p: Point) {\r\n    const { draw } = this;\r\n    const { futureDrawings } = this.state;\r\n    if (futureDrawings.length !== 0) {\r\n      this.setState({\r\n        futureDrawings: [],\r\n      });\r\n    }\r\n\r\n    draw.drawPoint(p);\r\n    draw.startDrawLine(p);\r\n\r\n    this.sendDrawActionToServer(DrawActionType.START_DRAW_LINE, {\r\n      point: p,\r\n      setting: draw.getSetting(),\r\n    });\r\n  }\r\n\r\n  drawLineTo(to: Point) {\r\n    const { draw } = this;\r\n    draw.drawLineTo(to);\r\n\r\n    this.sendDrawActionToServer(DrawActionType.DRAW_LINE_TO, {\r\n      point: to,\r\n      setting: draw.getSetting(),\r\n    });\r\n  }\r\n\r\n  endDrawing = () => {\r\n    this.sendDrawActionToServer(DrawActionType.END_DRAW_LINE, undefined, {\r\n      newestDrawing: this.draw.getSnapshot(),\r\n    });\r\n  };\r\n\r\n  clearCanvas = () => {\r\n    this.snapshotCurrentDrawing();\r\n\r\n    this.draw.clearCanvas();\r\n    this.sendDrawActionToServer(DrawActionType.CLEAR_CANVAS, {\r\n      newestDrawing: this.draw.getSnapshot(),\r\n    });\r\n  };\r\n\r\n  undoDrawing = () => {\r\n    const { draw } = this;\r\n    const { pastDrawings, futureDrawings } = this.state;\r\n    if (pastDrawings.length === 0) return;\r\n    const pastDrawing = pastDrawings.pop() as string;\r\n    draw.drawImage(pastDrawing);\r\n\r\n    this.setState({\r\n      pastDrawings: [...pastDrawings],\r\n      futureDrawings: [...futureDrawings, draw.getSnapshot()],\r\n    });\r\n\r\n    this.sendDrawActionToServer(DrawActionType.DRAW_IMAGE, pastDrawing, {\r\n      newestDrawing: pastDrawing,\r\n    });\r\n  };\r\n\r\n  redoDrawing = () => {\r\n    const { draw } = this;\r\n    const { pastDrawings, futureDrawings } = this.state;\r\n    if (futureDrawings.length === 0) return;\r\n\r\n    const futureDrawing = futureDrawings.pop() as string;\r\n    draw.drawImage(futureDrawing);\r\n\r\n    this.setState({\r\n      pastDrawings: [...pastDrawings, draw.getSnapshot()],\r\n      futureDrawings: [...futureDrawings],\r\n    });\r\n\r\n    this.sendDrawActionToServer(DrawActionType.DRAW_IMAGE, futureDrawing, {\r\n      newestDrawing: futureDrawing,\r\n    });\r\n  };\r\n\r\n  setPenColor = (penColor: string) => {\r\n    this.draw.penColor = penColor;\r\n    this.setState({ penColor });\r\n  };\r\n\r\n  setPenSize = (penSize: number) => {\r\n    this.draw.penSize = penSize;\r\n    this.setState({ penSize });\r\n  };\r\n\r\n  // -- end 辅助函数\r\n\r\n  handleTouchStart = (evt: TouchEvent) => {\r\n    this.snapshotCurrentDrawing();\r\n\r\n    const p = this.getPointFromEvent(evt);\r\n    this.startDrawLine(p);\r\n\r\n    // this.startDrawLine(this.getPointFromEvent(evt));\r\n  };\r\n\r\n  handleTouchMove = (evt: TouchEvent) => {\r\n    const p = this.getPointFromEvent(evt);\r\n    this.drawLineTo(p);\r\n  };\r\n\r\n  handleTouchEnd = (evt: TouchEvent) => {\r\n    this.endDrawing();\r\n  };\r\n\r\n  render() {\r\n    const { isSelfPlaying } = this.props;\r\n    const { futureDrawings, pastDrawings, penColor, penSize } = this.state;\r\n    const { draw, setPenColor, setPenSize } = this;\r\n    return (\r\n      <div>\r\n        <div className=\"canvas-wrapper\">\r\n          <div\r\n            id=\"id-canvas\"\r\n            style={{\r\n              width: 375,\r\n              height: 300,\r\n            }}\r\n            onTouchStart={isSelfPlaying ? this.handleTouchStart : undefined}\r\n            onTouchMove={isSelfPlaying ? this.handleTouchMove : undefined}\r\n            onTouchEnd={isSelfPlaying ? this.handleTouchEnd : undefined}\r\n          />\r\n        </div>\r\n        {!isSelfPlaying ? null : (\r\n          <div ref={this.posElRef} className=\"game-canvas-operations\">\r\n            <SetPenColorButton\r\n              anchorEl={this.posElRef.current}\r\n              draw={draw}\r\n              penColor={penColor}\r\n              setPenColor={setPenColor}\r\n            />\r\n            <SetPenSizeButton\r\n              penSize={penSize}\r\n              penColor={penColor}\r\n              setPenSize={setPenSize}\r\n              anchorEl={this.posElRef.current}\r\n            />\r\n            <IconButton\r\n              disabled={pastDrawings.length === 0}\r\n              onClick={this.undoDrawing}\r\n              style={{ flex: '1' }}\r\n              className=\"canvas-operation-list-item\"\r\n            >\r\n              <UndoIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton\r\n              disabled={futureDrawings.length === 0}\r\n              style={{ flex: '1' }}\r\n              onClick={this.redoDrawing}\r\n              className=\"canvas-operation-list-item\"\r\n            >\r\n              <RedoIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton\r\n              style={{ flex: '1', color: '#000' }}\r\n              className=\"canvas-operation-list-item\"\r\n              onClick={this.clearCanvas}\r\n            >\r\n              <ClearIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './index.scss';\r\n\r\nimport { roomActions, userActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport AvatarBox from '@client/ui/AvatarBox';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ChattingMessage from 'shared/models/ChattingMessage';\r\nimport { IGame, IUser } from 'shared/types';\r\n\r\nimport AnswerInputBox from './components/AnswerInputBox';\r\nimport CanvasContainer from './components/CanvasContainer';\r\n\r\nconst selectorGame = ({\r\n  room: { currentGame },\r\n  user: { user },\r\n  connection: { wsClient },\r\n}: IReduxState) => ({\r\n  currentGame,\r\n  user,\r\n  wsClient,\r\n});\r\n\r\nexport default function Game() {\r\n  const { currentGame, user, wsClient } = useSelector(\r\n    selectorGame,\r\n    shallowEqual,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const [chattingList, setChattingList] = useState<ChattingMessage[]>([]);\r\n  useEffect(() => {\r\n    const wrongGuessOff = wsClient.on('chattingMessage', msgData => {\r\n      setChattingList(prevList => [msgData as ChattingMessage, ...prevList]);\r\n    });\r\n\r\n    const gameOverOff = wsClient.on('gameOver', msgData => {\r\n      const { user } = msgData as {\r\n        user: IUser;\r\n      };\r\n      dispatch(userActions.createSetIsGaming(user.isGaming));\r\n    });\r\n\r\n    const refreshGameOff = wsClient.on('refreshGame', msgData => {\r\n      const { game } = msgData as {\r\n        game: IGame;\r\n      };\r\n      dispatch(roomActions.createSetCurrentGame(game));\r\n    });\r\n    const changePlayingUserOff = wsClient.on('changePlayingUser', msgData => {\r\n      const { game } = msgData as {\r\n        game: IGame;\r\n      };\r\n      dispatch(roomActions.createSetCurrentGame(game));\r\n    });\r\n\r\n    return () => {\r\n      wrongGuessOff();\r\n      gameOverOff();\r\n      refreshGameOff();\r\n      changePlayingUserOff();\r\n    };\r\n  }, [setChattingList, dispatch, wsClient]);\r\n\r\n  useEffect(() => {\r\n    if (currentGame == null) {\r\n      dispatch(roomEffects.getGame());\r\n    }\r\n  }, [currentGame, dispatch]);\r\n\r\n  const isSelfPlaying = useMemo(() => {\r\n    // 自己是画家还是猜测的人\r\n    if (user == null || currentGame == null) return false;\r\n    if (user.id === currentGame.playInfo.currentPlayer.id) return true;\r\n    return false;\r\n  }, [user, currentGame]);\r\n\r\n  if (currentGame == null || user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-game\">\r\n      <AppBar\r\n        style={{\r\n          boxShadow: 'none',\r\n        }}\r\n        position=\"static\"\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">\r\n            {isSelfPlaying\r\n              ? `请画 ${currentGame.playInfo.keyword.raw}`\r\n              : `${currentGame.playInfo.keyword.raw.length}个字 ${currentGame.playInfo.keyword.hint}`}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"view-game-main\">\r\n        <CanvasContainer\r\n          wsClient={wsClient}\r\n          isSelfPlaying={isSelfPlaying}\r\n          initialDrawing={currentGame.newestDrawing}\r\n        />\r\n        <div className=\"player-list\">\r\n          {currentGame.users.map(gameUser => (\r\n            <div key={gameUser.id} className=\"player-list-item\">\r\n              <AvatarBox\r\n                text={`${gameUser.username}${\r\n                  gameUser.id === user.id ? '(我)' : ''\r\n                }(${currentGame.userScores[gameUser.id]}}分)`}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"game-message-list\">\r\n          {chattingList.map(c => (\r\n            <div key={c.id} className=\"game-message-list-item\">\r\n              {c.speaker.name}: {c.content}\r\n            </div>\r\n          ))}\r\n          <div className=\"game-message-list-item\">车笔刀 猜：汽车</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"view-game-footer\">\r\n        {isSelfPlaying ? null : <AnswerInputBox wsClient={wsClient} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GameLobby from \"@client/view/GameLobby\";\r\nimport BasicLayout from \"@client/layout/BasicLayout\";\r\nimport CreateRoom from \"@client/view/room/CreateRoom\";\r\nimport PlayingRoom from \"@client/view/room/PlayingRoom\";\r\nimport AuthLoyout from \"@client/layout/AuthLayout\";\r\nimport Game from \"@client/view/game/Game\";\r\n\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  component: (...args: any[]) => JSX.Element;\r\n  layout?: (...args: any[]) => JSX.Element;\r\n  children?: IRoute[];\r\n}\r\n\r\nconst routes: IRoute[] = [\r\n  {\r\n    path: '/',\r\n    component: AuthLoyout,\r\n    children: [\r\n      {\r\n          path: '/',\r\n          component: BasicLayout,\r\n          children: [\r\n            {\r\n              path: '/create-room',\r\n              component: CreateRoom,\r\n            },\r\n            {\r\n              path: '/game/:id',\r\n              component: Game,\r\n            },\r\n            {\r\n              path: '/room/:roomId',\r\n              component: PlayingRoom,\r\n            },\r\n            {\r\n              path: '/',\r\n              component: GameLobby,\r\n            }\r\n          ]\r\n      },\r\n    ]\r\n  }\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\nimport NotificationPanel from '@client/component/NotificationPanel';\r\n\r\nexport default function BasicLayout({ children }: { children : any}) {\r\n    return (\r\n      <>\r\n        <div className=\"basic-layout\">\r\n            {children}\r\n        </div>\r\n        <NotificationPanel />\r\n      </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  component: (...args: any[]) => JSX.Element;\r\n  layout?: (...args: any[]) => JSX.Element;\r\n  children?: IRoute[];\r\n}\r\n\r\nfunction generateRoutes(routes?: IRoute[]) {\r\n  if (routes == null || routes.length === 0) return null;\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => {\r\n        const { layout: Layout, component: Component } = route;\r\n        if (Layout == null)\r\n          return (\r\n            <Route\r\n              key={index}\r\n              path={route.path}\r\n              render={() => <Component>{generateRoutes(route.children)}</Component>}\r\n            ></Route>\r\n          );\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            render={() => (\r\n              <Layout>\r\n                <Component>{generateRoutes(route.children)}</Component>\r\n              </Layout>\r\n            )}\r\n          ></Route>\r\n        );\r\n      })}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport const AppRoute = () => generateRoutes(routes);\r\n","import configureStore, { history } from '@client/store';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React, { useEffect } from 'react';\nimport { Provider, useDispatch, useSelector, shallowEqual } from 'react-redux';\n\n\nimport { AppRoute } from './route';\nimport { IReduxState } from './store/reducers';\nimport { IUser } from 'shared/types';\nimport { userActions } from './store/actions';\n\n// import { HashRouter } from 'react-router-dom';\nexport const store = configureStore();\n\nconst selectorApp = ({ connection: { wsClient } }: IReduxState) => ({\n  wsClient,\n});\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { wsClient } = useSelector(selectorApp, shallowEqual);\n\n  useEffect(() => {\n    const refreshPlayerInfoOff = wsClient.on('refreshPlayerInfo', msgData => {\n      const user = msgData as IUser;\n      dispatch(userActions.createSetUser(user));\n    });\n    return () => {\n      refreshPlayerInfoOff();\n    };\n  }, [wsClient, dispatch]);\n\n\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={history}>\n        <AppRoute />\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nconst AppWrapper = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default AppWrapper;\n","import { hot } from 'react-hot-loader/root';\nimport 'react-hot-loader';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\nimport { IS_DEV_CLIENT } from './util/constants';\n\nif (IS_DEV_CLIENT) {\n  ReactDOM.render(React.createElement(hot(App)), document.getElementById('root'));\n} else {\n  ReactDOM.render(React.createElement(App), document.getElementById('root'));\n}\n\n"],"sourceRoot":""}