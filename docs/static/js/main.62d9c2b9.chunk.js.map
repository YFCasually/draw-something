{"version":3,"sources":["store/user/actionTypes.ts","store/global/actionTypes.ts","store/room/actionTypes.ts","store/user/actions.ts","store/global/actions.ts","store/room/actions.ts","util/helper.ts","store/user/effects.ts","store/global/effects.ts","model/Notification.ts","../shared/constants/room.ts","store/room/effects.ts","ui/FullScreenLoading.tsx","util/constants.ts","view/GameLobby/components/RoomList/index.tsx","view/GameLobby/components/AccountCard/index.tsx","view/GameLobby/components/GameLobbyHeader.tsx","hooks/index.ts","view/GameLobby/index.tsx","component/NotificationPanel/index.tsx","view/room/CreateRoom/index.tsx","view/room/PlayingRoom/components/RoomMessage/index.tsx","view/room/PlayingRoom/index.tsx","layout/AuthLayout.tsx","ui/AvatarBox/index.tsx","../shared/models/RequestMessage.ts","view/game/Game/components/AnswerInputBox/index.tsx","model/DrawAction.ts","controller/CanvasController.ts","view/game/Game/components/CanvasContainer/SetPenColorButton.tsx","ui/PlainLine.tsx","view/game/Game/components/CanvasContainer/SetPenSizeButton.tsx","view/game/Game/components/CanvasContainer/index.tsx","view/game/Game/index.tsx","route/routes.ts","layout/BasicLayout/index.tsx","route/index.tsx","store/user/reducer.ts","config.ts","store/connection/reducer.ts","WebsocketClient/index.ts","store/global/reducer.ts","store/room/reducer.ts","store/reducers.ts","store/index.ts","App.tsx","index.ts"],"names":["SET_USERNAME","SET_USER","SET_USER_CURRENT_ROOM_ID","SET_IS_READY","SET_IS_GAMING","SET_NUMBER_OF_ONLINE_PLAYER","ADD_NOTIFICATION","SHIFT_NOTIFICATION","SET_ROOM_LIST","SET_CURRENT_ROOM_USERS","SET_CURRENT_ROOM_STATUS","SET_CURRENT_GAME","SET_ROOM","createSetUsername","username","type","userActionTypes","payload","createSetUser","user","createSetIsGaming","status","createSetUserCurrentRoomId","rid","createSetIsReady","createSetNumberOfOnlinePlayer","num","globalActionTypes","createAddNotification","n","createShiftNotification","createSetRoomList","roomList","roomActionTypes","createSetCurrentRoomUsers","users","createSetRoom","r","createSetCurrentGame","g","createSetCurrentRoomStatus","s","getToken","token","localStorage","getItem","trim","setToken","setItem","createHandleOnKeyEnterUp","cb","evt","keyCode","login","dispatch","getState","a","wsClient","connection","request","data","userActions","startListenRefreshPlayerInfo","on","msgData","stopListenRefreshPlayerInfo","off","changeUsername","changedName","getNumberOfOnlinePlayer","result","globalActions","console","error","NotificationType","RoomStatus","RoomType","Notification","title","detail","NORMAL","id","uuidv4","createAt","Date","now","getRoomList","respMsg","roomActions","isEnteringRoom","enterRoom","roomId","room","batchDispatch","currentRoomId","push","leaveRoom","undefined","err","createRoom","name","sendChatMessage","content","makeGameIsReady","ready","requestType","isReady","getGame","game","GAMING","ERROR","replace","FullScreenLoading","className","style","display","justifyContent","alignItems","CircularProgress","IS_DEV","some","p","window","location","origin","includes","statusText","WAITING","RoomListItem","useDispatch","String","padStart","Button","onClick","fullWidth","variant","selectorRoomList","RoomList","log","useSelector","shallowEqual","freshRoomList","useCallback","roomEffects","useEffect","refreshRoomListOff","respData","List","subheader","ListSubheader","IconButton","length","map","key","selectorAccountCard","AccountCard","useState","changedUsername","setChangedUsername","updateUsername","target","value","isShowChangeNameDialog","setIsShowChangeNameDialog","openChangeNameModal","closeChangeName","confirmChangeUsername","isEmptyName","userEffects","Dialog","open","onClose","DialogTitle","DialogContent","TextField","placeholder","onChange","DialogActions","disabled","Card","CardHeader","toLocaleTimeString","avatar","Avatar","action","GameLobbyHeader","React","memo","isShowFindRoom","setIsShowFindRoom","closeFindRoom","setRoomId","jumoToFindRoom","onKeyUp","AppBar","boxShadow","position","Toolbar","color","Typography","flex","textAlign","useDocumentTitle","prevTitleRef","useRef","current","document","indexSelector","numberOfOnlinePlayer","global","selectorNotificationPanel","notifications","NotificationPanel","shiftNotification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","aria-label","Close","message","selectorRoomMessage","userId","RoomMessage","chatMsgList","setChatMsgList","_","msg","chatMsg","prev","concat","msgContent","setMsgContent","isValidatedContentt","cm","ListItem","speaker","timestamp","selectorPlayingRoom","currentRoom","roomTypeTextDict","PRIVATE","PUBLIC","selectorAuthLoyout","pathname","router","AvatarBox","text","RequestMessage","handler","desc","this","AnswerInputBox","DrawActionType","answer","setAnswer","sendGuessAnswer","reqMsg","sendMessage","CanvasController","canvasEl","options","ctx","createElement","getContext","init","penColor","setPenColor","penSize","setPenSize","strokeStyle","fillStyle","lineWidth","size","image","img","Image","onload","clearCanvas","drawImage","src","to","beginPath","arc","x","y","Math","PI","fill","closePath","toDataURL","startPoint","sp","moveTo","lineTo","stroke","elementSelector","el","querySelector","Error","append","height","clientHeight","width","clientWidth","prevFillStyle","clearRect","fillRect","op","DrawAction","colors","SetPenColorButton","anchorEl","isShowSetPenColor","setIsShowSetPenColor","updatePenColor","fontSize","Popover","transformOrigin","border","PlainLine","props","backgroundColor","SetPenSizeButton","updatePenSize","isShowSetPenSize","setIsShowSetPenSize","Slider","valueLabelDisplay","step","marks","min","max","Canvas","state","futureDrawings","pastDrawings","posElRef","createRef","draw","getPointFromEvent","touches","t","clientX","clientY","offsetLeft","offsetTop","endDrawing","sendDrawActionToServer","END_DRAW_LINE","newestDrawing","getSnapshot","snapshotCurrentDrawing","CLEAR_CANVAS","undoDrawing","pastDrawing","pop","setState","DRAW_IMAGE","redoDrawing","futureDrawing","handleTouchStart","startDrawLine","handleTouchMove","drawLineTo","handleTouchEnd","mount","bindEvents","initialDrawing","respMsgData","drawAction","START_DRAW_LINE","point","setting","prevSetting","getSetting","drawPoint","DRAW_LINE_TO","imgData","extral","isSelfPlaying","curDrawing","prevState","onTouchStart","onTouchMove","onTouchEnd","ref","Undo","Redo","PureComponent","selectorGame","currentGame","routes","path","component","children","isGaming","targetPath","defaultRoomName","roomName","setRoomName","roomType","setRoomType","globalEffects","isUsingDefaultRoomName","setIsUsingDefaultRoomName","updateRoomName","goBack","FormControl","label","RadioGroup","button","FormControlLabel","control","Radio","labelPlacement","chattingList","setChattingList","wrongGuessOff","prevList","gameOverOff","refreshGameOff","useMemo","playInfo","currentPlayer","keyword","raw","hint","gameUser","userScores","c","rawRoomId","useParams","parseInt","toggleGameReady","refreshRoomInfoOff","allPlayerReadyOff","Number","isNaN","Array","index","AppRoute","generateRoutes","route","Layout","layout","Component","render","defaultState","isLogining","isRegistering","getConfig","isConnected","ws","messageCache","eventMap","Map","WebSocket","addr","onopen","sendMessageFromCache","onclose","onerror","onmessage","rawMessage","JSON","parse","emit","requestId","trigger","forEach","send","stringify","Promise","resolve","reject","eventName","callback","set","delete","get","store","reducers","produce","draft","shift","createRootReducer","history","combineReducers","connectRouter","createHashHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","routerMiddleware","ReduxThunk","App","AppWrapper","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.62d9c2b9.chunk.js","sourcesContent":["export const SET_USERNAME = 'SET_USERNAME';\n\nexport const SET_USER = 'SET_USER';\n\nexport const SET_USER_CURRENT_ROOM_ID =  'SET_USER_CURRENT_ROOM_ID';\n\nexport const SET_IS_READY = 'SET_IS_READY';\n\nexport const SET_IS_GAMING = 'SET_IS_GAMING';\n\n// export const LOGOUT = 'LOGOUT';\n","export const SET_NUMBER_OF_ONLINE_PLAYER = 'SET_NUMBER_OF_ONLINE_PLAYER';\n\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\n\nexport const SHIFT_NOTIFICATION = 'REMOVE_NOTIFICATION';\n","export const SET_ROOM_LIST = 'SET_ROOM_LIST';\n\nexport const SET_CURRENT_ROOM_USERS = 'SET_CURRENT_ROOM_USERS';\n\nexport const SET_CURRENT_ROOM_STATUS = 'SET_CURRENT_ROOM_STATUS';\n\nexport const SET_CURRENT_GAME = 'SET_CURRENT_GAME';\n\nexport const SET_ROOM = 'SET_ROOM';\n","import { IAction } from '../actions';\nimport { userActionTypes } from '../actionTypes';\nimport { IUser } from '../../../shared/types';\n\nexport function createSetUsername(username: string): IAction {\n  return {\n    type: userActionTypes.SET_USERNAME,\n    payload: username,\n  };\n}\n\nexport function createSetUser(user: IUser): IAction {\n  return {\n    type: userActionTypes.SET_USER,\n    payload: user,\n  };\n}\n\nexport function createSetIsGaming(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_GAMING,\n    payload: status,\n  }\n}\n\nexport function createSetUserCurrentRoomId(rid: number | undefined): IAction {\n  return {\n    type: userActionTypes.SET_USER_CURRENT_ROOM_ID,\n    payload: rid,\n  }\n}\n\nexport function createSetIsReady(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_READY,\n    payload: status,\n  }\n}\n","import { IAction } from '../actions';\nimport { globalActionTypes } from '../actionTypes';\nimport Notification from '@client/model/Notification';\n\nexport function createSetNumberOfOnlinePlayer(num: number): IAction {\n  return {\n    type: globalActionTypes.SET_NUMBER_OF_ONLINE_PLAYER,\n    payload: num,\n  };\n}\n\nexport const createAddNotification = (n: Notification) => ({\n  type: globalActionTypes.ADD_NOTIFICATION,\n  payload: n,\n});\n\nexport const createShiftNotification = () => ({\n  type: globalActionTypes.SHIFT_NOTIFICATION,\n});\n","import { IAction } from '../actions';\nimport { roomActionTypes } from '../actionTypes';\nimport { IRoom, IUser, IGame } from '../../../shared/types';\nimport { RoomStatus } from '../../../shared/constants/room';\n\nexport function createSetRoomList(roomList: any[]): IAction {\n  return {\n    type: roomActionTypes.SET_ROOM_LIST,\n    payload: roomList,\n  };\n}\n\nexport function createSetCurrentRoomUsers(users: IUser[]): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_ROOM_USERS,\n    payload: users,\n  };\n}\n\nexport function createSetRoom(r: IRoom | null): IAction {\n  return {\n    type: roomActionTypes.SET_ROOM,\n    payload: r,\n  };\n}\n\nexport function createSetCurrentGame(g: IGame | null): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_GAME,\n    payload: g,\n  };\n}\n\nexport function createSetCurrentRoomStatus(s: RoomStatus): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_ROOM_STATUS,\n    payload: s,\n  }\n}\n","import { KeyboardEvent } from 'react';\r\n\r\nexport function getIsDevelopment() {\r\n  const devlopmentPaths = ['localhost', '127.0.0.1', '192.168'];\r\n  return devlopmentPaths.some(p => window.location.origin.includes(p));\r\n}\r\n\r\nexport function getToken() {\r\n  const token = localStorage.getItem('__token');;\r\n  if (token != null && token.trim() === '') return null;\r\n  return token;\r\n}\r\n\r\nexport function setToken(token: string) {\r\n  localStorage.setItem('__token', token);\r\n}\r\n\r\nexport function createHandleOnKeyEnterUp(cb: () => void) {\r\n  return function handleOnKeyEnterUp(evt: KeyboardEvent) {\r\n    const KEY_ENTER_CODE = 13;\r\n    if (evt.keyCode === KEY_ENTER_CODE) {\r\n      cb();\r\n    }\r\n  }\r\n}\r\n\r\n","import { TReduxThunk } from '../effects';\nimport { userActions } from '../actions';\nimport { getToken, setToken } from '../../util/helper';\nimport { IUser } from '../../../shared/types';\n\nexport function login(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    const token = getToken();\n    const user = (await wsClient.request('login', token)).data as IUser;\n    setToken(user.token);\n    dispatch(userActions.createSetUser(user));\n  };\n}\n\nexport function startListenRefreshPlayerInfo(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    wsClient.on('refreshPlayerInfo', msgData => {\n      const user = msgData as IUser;\n      dispatch(userActions.createSetUser(user));\n    });\n  };\n}\n\nexport function stopListenRefreshPlayerInfo(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    wsClient.off('refreshPlayerInfo');\n  };\n}\n\nexport function changeUsername(username: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    const changedName = (await wsClient.request(\n      'changeUsername',\n      username,\n    )).data as string;\n    dispatch(userActions.createSetUsername(changedName));\n  };\n}\n","import { TReduxThunk } from '../effects';\nimport { globalActions } from '../actions';\n\n\nexport function getNumberOfOnlinePlayer(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const { connection: { wsClient } } = getState();\n    try {\n      const result = (await wsClient.request('numberOfOnlineUser')).data as number;\n      dispatch(globalActions.createSetNumberOfOnlinePlayer(result));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n","import uuidv4 from 'uuid/v4';\r\n\r\nexport enum NotificationType {\r\n  ERROR = 'error',\r\n  WARN = 'warn',\r\n  SUCCESS = 'success',\r\n  NORMAL = 'nornal',\r\n}\r\n\r\nexport default class Notification {\r\n  public id = uuidv4();\r\n  public createAt = Date.now();\r\n  constructor(\r\n    public title: string,\r\n    public detail?: string,\r\n    public type: NotificationType = NotificationType.NORMAL,\r\n  ) {}\r\n}\r\n","export enum RoomStatus {\r\n  WAITING = 'waiting',\r\n  GAMING = 'gaming',\r\n};\r\n\r\nexport enum RoomType {\r\n  PUBLIC = 'public',\r\n  PRIVATE = 'private',\r\n}\r\n","import Notification, { NotificationType } from '@client/model/Notification';\nimport { push, replace } from 'connected-react-router';\nimport { batch as batchDispatch } from 'react-redux';\n\nimport { RoomStatus, RoomType } from '../../../shared/constants/room';\nimport { IGame, IRoom, IUser } from '../../../shared/types';\nimport { globalActions, roomActions, userActions } from '../actions';\nimport { TReduxThunk } from '../effects';\n\nexport function getRoomList(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('roomList');\n      const result = respMsg.data as any[];\n      dispatch(roomActions.createSetRoomList(result));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nlet isEnteringRoom = false;\nexport function enterRoom(roomId: number): TReduxThunk {\n  return async (dispatch, getState) => {\n    if (isEnteringRoom) return;\n    isEnteringRoom = true;\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('userEnter', {\n        id: roomId,\n      });\n\n      const { room, user } = respMsg.data as {\n        room: IRoom;\n        user: IUser;\n      };\n      batchDispatch(() => {\n        dispatch(roomActions.createSetRoom(room));\n        dispatch(userActions.createSetUserCurrentRoomId(user.currentRoomId));\n        dispatch(push(`/room/${room.id}`));\n      });\n    } catch (err) {\n      dispatch(push('/'));\n      console.error(err);\n    } finally {\n      isEnteringRoom = false;\n    }\n  };\n}\n\nexport function leaveRoom(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n      user: { user },\n    } = getState();\n    if (user == null || user.currentRoomId == null) return;\n    try {\n      wsClient.request('userLeave');\n      dispatch(userActions.createSetUserCurrentRoomId(undefined));\n      dispatch(roomActions.createSetRoom(null));\n      dispatch(push('/'));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function createRoom(name: string, type: RoomType): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('createRoom', {\n        name,\n        type,\n      });\n      const room = respMsg.data as IRoom;\n      dispatch(enterRoom(room.id));\n      // dispatch(getRoomList());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function sendChatMessage(content: string): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      wsClient.request('sendChatMessage', { content });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function makeGameIsReady(ready: boolean): TReduxThunk {\n  const requestType = ready ? 'makeGameReady' : 'cancelGameReady';\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request(requestType);\n      const { user, room } = respMsg.data as {\n        user: IUser;\n        room: IRoom;\n      };\n      dispatch(roomActions.createSetCurrentRoomUsers(room.users));\n      dispatch(userActions.createSetIsReady(user.isReady));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function getGame(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      connection: { wsClient },\n      user: { user },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('getGame');\n      const { game } = respMsg.data as {\n        user: IUser;\n        game: IGame;\n      };\n      dispatch(roomActions.createSetCurrentGame(game));\n      dispatch(roomActions.createSetCurrentRoomStatus(RoomStatus.GAMING));\n    } catch (err) {\n      dispatch(\n        globalActions.createAddNotification(\n          new Notification(err.title, undefined, NotificationType.ERROR),\n        ),\n      );\n      if (user != null && user.currentRoomId != null) {\n        dispatch(replace(`/room/${user.currentRoomId}`));\n      } else {\n        dispatch(replace('/'));\n      }\n    }\n  };\n}\n","import React from 'react';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function FullScreenLoading() {\r\n\r\n  return (\r\n    <div className=\"full-screen-loading\" style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import { getIsDevelopment } from \"./helper\";\r\n\r\nexport const IS_DEV = getIsDevelopment();\r\n\r\n// export enum MessageType { // 注意这里的字面量很重要的，后端根据这个判断调用哪一个service\r\n//     LOGIN = 'login',\r\n//     ROOM_LIST = 'roomList',\r\n// }\r\n","import './index.scss';\r\n\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n} from '@material-ui/core';\r\nimport { LoopOutlined as FreshIcon } from '@material-ui/icons';\r\n\r\nimport { roomActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { IS_DEV } from '@client/util/constants';\r\nimport { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { IRoom } from '../../../../../shared/types';\r\nimport { RoomStatus } from '../../../../../shared/constants/room';\r\n\r\nconst statusText = {\r\n  [RoomStatus.GAMING]: '游戏中',\r\n  [RoomStatus.WAITING]: '等待中',\r\n};\r\n\r\nfunction RoomListItem({ room }: { room: IRoom }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n      <div className=\"room-list-room\">\r\n        <div className=\"room-name\">{room.name}</div>\r\n        <div className=\"room-info\">\r\n          <div className=\"room-number\">\r\n            No.{String(room.id).padStart(5, '0')}\r\n          </div>\r\n          <div className=\"room-status\">{statusText[room.status]}</div>\r\n        </div>\r\n        <div className=\"room-actions\">\r\n          <Button\r\n            onClick={() => dispatch(push(`/room/${room.id}`))}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n          >\r\n            加入房间\r\n          </Button>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nconst selectorRoomList = ({\r\n  room: { roomList },\r\n  connection: { wsClient },\r\n}: IReduxState) => ({\r\n  roomList,\r\n  wsClient,\r\n});\r\n\r\nexport default function RoomList() {\r\n  if (IS_DEV) {\r\n    console.log('render RoomList');\r\n  }\r\n\r\n  const { roomList, wsClient } = useSelector(selectorRoomList, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n  const freshRoomList = useCallback(() => {\r\n    dispatch(roomEffects.getRoomList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    freshRoomList();\r\n\r\n    const refreshRoomListOff = wsClient.on('refreshRoomList', respData => {\r\n      const roomList = respData as IRoom[];\r\n      dispatch(roomActions.createSetRoomList(roomList));\r\n    });\r\n\r\n    return () => {\r\n      refreshRoomListOff();\r\n    };\r\n  }, [dispatch, freshRoomList, wsClient]);\r\n\r\n  return (\r\n    <div className=\"room-list\">\r\n      <List\r\n        subheader={\r\n          <ListSubheader>\r\n            房间列表\r\n            <IconButton onClick={freshRoomList}>\r\n              <FreshIcon />\r\n            </IconButton>\r\n          </ListSubheader>\r\n        }\r\n        className=\"room-list\"\r\n      >\r\n        {roomList.length === 0 ? (\r\n          <div className=\"no-room-text\">暂无公开房间</div>\r\n        ) : (\r\n          <div className=\"room-list-content\">\r\n            {roomList.map(room => (\r\n              <RoomListItem key={room.id} room={room} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, ChangeEvent } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\n\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { userEffects } from '@client/store/effects';\r\nimport { IS_DEV } from '@client/util/constants';\r\n\r\nimport './index.scss';\r\n\r\nconst selectorAccountCard = ({ user: { user } }: IReduxState) => ({ user });\r\n\r\nexport default function AccountCard() {\r\n  if (IS_DEV) {\r\n    console.log('render AccountCard');\r\n  }\r\n  const { user } = useSelector(selectorAccountCard, shallowEqual);\r\n  const [changedUsername, setChangedUsername] = useState(\r\n    user != null ? user.username : '',\r\n  );\r\n  const updateUsername = useCallback(\r\n    (evt: ChangeEvent<HTMLInputElement>) =>\r\n      setChangedUsername(evt.target.value.trim()),\r\n    [setChangedUsername],\r\n  );\r\n\r\n  // -- 更改用户名相关逻辑\r\n  const [isShowChangeNameDialog, setIsShowChangeNameDialog] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const openChangeNameModal = useCallback(() => setIsShowChangeNameDialog(true), [\r\n    setIsShowChangeNameDialog,\r\n  ]);\r\n  const closeChangeName = useCallback(() => setIsShowChangeNameDialog(false), [\r\n    setIsShowChangeNameDialog,\r\n  ]);\r\n  const confirmChangeUsername = useCallback(() => {\r\n    const isEmptyName = changedUsername.trim().length === 0;\r\n    if (user != null && !isEmptyName && user.username !== changedUsername) {\r\n      // 只有名字不为空，且前后发生变化, 才发送请求\r\n      dispatch(userEffects.changeUsername(changedUsername));\r\n    }\r\n    if (!isEmptyName) closeChangeName();\r\n  }, [user, changedUsername, dispatch, closeChangeName]);\r\n\r\n  if (user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isShowChangeNameDialog} onClose={closeChangeName}>\r\n        <DialogTitle>更改用户名</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            placeholder=\"用户名\"\r\n            value={changedUsername}\r\n            onChange={updateUsername}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button disabled={changedUsername.trim().length === 0} onClick={confirmChangeUsername}>确定</Button>\r\n          <Button onClick={closeChangeName}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"user-info\">\r\n        <Card>\r\n          <CardHeader\r\n            title={`你好，${user.username}！`}\r\n            subheader={`登陆于${new Date().toLocaleTimeString()}`}\r\n            avatar={<Avatar>{user.username[0]}</Avatar>}\r\n            action={\r\n              <IconButton onClick={openChangeNameModal}>\r\n                <MoreIcon />\r\n              </IconButton>\r\n            }\r\n          ></CardHeader>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { SearchOutlined as SearchIcon} from '@material-ui/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { push } from 'connected-react-router';\r\n\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\n\r\n\r\nconst GameLobbyHeader = React.memo(function GameLobbyHeader () {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowFindRoom, setIsShowFindRoom] = useState(false);\r\n  const closeFindRoom = useCallback(() => setIsShowFindRoom(false), [setIsShowFindRoom]);\r\n\r\n  const [roomId, setRoomId] = useState('');\r\n  const jumoToFindRoom = useCallback(() => {\r\n    if (roomId.trim().length === 0) return;\r\n    dispatch(push(`/room/${roomId}`));\r\n  }, [roomId, dispatch]);\r\n\r\n  return (\r\n  <>\r\n    <Dialog open={isShowFindRoom} onClose={closeFindRoom}>\r\n        <DialogTitle>查找房间</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            placeholder=\"房间号\"\r\n            value={roomId}\r\n            onChange={evt => setRoomId(evt.target.value.trim())}\r\n            onKeyUp={createHandleOnKeyEnterUp(jumoToFindRoom)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button disabled={roomId.trim().length === 0} onClick={jumoToFindRoom}>确定</Button>\r\n          <Button onClick={closeFindRoom}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    <AppBar\r\n      style={{\r\n        boxShadow: 'none',\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar>\r\n        <Button onClick={() => setIsShowFindRoom(true)} color=\"inherit\">\r\n          <SearchIcon />\r\n          查找房间\r\n        </Button>\r\n        <Typography\r\n          style={{\r\n            flex: 1,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          你画我猜-游戏大厅\r\n        </Typography>\r\n        <Button onClick={() => dispatch(push('/create-room'))} color=\"inherit\">\r\n          创建房间\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </>\r\n  );\r\n});\r\n\r\nexport default GameLobbyHeader;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useDocumentTitle(title: string) {\r\n  const prevTitleRef = useRef('');\r\n  useEffect(() => {\r\n    prevTitleRef.current = document.title;\r\n    document.title = title;\r\n    return () => {\r\n      document.title = prevTitleRef.current;\r\n    }\r\n  }, [title]);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { globalEffects } from '@client/store/effects';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\n\r\nimport RoomList from './components/RoomList';\r\nimport AccountCard from './components/AccountCard';\r\nimport GameLobbyHeader from './components/GameLobbyHeader';\r\n\r\nimport './index.scss';\r\nimport { useDocumentTitle } from '@client/hooks';\r\n\r\nconst indexSelector = ({\r\n  global: { numberOfOnlinePlayer },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  numberOfOnlinePlayer,\r\n  user,\r\n});\r\n\r\nexport default function GameLobby() {\r\n  useDocumentTitle('游戏大厅');\r\n\r\n  const { numberOfOnlinePlayer, user } = useSelector(\r\n    indexSelector,\r\n    shallowEqual,\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(globalEffects.getNumberOfOnlinePlayer());\r\n  }, [dispatch]);\r\n\r\n\r\n  if (user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-game-lobby\">\r\n      <div className=\"view-game-lobby-header\">\r\n        <GameLobbyHeader />\r\n      </div>\r\n      <div className=\"view-game-lobby-main\">\r\n        <AccountCard />\r\n        <div className=\"room-list-wrapper\">\r\n          <RoomList />\r\n        </div>\r\n      </div>\r\n      <div className=\"view-game-lobby-footer\">\r\n        <div className=\"number-of-online-player\">\r\n          当前在线人数: {numberOfOnlinePlayer}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { IconButton, Snackbar } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport { globalActions } from '@client/store/actions';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport React, { useCallback } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst selectorNotificationPanel = ({ global: { notifications } }: IReduxState) => ({\r\n  notifications,\r\n});\r\n\r\nconst NotificationPanel = React.memo(function NotificationPanel() {\r\n  const { notifications } = useSelector(selectorNotificationPanel, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const shiftNotification = useCallback(() => {\r\n    dispatch(globalActions.createShiftNotification());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n    {notifications.map(n => (\r\n      <Snackbar\r\n      key={n.id}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      // key={`${vertical},${horizontal}`}\r\n      open={true}\r\n      onClose={shiftNotification}\r\n      autoHideDuration={4000}\r\n      action={\r\n        <IconButton onClick={shiftNotification} key=\"close\" aria-label=\"close\" color=\"inherit\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      }\r\n      message={<span>{n.detail == null ? n.title : `${n.title}-${n.detail}`}</span>}\r\n    />\r\n    ))}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NotificationPanel;\r\n","import './index.scss';\r\n\r\nimport { useDocumentTitle } from '@client/hooks';\r\nimport { globalEffects, roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  List,\r\n  ListItem,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { ArrowBackOutlined as BackIcon } from '@material-ui/icons';\r\nimport { goBack } from 'connected-react-router';\r\nimport React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { RoomType } from '../../../../shared/constants/room';\r\n\r\nconst indexSelector = ({\r\n  global: { numberOfOnlinePlayer },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  numberOfOnlinePlayer,\r\n  username: user == null ? '' : user.username,\r\n});\r\n\r\nexport default function CreateRoom() {\r\n  useDocumentTitle('创建房间');\r\n\r\n  const { username } = useSelector(indexSelector, shallowEqual);\r\n  const defaultRoomName = `${username}的房间`;\r\n  const [roomName, setRoomName] = useState(defaultRoomName);\r\n  const [roomType, setRoomType] = useState(RoomType.PUBLIC);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(globalEffects.getNumberOfOnlinePlayer());\r\n  }, [dispatch]);\r\n\r\n  const createRoom = useCallback(() => {\r\n    dispatch(roomEffects.createRoom(roomName, roomType));\r\n  }, [roomName, roomType, dispatch]);\r\n\r\n  const [isUsingDefaultRoomName, setIsUsingDefaultRoomName] = useState(true);\r\n  const updateRoomName = useCallback((evt: ChangeEvent<HTMLInputElement>) => {\r\n    setIsUsingDefaultRoomName(false);\r\n    setRoomName(evt.target.value);\r\n  }, [setRoomName, setIsUsingDefaultRoomName]);\r\n\r\n\r\n  return (\r\n    <div className=\"view-room-creator\">\r\n      <div className=\"view-room-creator-header\">\r\n        <AppBar\r\n          style={{\r\n            boxShadow: 'none',\r\n          }}\r\n          position=\"static\"\r\n        >\r\n          <Toolbar>\r\n            <Button onClick={() => dispatch(goBack())} color=\"inherit\">\r\n              <BackIcon />\r\n              返回\r\n            </Button>\r\n            <Typography\r\n              style={{\r\n                flex: 1,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              创建房间\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div className=\"view-room-creator-main\">\r\n        <FormControl fullWidth>\r\n          <List>\r\n            <ListItem>\r\n              <TextField\r\n                label=\"房间名\"\r\n                fullWidth\r\n                placeholder=\"请输入房间名字\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={isUsingDefaultRoomName ? defaultRoomName : roomName}\r\n                onChange={updateRoomName}\r\n              />\r\n            </ListItem>\r\n            <RadioGroup\r\n              value={roomType}\r\n              onChange={evt => setRoomType(evt.target.value as RoomType)}\r\n              name=\"room-type\"\r\n            >\r\n              <ListItem button onClick={() => setRoomType(RoomType.PUBLIC)}>\r\n                <FormControlLabel\r\n                  value={RoomType.PUBLIC}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"公开\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </ListItem>\r\n              <ListItem button onClick={() => setRoomType(RoomType.PRIVATE)}>\r\n                <FormControlLabel\r\n                  value={RoomType.PRIVATE}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"私人(不显示在游戏大厅)\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </ListItem>\r\n            </RadioGroup>\r\n            <ListItem>\r\n              <Button onClick={createRoom} fullWidth variant=\"outlined\">\r\n                创建房间\r\n              </Button>\r\n            </ListItem>\r\n          </List>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import './index.scss';\r\n\r\nimport { Button, List, ListItem, TextField } from '@material-ui/core';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ChattingMessage from '../../../../../../shared/models/ChattingMessage';\r\n\r\nconst selectorRoomMessage = ({\r\n  connection: { wsClient },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  wsClient,\r\n  username: user == null ? '' : user.username,\r\n  userId: user == null ? '' : user.id,\r\n});\r\n\r\nfunction RoomMessage() {\r\n  const { wsClient, userId } = useSelector(\r\n    selectorRoomMessage,\r\n    shallowEqual,\r\n  );\r\n  const [chatMsgList, setChatMsgList] = useState<ChattingMessage[]>([]);\r\n  useEffect(() => {\r\n    const offReciveChatMessage = wsClient.on('reciveChatMessage', (_, msg) => {\r\n      const chatMsg = msg.data as ChattingMessage;\r\n      setChatMsgList(prev => [chatMsg].concat(...prev));\r\n    });\r\n    return offReciveChatMessage;\r\n  }, [wsClient, setChatMsgList]);\r\n\r\n  // chat msg 相关\r\n\r\n  const [msgContent, setMsgContent] = useState('');\r\n  const isValidatedContentt = msgContent.trim().length !== 0;\r\n  const dispatch = useDispatch();\r\n  const sendChatMessage = useCallback(() => {\r\n    if (!isValidatedContentt) return;\r\n    setMsgContent('');\r\n    dispatch(roomEffects.sendChatMessage(msgContent));\r\n  }, [isValidatedContentt, msgContent, dispatch, setMsgContent]);\r\n\r\n  return (\r\n    <div className=\"room-message\">\r\n      <List className=\"room-message-list\">\r\n        {chatMsgList.map(cm => (\r\n          <ListItem className=\"room-message-list-item\" key={cm.id}>\r\n            <div className=\"room-message-speaker\">\r\n              <span className=\"room-message-speaker-name\">\r\n                {cm.speaker.id === userId ? '我' : cm.speaker.name}说:\r\n              </span>\r\n\r\n            </div>\r\n            <div className=\"room-message-content\">{cm.content}</div>\r\n            <div className=\"room-message-speaker-time\">\r\n              {new Date(cm.timestamp).toLocaleTimeString()}\r\n            </div>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <List className=\"room-message-sender\">\r\n        <ListItem>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            value={msgContent}\r\n            onChange={evt => setMsgContent(evt.target.value)}\r\n            onKeyUp={createHandleOnKeyEnterUp(sendChatMessage)}\r\n            fullWidth\r\n          />\r\n          &nbsp;\r\n          <Button\r\n            onClick={sendChatMessage}\r\n            disabled={!isValidatedContentt}\r\n            variant=\"text\"\r\n          >\r\n            发送\r\n          </Button>\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomMessage;\r\n","import './index.scss';\r\n\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport { ArrowBackOutlined as BackIcon } from '@material-ui/icons';\r\nimport { RoomStatus, RoomType } from '../../../../shared/constants/room';\r\nimport { IGame, IRoom, IUser } from 'shared/types';\r\nimport { useDocumentTitle } from '@client/hooks';\r\nimport { roomActions, userActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { batch as batchDispatch, shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\n\r\nimport RoomMessage from './components/RoomMessage';\r\n\r\nconst selectorPlayingRoom = ({\r\n  room: { currentRoom },\r\n  user: { user },\r\n  connection: { wsClient },\r\n}: IReduxState) => ({\r\n  wsClient,\r\n  currentRoom,\r\n  isReady: user == null ? false : user.isReady,\r\n});\r\n\r\nconst roomTypeTextDict = {\r\n  [RoomType.PRIVATE]: '(私人)',\r\n  [RoomType.PUBLIC]: '',\r\n};\r\n\r\nexport default function PlayingRoom() {\r\n  useDocumentTitle('游玩房间');\r\n  const { currentRoom, wsClient, isReady } = useSelector(\r\n    selectorPlayingRoom,\r\n    shallowEqual,\r\n  );\r\n\r\n  const { roomId: rawRoomId } = useParams<{ roomId: string }>();\r\n  const roomId = parseInt(rawRoomId, 10);\r\n\r\n  const dispatch = useDispatch();\r\n  const toggleGameReady = useCallback(() => {\r\n    dispatch(roomEffects.makeGameIsReady(!isReady));\r\n  }, [isReady, dispatch]);\r\n  useEffect(() => {\r\n    const refreshRoomInfoOff = wsClient.on('refreshRoomInfo', (_, msg) => {\r\n      const room = msg.data as IRoom;\r\n      dispatch(roomActions.createSetRoom(room));\r\n    });\r\n    const allPlayerReadyOff = wsClient.on('startGame', (_, msg) => {\r\n      const { user, game } = msg.data as {\r\n        user: IUser,\r\n        game: IGame,\r\n      };\r\n      batchDispatch(() => {\r\n        dispatch(roomActions.createSetCurrentGame(game));\r\n        dispatch(roomActions.createSetCurrentRoomStatus(RoomStatus.GAMING));\r\n        dispatch(userActions.createSetIsGaming(user.isGaming));\r\n        dispatch(push(`/game/${roomId}`));\r\n      })\r\n\r\n    });\r\n    return () => {\r\n      refreshRoomInfoOff();\r\n      allPlayerReadyOff();\r\n    };\r\n  }, [roomId, wsClient, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (Number.isNaN(roomId)) return;\r\n    dispatch(roomEffects.enterRoom(roomId));\r\n  }, [dispatch, roomId]);\r\n\r\n  if (rawRoomId == null) return <Redirect to=\"/\" />;\r\n  if (currentRoom == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-playing-room\">\r\n      <div className=\"view-playing-room-header\">\r\n        <AppBar\r\n          style={{\r\n            boxShadow: 'none',\r\n          }}\r\n          position=\"static\"\r\n        >\r\n          <Toolbar>\r\n            <Button\r\n              onClick={() => {\r\n                console.log('cliuck');\r\n                dispatch(roomEffects.leaveRoom());\r\n              }}\r\n              color=\"inherit\"\r\n            >\r\n              <BackIcon />\r\n              离开房间\r\n            </Button>\r\n            <Typography\r\n              style={{\r\n                flex: 1,\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              {currentRoom.name}\r\n              {roomTypeTextDict[currentRoom.type]}\r\n            </Typography>\r\n            <Button color=\"inherit\">\r\n              房间号: {String(currentRoom.id).padStart(5, '0')}\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n      <div className=\"view-playing-room-main\">\r\n        <div className=\"player-list\">\r\n          {Array(8)\r\n            .fill(null)\r\n            .map((_, index) => {\r\n              if (index < currentRoom.users.length) {\r\n                const user = currentRoom.users[index];\r\n                return (\r\n                  <div key={index} className=\"player-list-item active\">\r\n                    <div className=\"player-list-item-avatar\">\r\n                      {user.username[0]}\r\n                    </div>\r\n                    <div className=\"player-list-item-username\">\r\n                      {user.username}({user.isReady ? '准备' : '未准备'})\r\n                    </div>\r\n                  </div>\r\n                );\r\n              }\r\n              return (\r\n                <div key={index} className=\"player-list-item\">\r\n                  <div className=\"player-list-item-avatar\">空</div>\r\n                  <div className=\"player-list-item-username\">等待加入</div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"start-game-button-wrapper\">\r\n          <Button onClick={toggleGameReady} className=\"start-game-button\" variant=\"outlined\" fullWidth>\r\n            {isReady ? '取消准备' : '准备'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"room-message-wrapper\">\r\n          <RoomMessage />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { replace } from 'connected-react-router';\r\nimport { IReduxState } from '../store/reducers';\r\n\r\nconst selectorAuthLoyout = ({ user: { user }, router: { location: { pathname } } }: IReduxState) => ({\r\n  user,\r\n  pathname,\r\n});\r\n\r\nexport default function AuthLoyout({ children}: {children: any}) {\r\n\r\n  const { user, pathname } = useSelector(selectorAuthLoyout, shallowEqual);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user == null) return;\r\n\r\n    if (user.isGaming && user.currentRoomId == null) {\r\n      console.error('用户正在游戏中', '但找不到房间号');\r\n    }\r\n\r\n    if (user.isGaming && user.currentRoomId != null) {\r\n      const targetPath = `/game/${user.currentRoomId}`;\r\n      if (pathname !== targetPath) dispatch(replace(targetPath));\r\n    } else if (user.currentRoomId != null) {\r\n      const targetPath = `/room/${user.currentRoomId}`;\r\n      if (pathname !== targetPath) dispatch(replace(targetPath));\r\n    }\r\n  }, [user, pathname, dispatch]);\r\n\r\n\r\n  return children;\r\n}\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\n\r\nexport default function AvatarBox({\r\n  avatar,\r\n  text,\r\n}: {\r\n  avatar?: any;\r\n  text: string;\r\n}) {\r\n  return (\r\n    <div className=\"avatar-box\">\r\n      <div className=\"avatar-box-avatar\">{text.length ? text[0] : 'A'}</div>\r\n      <div className=\"avatar-box-text\">{text}</div>\r\n    </div>\r\n  );\r\n}\r\n","\r\nexport default class RequestMessage {\r\n  id: string;\r\n  createAt = Date.now();\r\n  constructor(public data: unknown, public handler?: string, public desc?: string) {\r\n    this.id = `${this.handler}-${Date.now()}`;\r\n  }\r\n\r\n  toJSON() {\r\n    const { ...publics } = this;\r\n    return publics;\r\n  }\r\n}\r\n\r\nexport function isRequestMessage(target: any): target is RequestMessage {\r\n  if (target == null) return false;\r\n  if (\r\n    typeof target === 'object' &&\r\n    typeof target.id === 'string' &&\r\n    typeof target.createAt === 'number'\r\n  ) return true;\r\n  return false;\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nimport './index.scss';\r\nimport WebsocketClient from '@client/WebsocketClient';\r\nimport RequestMessage from '../../../../../../shared/models/RequestMessage';\r\n\r\n// 以 375宽 为标准\r\n\r\nfunction AnswerInputBox({ wsClient }: {\r\n  wsClient: WebsocketClient,\r\n}) {\r\n\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  const sendGuessAnswer = useCallback(() => {\r\n    if (answer.length === 0) return;\r\n    const reqMsg = new RequestMessage(answer, 'guessAnswer');\r\n    wsClient.sendMessage(reqMsg);\r\n    setAnswer('');\r\n  }, [answer, wsClient, setAnswer]);\r\n\r\n  return (\r\n    <div className=\"answer-input-box\">\r\n      <TextField value={answer} onChange={evt => setAnswer(evt.target.value.trim())} placeholder=\"答案\" className=\"answer-input\" variant=\"outlined\" type=\"text\" />\r\n      <Button disabled={answer.length === 0} variant=\"outlined\" onClick={sendGuessAnswer}>发送</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerInputBox;\r\n","export enum DrawActionType {\r\n  START_DRAW_LINE = 'startDrawLine',\r\n  DRAW_LINE_TO = 'drawLineTo',\r\n  END_DRAW_LINE = 'endDrawLine',\r\n  DRAW_IMAGE = 'drawImage',\r\n  CLEAR_CANVAS = 'clearCanvas',\r\n  // SET_OPTIONS = 'setOptions',\r\n}\r\n\r\n\r\nexport default class DrawAction {\r\n  constructor(public type: DrawActionType, public payload?: any) {}\r\n}\r\n","import Point from './Point';\r\n\r\nexport interface ICanvasControllerSetting {\r\n  penSize?: number;\r\n  penColor?: string;\r\n}\r\n\r\nexport default class CanvasController {\r\n  public ctx: CanvasRenderingContext2D;\r\n  public canvasEl: HTMLCanvasElement;\r\n  get penColor() {\r\n    return this.ctx.strokeStyle as string;\r\n  }\r\n  set penColor(color: string) {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n  }\r\n  get penSize() {\r\n    return this.ctx.lineWidth;\r\n  }\r\n  set penSize(size: number) {\r\n    this.ctx.lineWidth = size;\r\n  }\r\n  constructor(canvasEl?: HTMLCanvasElement, options?: {\r\n    penColor?: string;\r\n    penSize?: number;\r\n  }) {\r\n    this.canvasEl =\r\n      canvasEl == null ? document.createElement('canvas') : canvasEl;\r\n    this.ctx = this.canvasEl.getContext('2d') as CanvasRenderingContext2D;\r\n    this.init();\r\n    if (options != null) {\r\n      if (options.penColor != null) this.setPenColor(options.penColor);\r\n      if (options.penSize != null) this.setPenSize(options.penSize);\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.ctx.fillStyle = this.penColor;\r\n    this.ctx.strokeStyle = this.penColor;\r\n    this.ctx.lineWidth = this.penSize;\r\n  }\r\n\r\n  // new\r\n\r\n  getSetting(): Required<ICanvasControllerSetting> {\r\n    return {\r\n      penSize: this.penSize,\r\n      penColor: this.penColor,\r\n    }\r\n  }\r\n\r\n  setting(s: ICanvasControllerSetting) {\r\n    if (s.penColor != null) this.penColor = s.penColor;\r\n    if (s.penSize != null) this.penSize = s.penSize;\r\n  }\r\n\r\n  drawImage(image: HTMLImageElement | string) {\r\n    // console.log('image', image);\r\n    if (typeof image === 'string') {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        this.clearCanvas();\r\n        this.drawImage(img);\r\n      };\r\n      img.src = image;\r\n    } else {\r\n      this.ctx.drawImage(image, 0, 0);\r\n    }\r\n  }\r\n\r\n  drawPoint(to: Point, r: number = this.penSize / 2) {\r\n    const { ctx } = this;\r\n    console.log('drawPoint', 'r',r , 'lineWidth', this.ctx.lineWidth);\r\n    ctx.beginPath();\r\n    ctx.arc(to.x, to.y, r, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    // ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  getSnapshot() {\r\n    return this.canvasEl.toDataURL('image/jpeg');\r\n  }\r\n\r\n  startDrawLine(startPoint: Point) {\r\n    const sp = startPoint;\r\n    const { ctx } = this;\r\n    ctx.beginPath();\r\n    ctx.moveTo(sp.x, sp.y);\r\n  }\r\n\r\n  drawLineTo(to: Point) {\r\n    // console.log('to', to);\r\n    const { ctx } = this;\r\n    ctx.lineTo(to.x, to.y);\r\n    ctx.stroke();\r\n  }\r\n\r\n  mount(elementSelector: string) {\r\n    const el = document.querySelector(elementSelector);\r\n    (window as any).el = el;\r\n    console.log(el, elementSelector);\r\n    if (el != null) {\r\n      el.append(this.canvasEl);\r\n      this.canvasEl.height = el.clientHeight;\r\n      this.canvasEl.width = el.clientWidth;\r\n      this.clearCanvas();\r\n    } else {\r\n      throw new Error(`无法通过 ${elementSelector} 找到相应的元素，请确定选择器书写正确`);\r\n    }\r\n  }\r\n\r\n  clearCanvas() {\r\n    const prevFillStyle = this.ctx.fillStyle;\r\n    this.ctx.fillStyle = '#fff';\r\n    this.ctx.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    this.ctx.fillStyle = prevFillStyle;\r\n  }\r\n\r\n  // end new\r\n\r\n  setOptions(op: {\r\n    penColor?: string;\r\n    penSize?: number;\r\n  }) {\r\n    if (op.penColor != null) this.setPenColor(op.penColor);\r\n    if (op.penSize != null) this.setPenSize(op.penSize);\r\n  }\r\n\r\n  getOptions() {\r\n    return {\r\n      penColor: this.penColor,\r\n      penSize: this.penSize,\r\n    }\r\n  }\r\n\r\n  setPenSize(size: number) {\r\n    this.ctx.lineWidth = size;\r\n  }\r\n\r\n  setPenColor(color: string) {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n  }\r\n\r\n\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Popover } from '@material-ui/core';\r\nimport {\r\n  ColorLens as ColorIcon,\r\n  FiberManualRecord as CircleIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport CanvasController from '@client/controller/CanvasController';\r\n\r\nconst colors = [\r\n  '#000',\r\n  '#F44336',\r\n  '#E91E63',\r\n  '#9C27B0',\r\n  '#2196F3',\r\n  '#48C6FF',\r\n  '#4CAF50',\r\n  '#8BC34A',\r\n  '#FFEB3B',\r\n  '#FFC107',\r\n  '#FF9800',\r\n  '#795548',\r\n  '#607D8B',\r\n  '#666',\r\n  '#999',\r\n  '#BBB',\r\n  '#DDD',\r\n  '#FFF',\r\n];\r\n\r\nexport default function SetPenColorButton({\r\n  anchorEl,\r\n  penColor,\r\n  setPenColor,\r\n}: {\r\n  draw: CanvasController;\r\n  anchorEl: Element | null;\r\n  penColor: string;\r\n  setPenColor: (color: string) => void;\r\n}) {\r\n  const [isShowSetPenColor, setIsShowSetPenColor] = useState(false);\r\n  const updatePenColor = useCallback(\r\n    (color: string) => {\r\n      setPenColor(color);\r\n      setIsShowSetPenColor(false);\r\n    },\r\n    [setPenColor, setIsShowSetPenColor],\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{\r\n          flex: '1',\r\n        }}\r\n        onClick={() => setIsShowSetPenColor(prev => !prev)}\r\n        className=\"canvas-operation-list-item\"\r\n      >\r\n        <ColorIcon style={{\r\n          color: penColor,\r\n        }} fontSize=\"large\" />\r\n      </IconButton>\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        onClose={() => setIsShowSetPenColor(false)}\r\n        open={isShowSetPenColor}\r\n      >\r\n        <div className=\"pen-color-wrapper\">\r\n          {colors.map(color => (\r\n            <IconButton onClick={() => updatePenColor(color)} key={color}>\r\n              <CircleIcon style={{\r\n                border: '1px solid #000',\r\n                color,\r\n              }} />\r\n            </IconButton>\r\n          ))}\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function PlainLine(props: {\r\n  length?: number;\r\n  width?: number;\r\n  vertical?: boolean;\r\n  color?: string;\r\n}) {\r\n  let { length, width, vertical, color  } = props;\r\n  if (length == null) length = 24;\r\n  if (width == null) width = 2;\r\n  if (vertical == null) vertical = false;\r\n  if (color == null) color = '#000';\r\n  if (vertical) {\r\n    [length, width] = [width, length];\r\n  }\r\n  return (\r\n    <div\r\n      className=\"plain-line\"\r\n      style={{\r\n        height: width,\r\n        width: length,\r\n        backgroundColor: color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Popover, Slider } from '@material-ui/core';\r\n\r\nimport PlainLine from '@client/ui/PlainLine';\r\n\r\nexport default function SetPenSizeButton({\r\n  anchorEl,\r\n  penColor,\r\n  penSize,\r\n  setPenSize,\r\n}: {\r\n  anchorEl: Element | null;\r\n  penSize: number;\r\n  setPenSize: (size: number) => void;\r\n  penColor: string;\r\n}) {\r\n  const updatePenSize = useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      const size = value as number;\r\n      setPenSize(size);\r\n    },\r\n    [setPenSize],\r\n  );\r\n  const [isShowSetPenSize, setIsShowSetPenSize] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{\r\n          flex: '1',\r\n        }}\r\n        onClick={() => setIsShowSetPenSize(prev => !prev)}\r\n        className=\"canvas-operation-list-item\"\r\n      >\r\n        <PlainLine color={penColor} length={30} width={penSize} />\r\n      </IconButton>\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        anchorEl={anchorEl == null ? undefined : anchorEl}\r\n        onClose={() => setIsShowSetPenSize(false)}\r\n        open={isShowSetPenSize}\r\n      >\r\n        <div className=\"pen-size-slider-wrapper\">\r\n          <Slider\r\n            style={{\r\n              width: '80vw',\r\n            }}\r\n            value={penSize}\r\n            onChange={updatePenSize}\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            marks\r\n            min={1}\r\n            max={20}\r\n          />\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import './Canvas.scss';\r\n\r\nimport CanvasController, { ICanvasControllerSetting } from '@client/controller/CanvasController';\r\nimport Point from '@client/controller/Point';\r\nimport DrawAction, { DrawActionType } from '@client/model/DrawAction';\r\nimport WebsocketClient from '@client/WebsocketClient';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Redo as RedoIcon, RestoreFromTrash as ClearIcon, Undo as UndoIcon } from '@material-ui/icons';\r\nimport React, { createRef, TouchEvent } from 'react';\r\n\r\nimport RequestMessage from '../../../../../../shared/models/RequestMessage';\r\nimport SetPenColorButton from './SetPenColorButton';\r\nimport SetPenSizeButton from './SetPenSizeButton';\r\n\r\n// import RequestMessage from '@client/WebsocketClient/models/RequestMessage';\r\n\r\ninterface ICanvasState {\r\n  futureDrawings: string[];\r\n  pastDrawings: string[];\r\n  penColor: string;\r\n  penSize: number;\r\n}\r\n\r\nexport default class Canvas extends React.PureComponent<\r\n  {\r\n    isSelfPlaying: boolean;\r\n    wsClient: WebsocketClient;\r\n    initialDrawing?: string;\r\n  },\r\n  ICanvasState\r\n> {\r\n  state: ICanvasState = {\r\n    futureDrawings: [],\r\n    pastDrawings: [],\r\n    penColor: '#000',\r\n    penSize: 1,\r\n  };\r\n  posElRef = createRef<HTMLDivElement>();\r\n  draw = new CanvasController();\r\n  // warn 维持一个currentDrawing变量,每次都调用toDataUrl是非常消耗性能的操作\r\n\r\n  // 生命周期\r\n\r\n  componentDidMount() {\r\n    this.draw.mount('#id-canvas');\r\n    this.bindEvents();\r\n    const { initialDrawing } = this.props;\r\n    if (initialDrawing !== undefined) {\r\n      this.draw.drawImage(initialDrawing);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { wsClient } = this.props;\r\n    wsClient.off('drawAction');\r\n  }\r\n\r\n  bindEvents() {\r\n    const { wsClient } = this.props;\r\n    const { draw } = this;\r\n    wsClient.on('drawAction', respMsgData => {\r\n      // if (!this.props.isSelfPlaying) return; // 不能写上面，闭包导致无法取得变量最新值\r\n      const drawAction = respMsgData as DrawAction;\r\n      const { type, payload } = drawAction;\r\n      switch (type) {\r\n        case DrawActionType.START_DRAW_LINE:\r\n          {\r\n            const { point, setting } = payload as {\r\n              point: Point;\r\n              setting?: ICanvasControllerSetting;\r\n            };\r\n            let prevSetting = draw.getSetting();\r\n            if (setting != null) draw.setting(setting);\r\n            draw.drawPoint(point);\r\n            draw.startDrawLine(point);\r\n            draw.setting(prevSetting);\r\n          }\r\n          break;\r\n        case DrawActionType.DRAW_LINE_TO:\r\n          {\r\n            const { point, setting } = payload as {\r\n              point: Point;\r\n              setting?: ICanvasControllerSetting;\r\n            };\r\n            let prevSetting = draw.getSetting();\r\n            if (setting != null) draw.setting(setting);\r\n            draw.drawLineTo(point);\r\n            draw.setting(prevSetting);\r\n          }\r\n          break;\r\n        case DrawActionType.CLEAR_CANVAS:\r\n          draw.clearCanvas();\r\n          break;\r\n        case DrawActionType.DRAW_IMAGE:\r\n          {\r\n            const imgData = payload as string;\r\n            draw.drawImage(imgData);\r\n          }\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  // -- end 生命周期\r\n\r\n  // 辅助函数\r\n\r\n  sendDrawActionToServer(\r\n    type: DrawActionType,\r\n    payload?: unknown,\r\n    extral?: { newestDrawing?: string },\r\n  ) {\r\n    const { wsClient, isSelfPlaying } = this.props;\r\n    if (!isSelfPlaying) return;\r\n    const drawAction = new DrawAction(type, payload);\r\n    const reqMsg = new RequestMessage(\r\n      {\r\n        drawAction,\r\n        ...(extral !== undefined ? extral : {}),\r\n      },\r\n      'drawAction',\r\n    );\r\n    wsClient.sendMessage(reqMsg);\r\n  }\r\n\r\n  getPointFromEvent = (evt: TouchEvent): Point => {\r\n    // 获得相对画布左上角的坐标\r\n    const { touches, target } = evt;\r\n    const t = touches[0];\r\n    const { clientX, clientY } = t;\r\n    const result = {\r\n      x: clientX - (target as HTMLCanvasElement).offsetLeft,\r\n      y: clientY - (target as HTMLCanvasElement).offsetTop,\r\n    };\r\n    return result;\r\n  };\r\n\r\n  // 画画相关\r\n\r\n  snapshotCurrentDrawing() {\r\n    const curDrawing = this.draw.getSnapshot();\r\n    this.setState(prevState => ({\r\n      pastDrawings: prevState.pastDrawings.concat(curDrawing),\r\n    }));\r\n  }\r\n\r\n  startDrawLine(p: Point) {\r\n    const { draw } = this;\r\n    const { futureDrawings } = this.state;\r\n    if (futureDrawings.length !== 0) {\r\n      this.setState({\r\n        futureDrawings: [],\r\n      });\r\n    }\r\n\r\n    draw.drawPoint(p);\r\n    draw.startDrawLine(p);\r\n\r\n    this.sendDrawActionToServer(DrawActionType.START_DRAW_LINE, {\r\n      point: p,\r\n      setting: draw.getSetting(),\r\n    });\r\n  }\r\n\r\n  drawLineTo(to: Point) {\r\n    const { draw } = this;\r\n    draw.drawLineTo(to);\r\n\r\n    this.sendDrawActionToServer(DrawActionType.DRAW_LINE_TO, {\r\n      point: to,\r\n      setting: draw.getSetting(),\r\n    });\r\n  }\r\n\r\n  endDrawing = () => {\r\n    this.sendDrawActionToServer(DrawActionType.END_DRAW_LINE, undefined, {\r\n      newestDrawing: this.draw.getSnapshot(),\r\n    });\r\n  };\r\n\r\n  clearCanvas = () => {\r\n    this.snapshotCurrentDrawing();\r\n\r\n    this.draw.clearCanvas();\r\n    this.sendDrawActionToServer(DrawActionType.CLEAR_CANVAS, {\r\n      newestDrawing: this.draw.getSnapshot(),\r\n    });\r\n  };\r\n\r\n  undoDrawing = () => {\r\n    const { draw } = this;\r\n    const { pastDrawings, futureDrawings } = this.state;\r\n    if (pastDrawings.length === 0) return;\r\n    const pastDrawing = pastDrawings.pop() as string;\r\n    draw.drawImage(pastDrawing);\r\n\r\n    this.setState({\r\n      pastDrawings: [...pastDrawings],\r\n      futureDrawings: [...futureDrawings, draw.getSnapshot()],\r\n    });\r\n\r\n    this.sendDrawActionToServer(DrawActionType.DRAW_IMAGE, pastDrawing, {\r\n      newestDrawing: pastDrawing,\r\n    });\r\n  };\r\n\r\n  redoDrawing = () => {\r\n    const { draw } = this;\r\n    const { pastDrawings, futureDrawings } = this.state;\r\n    if (futureDrawings.length === 0) return;\r\n\r\n    const futureDrawing = futureDrawings.pop() as string;\r\n    draw.drawImage(futureDrawing);\r\n\r\n    this.setState({\r\n      pastDrawings: [...pastDrawings, draw.getSnapshot()],\r\n      futureDrawings: [...futureDrawings],\r\n    });\r\n\r\n    this.sendDrawActionToServer(DrawActionType.DRAW_IMAGE, futureDrawing, {\r\n      newestDrawing: futureDrawing,\r\n    });\r\n  };\r\n\r\n  setPenColor = (penColor: string) => {\r\n    this.draw.penColor = penColor;\r\n    this.setState({ penColor });\r\n  };\r\n\r\n  setPenSize = (penSize: number) => {\r\n    this.draw.penSize = penSize;\r\n    this.setState({ penSize });\r\n  };\r\n\r\n  // -- end 辅助函数\r\n\r\n  handleTouchStart = (evt: TouchEvent) => {\r\n    this.snapshotCurrentDrawing();\r\n\r\n    const p = this.getPointFromEvent(evt);\r\n    this.startDrawLine(p);\r\n\r\n    // this.startDrawLine(this.getPointFromEvent(evt));\r\n  };\r\n\r\n  handleTouchMove = (evt: TouchEvent) => {\r\n    const p = this.getPointFromEvent(evt);\r\n    this.drawLineTo(p);\r\n  };\r\n\r\n  handleTouchEnd = (evt: TouchEvent) => {\r\n    this.endDrawing();\r\n  };\r\n\r\n  render() {\r\n    const { isSelfPlaying } = this.props;\r\n    const { futureDrawings, pastDrawings, penColor, penSize } = this.state;\r\n    const { draw, setPenColor, setPenSize } = this;\r\n    return (\r\n      <div>\r\n        <div className=\"canvas-wrapper\">\r\n          <div\r\n            id=\"id-canvas\"\r\n            style={{\r\n              width: 375,\r\n              height: 300,\r\n            }}\r\n            onTouchStart={isSelfPlaying ? this.handleTouchStart : undefined}\r\n            onTouchMove={isSelfPlaying ? this.handleTouchMove : undefined}\r\n            onTouchEnd={isSelfPlaying ? this.handleTouchEnd : undefined}\r\n          />\r\n        </div>\r\n        {!isSelfPlaying ? null : (\r\n          <div ref={this.posElRef} className=\"game-canvas-operations\">\r\n            <SetPenColorButton\r\n              anchorEl={this.posElRef.current}\r\n              draw={draw}\r\n              penColor={penColor}\r\n              setPenColor={setPenColor}\r\n            />\r\n            <SetPenSizeButton\r\n              penSize={penSize}\r\n              penColor={penColor}\r\n              setPenSize={setPenSize}\r\n              anchorEl={this.posElRef.current}\r\n            />\r\n            <IconButton\r\n              disabled={pastDrawings.length === 0}\r\n              onClick={this.undoDrawing}\r\n              style={{ flex: '1' }}\r\n              className=\"canvas-operation-list-item\"\r\n            >\r\n              <UndoIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton\r\n              disabled={futureDrawings.length === 0}\r\n              style={{ flex: '1' }}\r\n              onClick={this.redoDrawing}\r\n              className=\"canvas-operation-list-item\"\r\n            >\r\n              <RedoIcon fontSize=\"large\" />\r\n            </IconButton>\r\n            <IconButton\r\n              style={{ flex: '1', color: '#000' }}\r\n              className=\"canvas-operation-list-item\"\r\n              onClick={this.clearCanvas}\r\n            >\r\n              <ClearIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './index.scss';\r\n\r\nimport { roomActions, userActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport AvatarBox from '@client/ui/AvatarBox';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport ChattingMessage from 'shared/models/ChattingMessage';\r\nimport { IGame, IUser } from 'shared/types';\r\n\r\nimport AnswerInputBox from './components/AnswerInputBox';\r\nimport CanvasContainer from './components/CanvasContainer';\r\n\r\nconst selectorGame = ({\r\n  room: { currentGame },\r\n  user: { user },\r\n  connection: { wsClient },\r\n}: IReduxState) => ({\r\n  currentGame,\r\n  user,\r\n  wsClient,\r\n});\r\n\r\nexport default function Game() {\r\n  const { currentGame, user, wsClient } = useSelector(\r\n    selectorGame,\r\n    shallowEqual,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const [chattingList, setChattingList] = useState<ChattingMessage[]>([]);\r\n  useEffect(() => {\r\n    const wrongGuessOff = wsClient.on('chattingMessage', msgData => {\r\n      setChattingList(prevList => [msgData as ChattingMessage, ...prevList]);\r\n    });\r\n\r\n    const gameOverOff = wsClient.on('gameOver', msgData => {\r\n      const { user } = msgData as {\r\n        user: IUser;\r\n      };\r\n      dispatch(userActions.createSetIsGaming(user.isGaming));\r\n    });\r\n\r\n    const refreshGameOff = wsClient.on('refreshGame', msgData => {\r\n      const { game } = msgData as {\r\n        game: IGame;\r\n      };\r\n      dispatch(roomActions.createSetCurrentGame(game));\r\n    });\r\n\r\n    return () => {\r\n      wrongGuessOff();\r\n      gameOverOff();\r\n      refreshGameOff();\r\n    };\r\n  }, [setChattingList, dispatch, wsClient]);\r\n\r\n  useEffect(() => {\r\n    if (currentGame == null) {\r\n      dispatch(roomEffects.getGame());\r\n    }\r\n  }, [currentGame, dispatch]);\r\n\r\n  const isSelfPlaying = useMemo(() => {\r\n    // 自己是画家还是猜测的人\r\n    if (user == null || currentGame == null) return false;\r\n    if (user.id === currentGame.playInfo.currentPlayer.id) return true;\r\n    return false;\r\n  }, [user, currentGame]);\r\n\r\n  if (currentGame == null || user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-game\">\r\n      <AppBar\r\n        style={{\r\n          boxShadow: 'none',\r\n        }}\r\n        position=\"static\"\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">\r\n            {isSelfPlaying\r\n              ? `请画 ${currentGame.playInfo.keyword.raw}`\r\n              : `${currentGame.playInfo.keyword.raw.length}个字 ${currentGame.playInfo.keyword.hint}`}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className=\"view-game-main\">\r\n        <CanvasContainer\r\n          wsClient={wsClient}\r\n          isSelfPlaying={isSelfPlaying}\r\n          initialDrawing={currentGame.newestDrawing}\r\n        />\r\n        <div className=\"player-list\">\r\n          {currentGame.users.map(gameUser => (\r\n            <div key={gameUser.id} className=\"player-list-item\">\r\n              <AvatarBox\r\n                text={`${gameUser.username}${\r\n                  gameUser.id === user.id ? '(我)' : ''\r\n                }(${currentGame.userScores[gameUser.id]}}分)`}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"game-message-list\">\r\n          {chattingList.map(c => (\r\n            <div key={c.id} className=\"game-message-list-item\">\r\n              {c.speaker.name} 猜：{c.content}\r\n            </div>\r\n          ))}\r\n          <div className=\"game-message-list-item\">车笔刀 猜：汽车</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"view-game-footer\">\r\n        {isSelfPlaying ? null : <AnswerInputBox wsClient={wsClient} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import GameLobby from \"@client/view/GameLobby\";\r\nimport BasicLayout from \"@client/layout/BasicLayout\";\r\nimport CreateRoom from \"@client/view/room/CreateRoom\";\r\nimport PlayingRoom from \"@client/view/room/PlayingRoom\";\r\nimport AuthLoyout from \"@client/layout/AuthLayout\";\r\nimport Game from \"@client/view/game/Game\";\r\n\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  component: (...args: any[]) => JSX.Element;\r\n  layout?: (...args: any[]) => JSX.Element;\r\n  children?: IRoute[];\r\n}\r\n\r\nconst routes: IRoute[] = [\r\n  {\r\n    path: '/',\r\n    component: AuthLoyout,\r\n    children: [\r\n      {\r\n          path: '/',\r\n          component: BasicLayout,\r\n          children: [\r\n            {\r\n              path: '/create-room',\r\n              component: CreateRoom,\r\n            },\r\n            {\r\n              path: '/game/:id',\r\n              component: Game,\r\n            },\r\n            {\r\n              path: '/room/:roomId',\r\n              component: PlayingRoom,\r\n            },\r\n            {\r\n              path: '/',\r\n              component: GameLobby,\r\n            }\r\n          ]\r\n      },\r\n    ]\r\n  }\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\nimport NotificationPanel from '@client/component/NotificationPanel';\r\n\r\nexport default function BasicLayout({ children }: { children : any}) {\r\n    return (\r\n      <>\r\n        <div className=\"basic-layout\">\r\n            {children}\r\n        </div>\r\n        <NotificationPanel />\r\n      </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  component: (...args: any[]) => JSX.Element;\r\n  layout?: (...args: any[]) => JSX.Element;\r\n  children?: IRoute[];\r\n}\r\n\r\nfunction generateRoutes(routes?: IRoute[]) {\r\n  if (routes == null || routes.length === 0) return null;\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => {\r\n        const { layout: Layout, component: Component } = route;\r\n        if (Layout == null)\r\n          return (\r\n            <Route\r\n              key={index}\r\n              path={route.path}\r\n              render={() => <Component>{generateRoutes(route.children)}</Component>}\r\n            ></Route>\r\n          );\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            render={() => (\r\n              <Layout>\r\n                <Component>{generateRoutes(route.children)}</Component>\r\n              </Layout>\r\n            )}\r\n          ></Route>\r\n        );\r\n      })}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport const AppRoute = () => generateRoutes(routes);\r\n","import { IUser } from '../../../shared/types';\r\nimport { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { userActionTypes } from '../actionTypes';\r\n\r\nexport interface IReduxUserState {\r\n  isLogining: boolean;\r\n  user: null | IUser;\r\n  isRegistering: boolean;\r\n}\r\n\r\nconst defaultState: IReduxUserState = {\r\n  isLogining: false,\r\n  user: null,\r\n  isRegistering: false,\r\n};\r\n\r\nexport default function userReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case userActionTypes.SET_USERNAME:\r\n        if (draft.user != null) {\r\n          draft.user.username = payload as string;\r\n        }\r\n        break;\r\n      case userActionTypes.SET_USER:\r\n        draft.user = payload as IUser;\r\n        break;\r\n      case userActionTypes.SET_IS_GAMING:\r\n        if (draft.user != null) {\r\n          draft.user.isGaming = payload as boolean;\r\n        }\r\n        break;\r\n      case userActionTypes.SET_IS_READY:\r\n        if (draft.user != null) {\r\n          draft.user.isReady = payload as boolean;\r\n        }\r\n        break;\r\n\r\n      case userActionTypes.SET_USER_CURRENT_ROOM_ID:\r\n        if (draft.user != null) {\r\n          draft.user.currentRoomId = payload as number | undefined;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { IS_DEV } from \"./util/constants\";\r\n\r\nfunction getConfig() {\r\n    if (IS_DEV) {\r\n        return {\r\n            addr: 'ws://127.0.0.1:9421',\r\n            // addr: 'ws://192.168.137.1:9421',\r\n        }\r\n    }\r\n    return {\r\n        addr: 'ws://101.37.174.138:9421',\r\n    };\r\n}\r\n\r\nexport default getConfig();\r\n\r\n","import { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport WebsocketClient from '../../WebsocketClient';\r\nimport config from '../../config';\r\nimport { userEffects } from '../effects';\r\nimport { store } from '../../App';\r\n\r\nexport interface IReduxConnectionState {\r\n  wsClient: WebsocketClient;\r\n}\r\n\r\nconst defaultState: IReduxConnectionState = {\r\n  wsClient: new WebsocketClient({\r\n    addr: config.addr,\r\n    onopen: () => {\r\n      console.log('服务器已连接');\r\n      store.dispatch(userEffects.login() as any);\r\n    },\r\n  }),\r\n};\r\n\r\nexport default function connectionReducer(state = defaultState, action: IAction) {\r\n  return produce(state, () => {\r\n    const { type } = action;\r\n    switch (type) {\r\n\r\n    }\r\n  });\r\n}\r\n","import { IS_DEV } from '../util/constants';\r\nimport ResponseMessage from '../../shared/models/ResponseMessage';\r\nimport RequestMessage from '../../shared/models/RequestMessage';\r\n// import RequestMessage from './models/RequestMessage';\r\n\r\nexport default class WebsocketClient {\r\n  isConnected = false;\r\n  ws: WebSocket;\r\n  messageCache: RequestMessage[] = [];\r\n  eventMap = new Map<string, (messageData: unknown, message: RequestMessage) => void>();\r\n  constructor(\r\n    public options: {\r\n      addr: string;\r\n      onopen?: (evt: Event) => void;\r\n      onclose?: (evt: Event) => void;\r\n      onerror?: (evt: Event) => void;\r\n    },\r\n  ) {\r\n    this.ws = new window.WebSocket(this.options.addr);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // 注册事件\r\n    this.ws.onopen = evt => {\r\n      this.isConnected = true;\r\n      if (typeof this.options.onopen === 'function') {\r\n        this.options.onopen(evt);\r\n      }\r\n      this.sendMessageFromCache();\r\n    };\r\n    this.ws.onclose = evt => {\r\n      this.isConnected = false;\r\n      if (typeof this.options.onclose === 'function') {\r\n        this.options.onclose(evt);\r\n        if (IS_DEV) {\r\n          console.log('连接断开');\r\n        }\r\n      }\r\n    };\r\n    this.ws.onerror = evt => {\r\n      if (typeof this.options.onerror === 'function') {\r\n        this.options.onerror(evt);\r\n      }\r\n    };\r\n    this.ws.onmessage = ({ data: rawMessage }) => {\r\n      const msg: ResponseMessage = JSON.parse(rawMessage);\r\n      console.log('recive', msg);\r\n      this.emit('message', msg);\r\n      if (msg.requestId != null) {\r\n        this.emit(msg.requestId, msg);\r\n      }\r\n      if (msg.trigger != null) {\r\n        this.emit(msg.trigger, msg);\r\n      }\r\n    };\r\n    // end 注册事件\r\n  }\r\n\r\n  sendMessageFromCache() {\r\n    // 主要是为了处理应用已经加载完成，但是还没建立连接的情况，相当于人为加了一个缓冲层，只要没有connected，这些msg就不会发送\r\n    this.messageCache.forEach(msg => {\r\n      this.sendMessage(msg);\r\n    });\r\n    this.messageCache = [];\r\n  }\r\n\r\n  sendMessage(reqMsg: RequestMessage) {\r\n    if (this.isConnected) {\r\n      console.log(`sendMessage`, reqMsg);\r\n      this.ws.send(JSON.stringify(reqMsg));\r\n    } else {\r\n      this.messageCache.push(reqMsg);\r\n    }\r\n  }\r\n\r\n  // requestSync(type: string, data?: any) {\r\n  //   const messageId = type + '_' + new Date().getTime(); // 这是为了防止收到过时的信息\r\n  //   const msg: RequestMessage = { data, type, id: messageId };\r\n  //   this.sendMessage(msg);\r\n  // }\r\n\r\n  // 不需要等待回复的请求不要用这个方法，会导致内存泄漏，因为无法触发对应reqesut Id的回调函数\r\n  request(handler: string, data?: any) {\r\n    return new Promise<ResponseMessage>((resolve, reject) => {\r\n      try {\r\n        // const messageId = type + '_' + new Date().getTime() // 这是为了防止收到过时的信息\r\n        // const msg: RequestMessage = {data, type, id: messageId}\r\n        const reqMsg = new RequestMessage(data, handler);\r\n        this.on(reqMsg.id, (_, respMsg) => {\r\n\r\n          if (respMsg == null) {\r\n            console.error(`${reqMsg.handler}-${reqMsg.id} 返回来空的message`);\r\n          }\r\n\r\n          // 注意，如果针对本次请求，如果服务器端没有回复响应，则永远不会调用和删除回调\r\n          if (respMsg.error != null) {\r\n            this.emit('error', respMsg);\r\n            reject(respMsg.error);\r\n          }\r\n\r\n          resolve(respMsg);\r\n\r\n          if (respMsg.requestId != null) {\r\n            this.off(respMsg.requestId);\r\n          }\r\n          if (IS_DEV) {\r\n            if (respMsg.requestId != null && respMsg.requestId !== reqMsg.id) {\r\n              console.error(\r\n                `reqMsg.id: ${reqMsg.id} !== respMsg.requestId： ${respMsg.requestId}`,\r\n              );\r\n            }\r\n          }\r\n        });\r\n        this.sendMessage(reqMsg);\r\n      } catch (err) {\r\n        console.error(`request时发生错误 ${err}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  on(eventName: string, callback: (messageData: unknown, message: ResponseMessage) => void) {\r\n    this.eventMap.set(eventName, callback);\r\n    return () => {\r\n      this.off(eventName);\r\n    };\r\n  }\r\n  off(eventName: string) {\r\n    this.eventMap.delete(eventName);\r\n  }\r\n  emit(eventName: string, msg: RequestMessage) {\r\n    const callback = this.eventMap.get(eventName);\r\n    if (typeof callback === 'function') callback(msg.data, msg);\r\n  }\r\n}\r\n","import { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { globalActionTypes } from '../actionTypes';\r\nimport Notification from '@client/model/Notification';\r\n\r\nexport interface IReduxGlobalState {\r\n  numberOfOnlinePlayer: number;\r\n  notifications: Notification[];\r\n}\r\n\r\nconst defaultState: IReduxGlobalState = {\r\n  numberOfOnlinePlayer: 1,\r\n  notifications: [],\r\n};\r\n\r\nexport default function globalReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case globalActionTypes.SET_NUMBER_OF_ONLINE_PLAYER:\r\n        draft.numberOfOnlinePlayer = payload as number;\r\n        break;\r\n      case globalActionTypes.ADD_NOTIFICATION:\r\n        draft.notifications.push(payload as Notification);\r\n        break;\r\n      case globalActionTypes.SHIFT_NOTIFICATION:\r\n        draft.notifications.shift();\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { RoomStatus } from 'shared/constants/room';\r\nimport { IGame, IRoom, IUser } from 'shared/types';\r\nimport { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { roomActionTypes } from '../actionTypes';\r\n\r\nexport interface IReduxRoomState {\r\n  roomList: IRoom[];\r\n  currentRoom: null | IRoom;\r\n  currentGame: null | IGame;\r\n}\r\n\r\nconst defaultState: IReduxRoomState = {\r\n  roomList: [],\r\n  currentRoom: null,\r\n  currentGame: null,\r\n};\r\n\r\nexport default function roomReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case roomActionTypes.SET_ROOM_LIST:\r\n        draft.roomList = payload as IRoom[];\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_ROOM_USERS:\r\n        if (draft.currentRoom != null) {\r\n          draft.currentRoom.users = payload as IUser[];\r\n        }\r\n        break;\r\n      case roomActionTypes.SET_ROOM:\r\n        draft.currentRoom = payload as IRoom | null;\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_GAME:\r\n        draft.currentGame = payload as IGame | null;\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_ROOM_STATUS:\r\n        if (draft.currentRoom != null) {\r\n          draft.currentRoom.status = payload as RoomStatus;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { Location } from 'history';\r\n\r\nimport userReducer, { IReduxUserState } from \"./user/reducer\";\r\nimport connectionReducer, { IReduxConnectionState } from \"./connection/reducer\";\r\nimport globalReducer, { IReduxGlobalState } from \"./global/reducer\";\r\nimport roomReducer, { IReduxRoomState } from \"./room/reducer\";\r\n\r\nconst reducers = {\r\n  user: userReducer,\r\n  connection: connectionReducer,\r\n  global: globalReducer,\r\n  room: roomReducer,\r\n}\r\n\r\nconst createRootReducer = (history: any) => combineReducers({\r\n  router: connectRouter(history),\r\n  ...reducers,\r\n});\r\n\r\nexport default createRootReducer;\r\n\r\nexport interface IReduxState {\r\n    user: IReduxUserState,\r\n    connection: IReduxConnectionState,\r\n    global: IReduxGlobalState,\r\n    room: IReduxRoomState,\r\n    router: {\r\n      location: Location,\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport createRootReducer from './reducers';\r\nimport { IS_DEV } from '../util/constants';\r\n\r\nexport const history = createHashHistory();\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore() {\r\n  if (IS_DEV) {\r\n    const store = createStore(\r\n      createRootReducer(history), // root reducer with router state\r\n      composeEnhancers(\r\n        applyMiddleware(\r\n          routerMiddleware(history), // for dispatching history actions\r\n          ReduxThunk,\r\n        ),\r\n      ),\r\n    );\r\n\r\n    return store;\r\n  } else {\r\n    const store = createStore(\r\n      createRootReducer(history), // root reducer with router state\r\n      compose(\r\n        applyMiddleware(\r\n          routerMiddleware(history), // for dispatching history actions\r\n          ReduxThunk,\r\n        ),\r\n      ),\r\n    );\r\n\r\n    return store;\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\n// import { HashRouter } from 'react-router-dom';\nimport { Provider, useDispatch } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport { AppRoute } from './route';\nimport configureStore, { history } from '@client/store'\nimport { userEffects } from './store/effects';\n\nexport const store = configureStore();\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(userEffects.startListenRefreshPlayerInfo());\n    return () => {\n      dispatch(userEffects.stopListenRefreshPlayerInfo());\n    };\n  }, [dispatch]);\n\n\n  return (\n    <div className=\"App\">\n      <ConnectedRouter history={history}>\n        <AppRoute />\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nconst AppWrapper = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default AppWrapper;\n","import { hot } from 'react-hot-loader/root';\nimport 'react-hot-loader';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.scss';\nimport { IS_DEV } from './util/constants';\n\nif (IS_DEV) {\n  ReactDOM.render(React.createElement(hot(App)), document.getElementById('root'));\n} else {\n  ReactDOM.render(React.createElement(App), document.getElementById('root'));\n}\n\n"],"sourceRoot":""}