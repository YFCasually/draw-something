{"version":3,"sources":["store/user/actionTypes.ts","store/global/actionTypes.ts","store/room/actionTypes.ts","store/user/reducer.ts","store/global/reducer.ts","store/room/reducer.ts","store/reducers.ts","util/helper.ts","util/constants.ts","store/index.ts","store/user/actions.ts","store/global/actions.ts","store/room/actions.ts","../shared/models/RequestMessage.ts","config.ts","WebsocketClient/wsClient.ts","WebsocketClient/index.ts","API/user.ts","API/index.ts","store/user/effects.ts","store/global/effects.ts","../shared/constants/room.ts","model/Notification.ts","store/room/effects.ts","ui/FullScreenLoading.tsx","view/GameLobby/components/RoomList/index.tsx","view/GameLobby/components/AccountCard/index.tsx","view/GameLobby/components/GameLobbyHeader/index.tsx","hooks/index.ts","view/GameLobby/index.tsx","component/NotificationPanel/index.tsx","view/room/CreateRoom/index.tsx","../shared/constants/index.ts","view/room/PlayingRoom/components/RoomChatting/index.tsx","view/room/PlayingRoom/components/RoomHeader.tsx","ui/UserAvatar/index.tsx","view/room/PlayingRoom/components/UserList/index.tsx","view/room/PlayingRoom/index.tsx","layout/AuthLayout.tsx","view/game/Game/components/AnswerInputBox/index.tsx","../shared/models/DrawAction.ts","controller/CanvasController.ts","view/game/Game/components/CanvasContainer/SetPenColorButton.tsx","ui/PlainLine.tsx","view/game/Game/components/CanvasContainer/SetPenSizeButton.tsx","view/game/Game/components/CanvasContainer/index.tsx","view/game/Game/components/GameChattingMessage/index.tsx","view/game/Game/components/GameHeader/index.tsx","view/game/Game/components/GameUserList/index.tsx","view/game/Game/index.tsx","layout/CustomThemeLayout.tsx","route/routes.ts","layout/BasicLayout/index.tsx","route/index.tsx","App.tsx","index.ts"],"names":["SET_USERNAME","SET_USER","SET_USER_CURRENT_ROOM_ID","SET_IS_READY","SET_IS_GAMING","SET_NUMBER_OF_ONLINE_PLAYER","ADD_NOTIFICATION","SHIFT_NOTIFICATION","SET_ROOM_LIST","SET_CURRENT_ROOM_USERS","SET_CURRENT_ROOM_STATUS","SET_CURRENT_GAME","SET_CURRENT_GAME_USERS","SET_ROOM","defaultState","isLogining","user","isRegistering","numberOfOnlinePlayer","notifications","roomList","currentRoom","currentGame","reducers","state","action","produce","draft","type","payload","userActionTypes","username","isGaming","isReady","currentRoomId","global","globalActionTypes","push","shift","room","roomActionTypes","users","undefined","status","createRootReducer","history","combineReducers","router","connectRouter","getToken","token","localStorage","getItem","setToken","setItem","createHandleOnKeyEnterUp","cb","evt","keyCode","IS_DEV_CLIENT","some","p","window","location","origin","includes","createHashHistory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createSetUsername","createSetUser","createSetIsGaming","createSetUserCurrentRoomId","rid","createSetIsReady","createSetNumberOfOnlinePlayer","num","createAddNotification","n","createShiftNotification","createSetRoomList","createSetCurrentRoomUsers","createSetRoom","r","createSetCurrentGame","g","createSetCurrentRoomStatus","s","createSetCurrentGameUsers","us","RequestMessage","data","handler","desc","id","createAt","Date","now","this","getConfig","wsClient","options","isConnected","ws","messageCache","eventMap","Map","WebSocket","addr","init","onopen","sendMessageFromCache","onclose","console","log","onerror","onmessage","rawMessage","msg","JSON","parse","trigger","emit","requestId","forEach","sendMessage","reqMsg","send","stringify","Promise","resolve","reject","on","callback","_","respMsg","error","off","err","eventName","cbsArray","get","set","filter","c","cbs","hostname","login","a","request","changeUsername","changed","dispatch","API","userActions","usrName","getNumberOfOnlinePlayer","result","globalActions","RoomStatus","RoomType","Notification","title","detail","uuidv4","getRoomList","roomActions","isEnteringRoom","enterRoom","roomId","batchDispatch","leaveRoom","getState","createRoom","name","sendChatMessage","content","makeGameIsReady","ready","requestType","getGame","game","GAMING","replace","FullScreenLoading","className","style","display","justifyContent","alignItems","CircularProgress","statusText","WAITING","RoomListItem","useDispatch","String","padStart","Button","onClick","boxShadow","fullWidth","variant","color","length","maxPlayerNumber","selectorRoomList","RoomList","useSelector","shallowEqual","freshRoomList","useCallback","roomEffects","useEffect","refreshRoomListOff","respData","List","subheader","ListSubheader","IconButton","map","key","selectorAccountCard","AccountCard","useState","changedUsername","setChangedUsername","updateUsername","target","value","trim","isShowChangeNameDialog","setIsShowChangeNameDialog","openChangeNameModal","closeChangeName","confirmChangeUsername","isEmptyName","userEffects","Dialog","open","onClose","DialogTitle","DialogContent","TextField","placeholder","onChange","DialogActions","disabled","Card","CardHeader","toLocaleTimeString","avatar","Avatar","GameLobbyHeader","React","memo","isShowFindRoom","setIsShowFindRoom","closeFindRoom","setRoomId","jumoToFindRoom","onKeyUp","AppBar","position","useDocumentTitle","prevTitleRef","useRef","current","document","indexSelector","selectorNotificationPanel","NotificationPanel","shiftNotification","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","aria-label","Close","message","ReservedEventName","selectorRoomMessage","userId","RoomChatting","chatMsgList","setChatMsgList","ROOM_CHATTING","chatMsg","prev","concat","chattingContent","setChattingContent","cm","ListItem","speaker","timestamp","selectorPlayingRoom","roomName","roomType","PUBLIC","roomTypeTextMapping","PRIVATE","RoomHeader","Toolbar","Typography","flex","textAlign","AvatarStatus","text","bgColor","backgroundColor","UserAvatar","children","height","width","deepOrange","createElement","arrOfEight","Array","fill","selectorUserList","UserList","index","selectorAuthLoyout","pathname","AnswerInputBox","DrawActionType","answer","setAnswer","sendGuessAnswer","handleOnKeyEnterUp","CanvasController","canvasEl","ctx","getContext","penColor","setPenColor","penSize","setPenSize","strokeStyle","fillStyle","lineWidth","size","image","img","Image","onload","clearCanvas","drawImage","src","to","beginPath","arc","x","y","Math","PI","closePath","toDataURL","startPoint","sp","moveTo","lineTo","stroke","elementSelector","el","querySelector","Error","append","clientHeight","clientWidth","prevFillStyle","clearRect","fillRect","op","DrawAction","externals","ignore","Object","assign","Type","colors","SetPenColorButton","anchorEl","isShowSetPenColor","setIsShowSetPenColor","updatePenColor","fontSize","Popover","transformOrigin","border","PlainLine","props","SetPenSizeButton","updatePenSize","isShowSetPenSize","setIsShowSetPenSize","Slider","valueLabelDisplay","step","marks","min","max","sendDrawActionToServer","drawAction","DRAW_ACTION","getPointFromEvent","touches","t","clientX","clientY","offsetLeft","offsetTop","isSelfPlaying","draw","futureDrawings","setFutureDrawings","pastDrawings","setPastDrawings","isMountedRef","useLayoutEffect","mount","newestDrawing","changePlayingUserOff","CHANGE_DRAWER","drawActionOff","respMsgData","START_DRAW_LINE","point","setting","prevSetting","getSetting","drawPoint","startDrawLine","DRAW_LINE_TO","drawLineTo","DRAW_IMAGE","imgData","snapshotCurrentDrawing","curDrawing","getSnapshot","undoDrawing","pastDrawing","pop","redoDrawing","futureDrawing","handleTouchStart","handleTouchMove","frequency","lastTime","curTime","throttle","handleTouchEnd","posDivEl","setPosDivEl","onTouchStart","onTouchMove","onTouchEnd","ref","Undo","Redo","chattingMessageList","setChattingMessageList","chattingMessageOff","GAME_CHATTING","msgData","prevList","playInfo","time","gameTimeSoFar","setGameTimeSoFar","timeoutOff","TIMEOUT","keyword","raw","hint","gameUser","userScores","drawer","isOnLine","selectorGame","theme","createMuiTheme","palette","primary","light","main","dark","routes","path","component","targetPath","ThemeProvider","defaultRoomName","setRoomName","setRoomType","globalEffects","isUsingDefaultRoomName","setIsUsingDefaultRoomName","updateRoomName","goBack","FormControl","label","RadioGroup","button","FormControlLabel","control","Radio","labelPlacement","gameAnswer","setGameAnswer","isShowPlayOverPanel","setIsShowPlayOverPanel","refreshGameUsersOff","REFRESH_GAME_USERS","gameUsers","playOverOff","PLAY_OVER","gameOverOff","GAME_OVER","refreshGameOff","REFRESH_GAME","changeDrawerOff","useMemo","CanvasContainer","rawRoomId","useParams","parseInt","toggleGameReady","refreshRoomInfoOff","REFRESH_ROOM","startGameOff","START_GAME","Number","isNaN","AppRoute","generateRoutes","route","Layout","layout","Component","render","store","createStore","applyMiddleware","routerMiddleware","ReduxThunk","App","refreshPlayerInfoOff","AppWrapper","ReactDOM","getElementById","addEventListener","preventDefault","passive"],"mappings":"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","file":"static/js/main.ff08a691.chunk.js","sourcesContent":["export const SET_USERNAME = 'SET_USERNAME';\n\nexport const SET_USER = 'SET_USER';\n\nexport const SET_USER_CURRENT_ROOM_ID =  'SET_USER_CURRENT_ROOM_ID';\n\nexport const SET_IS_READY = 'SET_IS_READY';\n\nexport const SET_IS_GAMING = 'SET_IS_GAMING';\n\n// export const LOGOUT = 'LOGOUT';\n","export const SET_NUMBER_OF_ONLINE_PLAYER = 'SET_NUMBER_OF_ONLINE_PLAYER';\n\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\n\nexport const SHIFT_NOTIFICATION = 'REMOVE_NOTIFICATION';\n","export const SET_ROOM_LIST = 'SET_ROOM_LIST';\n\nexport const SET_CURRENT_ROOM_USERS = 'SET_CURRENT_ROOM_USERS';\n\nexport const SET_CURRENT_ROOM_STATUS = 'SET_CURRENT_ROOM_STATUS';\n\nexport const SET_CURRENT_GAME = 'SET_CURRENT_GAME';\n\nexport const SET_CURRENT_GAME_USERS = 'SET_CURRENT_GAME_USERS';\n\nexport const SET_ROOM = 'SET_ROOM';\n","import { IUser } from '../../../shared/types';\r\nimport { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { userActionTypes } from '../actionTypes';\r\n\r\nexport interface IReduxUserState {\r\n  isLogining: boolean;\r\n  user: null | IUser;\r\n  isRegistering: boolean;\r\n}\r\n\r\nconst defaultState: IReduxUserState = {\r\n  isLogining: false,\r\n  user: null,\r\n  isRegistering: false,\r\n};\r\n\r\nexport default function userReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case userActionTypes.SET_USERNAME:\r\n        if (draft.user != null) {\r\n          draft.user.username = payload as string;\r\n        }\r\n        break;\r\n      case userActionTypes.SET_USER:\r\n        draft.user = payload as IUser;\r\n        break;\r\n      case userActionTypes.SET_IS_GAMING:\r\n        if (draft.user != null) {\r\n          draft.user.isGaming = payload as boolean;\r\n        }\r\n        break;\r\n      case userActionTypes.SET_IS_READY:\r\n        if (draft.user != null) {\r\n          draft.user.isReady = payload as boolean;\r\n        }\r\n        break;\r\n\r\n      case userActionTypes.SET_USER_CURRENT_ROOM_ID:\r\n        if (draft.user != null) {\r\n          draft.user.currentRoomId = payload as number | undefined;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { produce } from 'immer';\r\n\r\nimport { IAction } from '../actions';\r\nimport { globalActionTypes } from '../actionTypes';\r\nimport Notification from '@client/model/Notification';\r\n\r\nexport interface IReduxGlobalState {\r\n  numberOfOnlinePlayer: number;\r\n  notifications: Notification[];\r\n}\r\n\r\nconst defaultState: IReduxGlobalState = {\r\n  numberOfOnlinePlayer: 1,\r\n  notifications: [],\r\n};\r\n\r\nexport default function globalReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case globalActionTypes.SET_NUMBER_OF_ONLINE_PLAYER:\r\n        draft.numberOfOnlinePlayer = payload as number;\r\n        break;\r\n      case globalActionTypes.ADD_NOTIFICATION:\r\n        draft.notifications.push(payload as Notification);\r\n        break;\r\n      case globalActionTypes.SHIFT_NOTIFICATION:\r\n        draft.notifications.shift();\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { produce } from 'immer';\r\n\r\nimport { RoomStatus } from '../../../shared/constants';\r\nimport { IGame, IRoom, IUser } from '../../../shared/types';\r\nimport { IAction } from '../actions';\r\nimport { roomActionTypes } from '../actionTypes';\r\n\r\n\r\nexport interface IReduxRoomState {\r\n  roomList: IRoom[];\r\n  currentRoom: null | IRoom;\r\n  currentGame: null | IGame;\r\n}\r\n\r\nconst defaultState: IReduxRoomState = {\r\n  roomList: [],\r\n  currentRoom: null,\r\n  currentGame: null,\r\n};\r\n\r\nexport default function roomReducer(state = defaultState, action: IAction) {\r\n  return produce(state, draft => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case roomActionTypes.SET_ROOM_LIST:\r\n        draft.roomList = payload as IRoom[];\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_ROOM_USERS:\r\n        if (draft.currentRoom != null) {\r\n          draft.currentRoom.users = payload as IUser[];\r\n        }\r\n        break;\r\n      case roomActionTypes.SET_ROOM:\r\n        draft.currentRoom = payload as IRoom | null;\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_GAME:\r\n        draft.currentGame = payload as IGame | null;\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_GAME_USERS:\r\n        if (draft.currentGame != undefined) {\r\n          draft.currentGame.users = payload as IUser[];\r\n        }\r\n        break;\r\n      case roomActionTypes.SET_CURRENT_ROOM_STATUS:\r\n        if (draft.currentRoom != null) {\r\n          draft.currentRoom.status = payload as RoomStatus;\r\n        }\r\n        break;\r\n    }\r\n  });\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router'\r\nimport { Location } from 'history';\r\n\r\nimport userReducer, { IReduxUserState } from \"./user/reducer\";\r\nimport globalReducer, { IReduxGlobalState } from \"./global/reducer\";\r\nimport roomReducer, { IReduxRoomState } from \"./room/reducer\";\r\n\r\nconst reducers = {\r\n  user: userReducer,\r\n  global: globalReducer,\r\n  room: roomReducer,\r\n}\r\n\r\nconst createRootReducer = (history: any) => combineReducers({\r\n  router: connectRouter(history),\r\n  ...reducers,\r\n});\r\n\r\nexport default createRootReducer;\r\n\r\nexport interface IReduxState {\r\n    user: IReduxUserState,\r\n    global: IReduxGlobalState,\r\n    room: IReduxRoomState,\r\n    router: {\r\n      location: Location,\r\n    }\r\n}\r\n","import { KeyboardEvent } from 'react';\r\n\r\nexport function getIsDevelopment() {\r\n  const devlopmentPaths = ['localhost', '127.0.0.1', '192.168'];\r\n  return devlopmentPaths.some(p => window.location.origin.includes(p));\r\n}\r\n\r\nexport function getToken() {\r\n  const token = localStorage.getItem('__token');;\r\n  if (token == null) return undefined;\r\n  return token;\r\n}\r\n\r\nexport function throttle<T extends (...args: any[]) => any>(cb: T, frequency: number): T {\r\n  let lastTime = -1; // 这是为了保证第一次会被触发\r\n  const result = (function(...args: any[]) {\r\n    const curTime = Date.now();\r\n    if (curTime - lastTime >= frequency) {\r\n      lastTime = curTime;\r\n      cb(...args);\r\n    }\r\n  } as T)\r\n  return result;\r\n}\r\n\r\nexport function setToken(token: string) {\r\n  localStorage.setItem('__token', token);\r\n}\r\n\r\nexport function createHandleOnKeyEnterUp(cb: () => void) {\r\n  return function handleOnKeyEnterUp(evt: KeyboardEvent) {\r\n    const KEY_ENTER_CODE = 13;\r\n    if (evt.keyCode === KEY_ENTER_CODE) {\r\n      cb();\r\n    }\r\n  }\r\n}\r\n\r\n","import { getIsDevelopment } from \"./helper\";\r\n\r\nexport const IS_DEV_CLIENT = getIsDevelopment();\r\n\r\n// export enum MessageType { // 注意这里的字面量很重要的，后端根据这个判断调用哪一个service\r\n//     LOGIN = 'login',\r\n//     ROOM_LIST = 'roomList',\r\n// }\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createHashHistory } from 'history';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nimport createRootReducer from './reducers';\r\nimport { IS_DEV_CLIENT } from '../util/constants';\r\n\r\nexport const history = createHashHistory();\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function configureStore() {\r\n  if (IS_DEV_CLIENT) {\r\n    const store = createStore(\r\n      createRootReducer(history), // root reducer with router state\r\n      composeEnhancers(\r\n        applyMiddleware(\r\n          routerMiddleware(history), // for dispatching history actions\r\n          ReduxThunk,\r\n        ),\r\n      ),\r\n    );\r\n\r\n    return store;\r\n  } else {\r\n    const store = createStore(\r\n      createRootReducer(history), // root reducer with router state\r\n      compose(\r\n        applyMiddleware(\r\n          routerMiddleware(history), // for dispatching history actions\r\n          ReduxThunk,\r\n        ),\r\n      ),\r\n    );\r\n\r\n    return store;\r\n  }\r\n}\r\n","import { IAction } from '../actions';\nimport { userActionTypes } from '../actionTypes';\nimport { IUser } from '../../../shared/types';\n\nexport function createSetUsername(username: string): IAction {\n  return {\n    type: userActionTypes.SET_USERNAME,\n    payload: username,\n  };\n}\n\nexport function createSetUser(user: IUser): IAction {\n  return {\n    type: userActionTypes.SET_USER,\n    payload: user,\n  };\n}\n\nexport function createSetIsGaming(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_GAMING,\n    payload: status,\n  }\n}\n\nexport function createSetUserCurrentRoomId(rid: number | undefined): IAction {\n  return {\n    type: userActionTypes.SET_USER_CURRENT_ROOM_ID,\n    payload: rid,\n  }\n}\n\nexport function createSetIsReady(status: boolean): IAction {\n  return {\n    type: userActionTypes.SET_IS_READY,\n    payload: status,\n  }\n}\n","import { IAction } from '../actions';\nimport { globalActionTypes } from '../actionTypes';\nimport Notification from '@client/model/Notification';\n\nexport function createSetNumberOfOnlinePlayer(num: number): IAction {\n  return {\n    type: globalActionTypes.SET_NUMBER_OF_ONLINE_PLAYER,\n    payload: num,\n  };\n}\n\nexport const createAddNotification = (n: Notification) => ({\n  type: globalActionTypes.ADD_NOTIFICATION,\n  payload: n,\n});\n\nexport const createShiftNotification = () => ({\n  type: globalActionTypes.SHIFT_NOTIFICATION,\n});\n","import { IAction } from '../actions';\nimport { roomActionTypes } from '../actionTypes';\nimport { IRoom, IUser, IGame } from '../../../shared/types';\nimport { RoomStatus } from '../../../shared/constants/room';\n\nexport function createSetRoomList(roomList: any[]): IAction {\n  return {\n    type: roomActionTypes.SET_ROOM_LIST,\n    payload: roomList,\n  };\n}\n\nexport function createSetCurrentRoomUsers(users: IUser[]): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_ROOM_USERS,\n    payload: users,\n  };\n}\n\nexport function createSetRoom(r: IRoom | null): IAction {\n  return {\n    type: roomActionTypes.SET_ROOM,\n    payload: r,\n  };\n}\n\nexport function createSetCurrentGame(g: IGame | null): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_GAME,\n    payload: g,\n  };\n}\n\nexport function createSetCurrentRoomStatus(s: RoomStatus): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_ROOM_STATUS,\n    payload: s,\n  }\n}\n\nexport function createSetCurrentGameUsers(us: IUser[]): IAction {\n  return {\n    type: roomActionTypes.SET_CURRENT_GAME_USERS,\n    payload: us,\n  }\n}\n","\r\nexport default class RequestMessage {\r\n  id: string;\r\n  createAt = Date.now();\r\n  constructor(public data: unknown, public handler?: string, public desc?: string) {\r\n    this.id = `${this.handler}-${Date.now()}`;\r\n  }\r\n\r\n  toJSON() {\r\n    const { ...publics } = this;\r\n    return publics;\r\n  }\r\n}\r\n\r\nexport function isRequestMessage(target: any): target is RequestMessage {\r\n  if (target == null) return false;\r\n  if (\r\n    typeof target === 'object' &&\r\n    typeof target.id === 'string' &&\r\n    typeof target.createAt === 'number'\r\n  ) return true;\r\n  return false;\r\n}\r\n","import { IS_DEV_CLIENT } from \"./util/constants\";\r\n\r\nfunction getConfig() {\r\n    if (IS_DEV_CLIENT) {\r\n        return {\r\n            // addr: 'ws://127.0.0.1:9421',\r\n            addr: `ws://${window.location.hostname}:9421`,\r\n        }\r\n    }\r\n    return {\r\n        addr: 'ws://101.37.174.138:9421',\r\n    };\r\n}\r\n\r\nexport default getConfig();\r\n\r\n","import WebsocketClient from \".\";\r\nimport config from \"@client/config\";\r\n\r\nconst wsClient = new WebsocketClient({\r\n  addr: config.addr,\r\n});\r\n\r\nexport default wsClient;\r\n","import { IS_DEV_CLIENT } from '../util/constants';\r\nimport ResponseMessage from '../../shared/models/ResponseMessage';\r\nimport RequestMessage from '../../shared/models/RequestMessage';\r\n// import RequestMessage from './models/RequestMessage';\r\n\r\nexport default class WebsocketClient {\r\n  isConnected = false;\r\n  ws: WebSocket;\r\n  messageCache: RequestMessage[] = [];\r\n  eventMap = new Map<\r\n    string,\r\n    ((messageData: unknown, message: RequestMessage) => void)[]\r\n  >();\r\n  constructor(\r\n    public options: {\r\n      addr: string;\r\n      onopen?: (evt: Event) => void;\r\n      onclose?: (evt: Event) => void;\r\n      onerror?: (evt: Event) => void;\r\n    },\r\n  ) {\r\n    this.ws = new window.WebSocket(this.options.addr);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    // 注册事件\r\n    this.ws.onopen = evt => {\r\n      this.isConnected = true;\r\n      if (typeof this.options.onopen === 'function') {\r\n        this.options.onopen(evt);\r\n      }\r\n      this.sendMessageFromCache();\r\n    };\r\n    this.ws.onclose = evt => {\r\n      this.isConnected = false;\r\n      if (typeof this.options.onclose === 'function') {\r\n        this.options.onclose(evt);\r\n        if (IS_DEV_CLIENT) {\r\n          console.log('连接断开');\r\n        }\r\n      }\r\n    };\r\n    this.ws.onerror = evt => {\r\n      if (typeof this.options.onerror === 'function') {\r\n        this.options.onerror(evt);\r\n      }\r\n    };\r\n    this.ws.onmessage = ({ data: rawMessage }) => {\r\n      const msg: ResponseMessage = JSON.parse(rawMessage);\r\n      if (msg.trigger === undefined || (msg.trigger !== undefined && msg.trigger !== 'timeout')) {\r\n        console.log('recive', msg);\r\n      }\r\n      this.emit('message', msg);\r\n      if (msg.requestId != null) {\r\n        this.emit(msg.requestId, msg);\r\n      }\r\n      if (msg.trigger != null) {\r\n        this.emit(msg.trigger, msg);\r\n      }\r\n    };\r\n    // end 注册事件\r\n  }\r\n\r\n  sendMessageFromCache() {\r\n    // 主要是为了处理应用已经加载完成，但是还没建立连接的情况，相当于人为加了一个缓冲层，只要没有connected，这些msg就不会发送\r\n    this.messageCache.forEach(msg => {\r\n      this.sendMessage(msg);\r\n    });\r\n    this.messageCache = [];\r\n  }\r\n\r\n  sendMessage(reqMsg: RequestMessage) {\r\n    if (this.isConnected) {\r\n      console.log(`sendMessage`, reqMsg);\r\n      this.ws.send(JSON.stringify(reqMsg));\r\n    } else {\r\n      this.messageCache.push(reqMsg);\r\n    }\r\n  }\r\n\r\n  // requestSync(type: string, data?: any) {\r\n  //   const messageId = type + '_' + new Date().getTime(); // 这是为了防止收到过时的信息\r\n  //   const msg: RequestMessage = { data, type, id: messageId };\r\n  //   this.sendMessage(msg);\r\n  // }\r\n\r\n  // 不需要等待回复的请求不要用这个方法，会导致内存泄漏，因为无法触发对应reqesut Id的回调函数\r\n  request(handler: string, data?: any) {\r\n    return new Promise<ResponseMessage>((resolve, reject) => {\r\n      try {\r\n        // const messageId = type + '_' + new Date().getTime() // 这是为了防止收到过时的信息\r\n        // const msg: RequestMessage = {data, type, id: messageId}\r\n        const reqMsg = new RequestMessage(data, handler);\r\n        const callback = (_: unknown, respMsg: ResponseMessage) => {\r\n          if (respMsg == null) {\r\n            console.error(`${reqMsg.handler}-${reqMsg.id} 返回来空的message`);\r\n          }\r\n\r\n          // 注意，如果针对本次请求，如果服务器端没有回复响应，则永远不会调用和删除回调\r\n          if (respMsg.error != null) {\r\n            this.emit('error', respMsg);\r\n            reject(respMsg.error);\r\n          }\r\n\r\n          resolve(respMsg);\r\n\r\n          if (respMsg.requestId != null) {\r\n            this.off(respMsg.requestId, callback);\r\n          }\r\n          if (IS_DEV_CLIENT) {\r\n            if (respMsg.requestId != null && respMsg.requestId !== reqMsg.id) {\r\n              console.error(\r\n                `reqMsg.id: ${reqMsg.id} !== respMsg.requestId： ${respMsg.requestId}`,\r\n              );\r\n            }\r\n          }\r\n        };\r\n        this.on(reqMsg.id, callback);\r\n        this.sendMessage(reqMsg);\r\n      } catch (err) {\r\n        console.error(`request时发生错误 ${err}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  on(\r\n    eventName: string,\r\n    callback: (messageData: unknown, message: ResponseMessage) => void,\r\n  ) {\r\n    let cbsArray = this.eventMap.get(eventName);\r\n    if (cbsArray === undefined) {\r\n      cbsArray = [];\r\n      this.eventMap.set(eventName, cbsArray);\r\n    }\r\n    cbsArray.push(callback);\r\n    return () => {\r\n      this.off(eventName, callback);\r\n    };\r\n  }\r\n  off(\r\n    eventName: string,\r\n    cb: (messageData: unknown, message: RequestMessage) => void,\r\n  ) {\r\n    let cbsArray = this.eventMap.get(eventName);\r\n    if (cbsArray !== undefined) {\r\n      cbsArray = cbsArray.filter(c => c !== cb);\r\n      this.eventMap.set(eventName, cbsArray);\r\n    }\r\n  }\r\n  emit(eventName: string, msg: RequestMessage) {\r\n    const cbs = this.eventMap.get(eventName);\r\n    if (cbs !== undefined) {\r\n      cbs.forEach(c => c(msg.data, msg));\r\n    }\r\n  }\r\n}\r\n","import wsClient from \"@client/WebsocketClient/wsClient\";\r\nimport { IUser } from \"../../shared/types\";\r\n\r\nexport async function login(token?: string) {\r\n  const user = (await wsClient.request('login', token)).data as IUser;\r\n  return user;\r\n}\r\n\r\nexport async function changeUsername(username: string) {\r\n  const changed = (await wsClient.request(\r\n    'changeUsername',\r\n    username,\r\n  )).data as string;\r\n  return changed;\r\n}\r\n","\r\nimport * as user from './user';\r\n\r\nexport default {\r\n  user,\r\n}\r\n","import { TReduxThunk } from '../effects';\nimport { userActions } from '../actions';\nimport { getToken, setToken } from '../../util/helper';\nimport API from '@client/API';\n\nexport function login(): TReduxThunk {\n  return async dispatch => {\n    const token = getToken();\n    const user = await API.user.login(token);\n    setToken(user.token);\n    dispatch(userActions.createSetUser(user));\n  };\n}\n\nexport function changeUsername(usrName: string): TReduxThunk {\n  return async dispatch => {\n    const changed = await API.user.changeUsername(usrName);\n    dispatch(userActions.createSetUsername(changed));\n  };\n}\n","import { TReduxThunk } from '../effects';\nimport { globalActions } from '../actions';\nimport wsClient from '@client/WebsocketClient/wsClient';\n\n\nexport function getNumberOfOnlinePlayer(): TReduxThunk {\n  return async dispatch => {\n    try {\n      const result = (await wsClient.request('numberOfOnlineUser')).data as number;\n      dispatch(globalActions.createSetNumberOfOnlinePlayer(result));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n","export enum RoomStatus {\r\n  WAITING = 'waiting',\r\n  GAMING = 'gaming',\r\n};\r\n\r\nexport enum RoomType {\r\n  PUBLIC = 'public',\r\n  PRIVATE = 'private',\r\n}\r\n","import uuidv4 from 'uuid/v4';\r\n\r\n\r\nexport default class Notification {\r\n  public id = uuidv4();\r\n  public createAt = Date.now();\r\n  constructor(\r\n    public title: string,\r\n    public type: 'error' | 'warn' | 'success' | 'none' = 'none',\r\n    public detail?: string,\r\n  ) {}\r\n}\r\n","import Notification  from '@client/model/Notification';\nimport wsClient from '@client/WebsocketClient/wsClient';\nimport { push, replace } from 'connected-react-router';\nimport { batch as batchDispatch } from 'react-redux';\n\nimport { RoomStatus, RoomType } from '../../../shared/constants/room';\nimport { IGame, IRoom, IUser } from '../../../shared/types';\nimport { globalActions, roomActions, userActions } from '../actions';\nimport { TReduxThunk } from '../effects';\n\nexport function getRoomList(): TReduxThunk {\n  return async dispatch => {\n    try {\n      const respMsg = await wsClient.request('roomList');\n      const result = respMsg.data as any[];\n      dispatch(roomActions.createSetRoomList(result));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nlet isEnteringRoom = false;\nexport function enterRoom(roomId: number): TReduxThunk {\n  return async dispatch => {\n    if (isEnteringRoom) return;\n    isEnteringRoom = true;\n\n    try {\n      const respMsg = await wsClient.request('userEnter', {\n        roomId,\n      });\n\n      const { room, user } = respMsg.data as {\n        room: IRoom;\n        user: IUser;\n      };\n      batchDispatch(() => {\n        dispatch(roomActions.createSetRoom(room));\n        dispatch(userActions.createSetUserCurrentRoomId(user.currentRoomId));\n        dispatch(push(`/room/${room.id}`));\n      });\n    } catch (err) {\n      batchDispatch(() => {\n        dispatch(push('/'));\n        dispatch(globalActions.createAddNotification(new Notification(err.title, 'error')))\n      });\n\n    } finally {\n      isEnteringRoom = false;\n    }\n  };\n}\n\nexport function leaveRoom(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      user: { user },\n    } = getState();\n    if (user == null || user.currentRoomId == null) return;\n    try {\n      wsClient.request('userLeave');\n      dispatch(userActions.createSetUserCurrentRoomId(undefined));\n      dispatch(roomActions.createSetRoom(null));\n      dispatch(push('/'));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function createRoom(name: string, type: RoomType): TReduxThunk {\n  return async dispatch => {\n    try {\n      const respMsg = await wsClient.request('createRoom', {\n        name,\n        type,\n      });\n      const room = respMsg.data as IRoom;\n      dispatch(enterRoom(room.id));\n      // dispatch(getRoomList());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function sendChatMessage(content: string): TReduxThunk {\n  return async dispatch => {\n    try {\n      wsClient.request('sendChatMessage', { content });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function makeGameIsReady(ready: boolean): TReduxThunk {\n  const requestType = ready ? 'makeGameReady' : 'cancelGameReady';\n  return async dispatch => {\n    try {\n      const respMsg = await wsClient.request(requestType);\n      const { user, room } = respMsg.data as {\n        user: IUser;\n        room: IRoom;\n      };\n      dispatch(roomActions.createSetCurrentRoomUsers(room.users));\n      dispatch(userActions.createSetIsReady(user.isReady));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n}\n\nexport function getGame(): TReduxThunk {\n  return async (dispatch, getState) => {\n    const {\n      user: { user },\n    } = getState();\n    try {\n      const respMsg = await wsClient.request('getGame');\n      const { game } = respMsg.data as {\n        user: IUser;\n        game: IGame;\n      };\n      dispatch(roomActions.createSetCurrentGame(game));\n      dispatch(roomActions.createSetCurrentRoomStatus(RoomStatus.GAMING));\n    } catch (err) {\n      dispatch(\n        globalActions.createAddNotification(\n          new Notification(err.title, 'error'),\n        ),\n      );\n      if (user != null && user.currentRoomId != null) {\n        dispatch(replace(`/room/${user.currentRoomId}`));\n      } else {\n        dispatch(replace('/'));\n      }\n    }\n  };\n}\n","import React from 'react';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport default function FullScreenLoading() {\r\n\r\n  return (\r\n    <div className=\"full-screen-loading\" style={{\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }}>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n","import './index.scss';\r\n\r\nimport { roomActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { IS_DEV_CLIENT } from '@client/util/constants';\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport { Button, IconButton, List, ListSubheader } from '@material-ui/core';\r\nimport { LoopOutlined as FreshIcon } from '@material-ui/icons';\r\nimport { push } from 'connected-react-router';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RoomStatus } from '../../../../../shared/constants/room';\r\nimport { IRoom } from '../../../../../shared/types';\r\n\r\nconst statusText = {\r\n  [RoomStatus.GAMING]: '游戏中',\r\n  [RoomStatus.WAITING]: '等待中...',\r\n};\r\n\r\nfunction RoomListItem({ room }: { room: IRoom }) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"room-list-room\">\r\n      <div className=\"room-info\">\r\n        <div className=\"room-name\">{room.name}</div>\r\n        <div className=\"room-number\">No.{String(room.id).padStart(5, '0')}</div>\r\n      </div>\r\n      <div className=\"room-actions\">\r\n        <div className=\"room-status\">{statusText[room.status]}</div>\r\n        <Button\r\n          onClick={() => dispatch(push(`/room/${room.id}`))}\r\n          style={{ boxShadow: 'none' }}\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          加入{`(${room.users.length}/${room.maxPlayerNumber})`}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst selectorRoomList = ({\r\n  room: { roomList },\r\n}: IReduxState) => ({\r\n  roomList,\r\n});\r\n\r\nexport default function RoomList() {\r\n  if (IS_DEV_CLIENT) {\r\n    console.log('render RoomList');\r\n  }\r\n\r\n  const { roomList } = useSelector(selectorRoomList, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n  const freshRoomList = useCallback(() => {\r\n    dispatch(roomEffects.getRoomList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    freshRoomList();\r\n\r\n    const refreshRoomListOff = wsClient.on('refreshRoomList', respData => {\r\n      const roomList = respData as IRoom[];\r\n      dispatch(roomActions.createSetRoomList(roomList));\r\n    });\r\n\r\n    return () => {\r\n      refreshRoomListOff();\r\n    };\r\n  }, [dispatch, freshRoomList]);\r\n\r\n  return (\r\n    <div className=\"room-list\">\r\n      <List\r\n        subheader={\r\n          <ListSubheader>\r\n            房间列表\r\n            <IconButton onClick={freshRoomList}>\r\n              <FreshIcon />\r\n            </IconButton>\r\n          </ListSubheader>\r\n        }\r\n        className=\"room-list\"\r\n      >\r\n        {roomList.length === 0 ? (\r\n          <div className=\"no-room-text\">暂无公开房间</div>\r\n        ) : (\r\n          <div className=\"room-list-content\">\r\n            {roomList.map(room => (\r\n              <RoomListItem key={room.id} room={room} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useCallback, ChangeEvent } from 'react';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { MoreVert as MoreIcon } from '@material-ui/icons';\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\r\n\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport { userEffects } from '@client/store/effects';\r\nimport { IS_DEV_CLIENT } from '@client/util/constants';\r\n\r\nimport './index.scss';\r\n\r\nconst selectorAccountCard = ({ user: { user } }: IReduxState) => ({ user });\r\n\r\nexport default function AccountCard() {\r\n  if (IS_DEV_CLIENT) {\r\n    console.log('render AccountCard');\r\n  }\r\n  const { user } = useSelector(selectorAccountCard, shallowEqual);\r\n  const [changedUsername, setChangedUsername] = useState(\r\n    user != null ? user.username : '',\r\n  );\r\n  const updateUsername = useCallback(\r\n    (evt: ChangeEvent<HTMLInputElement>) =>\r\n      setChangedUsername(evt.target.value.trim()),\r\n    [setChangedUsername],\r\n  );\r\n\r\n  // -- 更改用户名相关逻辑\r\n  const [isShowChangeNameDialog, setIsShowChangeNameDialog] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const openChangeNameModal = useCallback(\r\n    () => setIsShowChangeNameDialog(true),\r\n    [setIsShowChangeNameDialog],\r\n  );\r\n  const closeChangeName = useCallback(() => setIsShowChangeNameDialog(false), [\r\n    setIsShowChangeNameDialog,\r\n  ]);\r\n  const confirmChangeUsername = useCallback(() => {\r\n    const isEmptyName = changedUsername.trim().length === 0;\r\n    if (user != null && !isEmptyName && user.username !== changedUsername) {\r\n      // 只有名字不为空，且前后发生变化, 才发送请求\r\n      dispatch(userEffects.changeUsername(changedUsername));\r\n    }\r\n    if (!isEmptyName) closeChangeName();\r\n  }, [user, changedUsername, dispatch, closeChangeName]);\r\n\r\n  if (user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isShowChangeNameDialog} onClose={closeChangeName}>\r\n        <DialogTitle>更改用户名</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            placeholder=\"用户名\"\r\n            value={changedUsername}\r\n            onChange={updateUsername}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            disabled={changedUsername.trim().length === 0}\r\n            onClick={confirmChangeUsername}\r\n          >\r\n            确定\r\n          </Button>\r\n          <Button onClick={closeChangeName}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <div className=\"user-info\">\r\n        <Card>\r\n          <CardHeader\r\n            title={\r\n              <span style={{ color: '#000' }}>你好，{user.username}！</span>\r\n            }\r\n            subheader={`登陆于${new Date().toLocaleTimeString()}`}\r\n            avatar={<Avatar>{user.username[0]}</Avatar>}\r\n            action={\r\n              <IconButton onClick={openChangeNameModal}>\r\n                <MoreIcon />\r\n              </IconButton>\r\n            }\r\n          ></CardHeader>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import './index.scss';\r\n\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\nimport { AppBar, Button, Dialog, DialogActions, DialogContent, DialogTitle, IconButton, TextField } from '@material-ui/core';\r\nimport { Add as PlusIcon, SearchOutlined as SearchIcon } from '@material-ui/icons';\r\nimport { push } from 'connected-react-router';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst GameLobbyHeader = React.memo(function GameLobbyHeader() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isShowFindRoom, setIsShowFindRoom] = useState(false);\r\n  const closeFindRoom = useCallback(() => setIsShowFindRoom(false), [\r\n    setIsShowFindRoom,\r\n  ]);\r\n\r\n  const [roomId, setRoomId] = useState('');\r\n  const jumoToFindRoom = useCallback(() => {\r\n    if (roomId.trim().length === 0) return;\r\n    dispatch(push(`/room/${roomId}`));\r\n  }, [roomId, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={isShowFindRoom} onClose={closeFindRoom}>\r\n        <DialogTitle>查找房间</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            placeholder=\"房间号\"\r\n            value={roomId}\r\n            onChange={evt => setRoomId(evt.target.value.trim())}\r\n            onKeyUp={createHandleOnKeyEnterUp(jumoToFindRoom)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            disabled={roomId.trim().length === 0}\r\n            onClick={jumoToFindRoom}\r\n          >\r\n            确定\r\n          </Button>\r\n          <Button onClick={closeFindRoom}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <AppBar\r\n        style={{\r\n          boxShadow: 'none',\r\n        }}\r\n        position=\"static\"\r\n      >\r\n        <div className=\"game-lobby-header\">\r\n          <IconButton color=\"default\" onClick={() => setIsShowFindRoom(true)}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <div className=\"game-lobby-header-title\">\r\n            你画我猜-游戏大厅(v0.02)\r\n          </div>\r\n          <IconButton onClick={() => dispatch(push('/create-room'))}>\r\n            <PlusIcon />\r\n          </IconButton>\r\n        </div>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default GameLobbyHeader;\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport function useDocumentTitle(title: string) {\r\n  const prevTitleRef = useRef('');\r\n  useEffect(() => {\r\n    prevTitleRef.current = document.title;\r\n    document.title = title;\r\n    return () => {\r\n      document.title = prevTitleRef.current;\r\n    }\r\n  }, [title]);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\n\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { globalEffects } from '@client/store/effects';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\n\r\nimport RoomList from './components/RoomList';\r\nimport AccountCard from './components/AccountCard';\r\nimport GameLobbyHeader from './components/GameLobbyHeader';\r\n\r\nimport './index.scss';\r\nimport { useDocumentTitle } from '@client/hooks';\r\n\r\nconst indexSelector = ({\r\n  global: { numberOfOnlinePlayer },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  numberOfOnlinePlayer,\r\n  user,\r\n});\r\n\r\nexport default function GameLobby() {\r\n  useDocumentTitle('游戏大厅');\r\n\r\n  const { numberOfOnlinePlayer, user } = useSelector(\r\n    indexSelector,\r\n    shallowEqual,\r\n  );\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(globalEffects.getNumberOfOnlinePlayer());\r\n  }, [dispatch]);\r\n\r\n\r\n  if (user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-game-lobby\">\r\n      <div className=\"view-game-lobby-header\">\r\n        <GameLobbyHeader />\r\n      </div>\r\n      <div className=\"view-game-lobby-main\">\r\n        <AccountCard />\r\n        <div className=\"room-list-wrapper\">\r\n          <RoomList />\r\n        </div>\r\n      </div>\r\n      <div className=\"view-game-lobby-footer\">\r\n        <div className=\"number-of-online-player\">\r\n          当前在线人数: {numberOfOnlinePlayer}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { IconButton, Snackbar } from '@material-ui/core';\r\nimport { Close as CloseIcon } from '@material-ui/icons';\r\nimport { globalActions } from '@client/store/actions';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport React, { useCallback } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nconst selectorNotificationPanel = ({ global: { notifications } }: IReduxState) => ({\r\n  notifications,\r\n});\r\n\r\nconst NotificationPanel = React.memo(function NotificationPanel() {\r\n  const { notifications } = useSelector(selectorNotificationPanel, shallowEqual);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const shiftNotification = useCallback(() => {\r\n    dispatch(globalActions.createShiftNotification());\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <>\r\n    {notifications.map(n => (\r\n      <Snackbar\r\n      key={n.id}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      // key={`${vertical},${horizontal}`}\r\n      open={true}\r\n      onClose={shiftNotification}\r\n      autoHideDuration={4000}\r\n      action={\r\n        <IconButton onClick={shiftNotification} key=\"close\" aria-label=\"close\" color=\"inherit\">\r\n          <CloseIcon />\r\n        </IconButton>\r\n      }\r\n      message={<span>{n.detail == null ? n.title : `${n.title}-${n.detail}`}</span>}\r\n    />\r\n    ))}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default NotificationPanel;\r\n","import './index.scss';\r\n\r\nimport { useDocumentTitle } from '@client/hooks';\r\nimport { globalEffects, roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport {\r\n  AppBar,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { ArrowBackOutlined as BackIcon } from '@material-ui/icons';\r\nimport { goBack } from 'connected-react-router';\r\nimport React, { ChangeEvent, useCallback, useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RoomType } from '../../../../shared/constants/room';\r\n\r\nconst indexSelector = ({\r\n  global: { numberOfOnlinePlayer },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  numberOfOnlinePlayer,\r\n  username: user == null ? '' : user.username,\r\n});\r\n\r\nexport default function CreateRoom() {\r\n  useDocumentTitle('创建房间');\r\n\r\n  const { username } = useSelector(indexSelector, shallowEqual);\r\n  const defaultRoomName = `${username}的房间`;\r\n  const [roomName, setRoomName] = useState(defaultRoomName);\r\n  const [roomType, setRoomType] = useState(RoomType.PUBLIC);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(globalEffects.getNumberOfOnlinePlayer());\r\n  }, [dispatch]);\r\n\r\n  const createRoom = useCallback(() => {\r\n    dispatch(roomEffects.createRoom(roomName, roomType));\r\n  }, [roomName, roomType, dispatch]);\r\n\r\n  const [isUsingDefaultRoomName, setIsUsingDefaultRoomName] = useState(true);\r\n  const updateRoomName = useCallback(\r\n    (evt: ChangeEvent<HTMLInputElement>) => {\r\n      setIsUsingDefaultRoomName(false);\r\n      setRoomName(evt.target.value);\r\n    },\r\n    [setRoomName, setIsUsingDefaultRoomName],\r\n  );\r\n\r\n  return (\r\n    <div className=\"view-room-creator\">\r\n      <AppBar\r\n        style={{\r\n          boxShadow: 'none',\r\n        }}\r\n        position=\"static\"\r\n      >\r\n        <div className=\"create-room-header\">\r\n          <IconButton onClick={() => dispatch(goBack())}>\r\n            <BackIcon />\r\n          </IconButton>\r\n          <div className=\"create-room-header-title\">创建房间</div>\r\n        </div>\r\n      </AppBar>\r\n      <div className=\"view-room-creator-main\">\r\n        <FormControl fullWidth>\r\n          <List>\r\n            <ListItem>\r\n              <TextField\r\n                label=\"房间名\"\r\n                fullWidth\r\n                placeholder=\"请输入房间名字\"\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                value={isUsingDefaultRoomName ? defaultRoomName : roomName}\r\n                onChange={updateRoomName}\r\n              />\r\n            </ListItem>\r\n            <RadioGroup\r\n              value={roomType}\r\n              onChange={evt => setRoomType(evt.target.value as RoomType)}\r\n              name=\"room-type\"\r\n            >\r\n              <ListItem button onClick={() => setRoomType(RoomType.PUBLIC)}>\r\n                <FormControlLabel\r\n                  value={RoomType.PUBLIC}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"公开\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </ListItem>\r\n              <ListItem button onClick={() => setRoomType(RoomType.PRIVATE)}>\r\n                <FormControlLabel\r\n                  value={RoomType.PRIVATE}\r\n                  control={<Radio color=\"primary\" />}\r\n                  label=\"私人(不显示在游戏大厅)\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </ListItem>\r\n            </RadioGroup>\r\n            <ListItem>\r\n              <Button\r\n                style={{ boxShadow: 'none' }}\r\n                onClick={createRoom}\r\n                fullWidth\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                创建房间\r\n              </Button>\r\n            </ListItem>\r\n          </List>\r\n        </FormControl>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export * from './room';\r\n\r\nexport enum ReservedEventName { // 会用到的事件名，这里前后端统一调用这里的，避免字符串拼错什么的\r\n  REFRESH_USER = 'refreshUser',\r\n  REFRESH_ROOM = 'refreshRoom',\r\n  REFRESH_ROOM_LIST = 'refreshRoomList',\r\n  ROOM_CHATTING = 'roomChatting',\r\n  // 游戏相关\r\n  TIMEOUT = 'timeout',\r\n  REFRESH_GAME = 'refreshGame',\r\n  DRAW_ACTION = 'drawAction',\r\n  START_GAME = 'startGame',\r\n  GAME_CHATTING = 'gameChatting',\r\n  CHANGE_DRAWER = 'changeDrawer',\r\n  ROUND_OVER = 'roundOver',\r\n  GAME_OVER = 'gameOver',\r\n  PLAY_OVER = 'playOver',\r\n  REFRESH_GAME_USERS = 'refreshGameUsers',\r\n  // REFRESH_ONLINE_USER_NUMBER = 'refreshOnLineUserNumber',\r\n}\r\n","import './index.scss';\r\n\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport { Button, List as div, ListItem, TextField } from '@material-ui/core';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ChattingMessage from '../../../../../../shared/models/ChattingMessage';\r\nimport { ReservedEventName } from '../../../../../../shared/constants';\r\n\r\nconst selectorRoomMessage = ({\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  username: user == null ? '' : user.username,\r\n  userId: user == null ? '' : user.id,\r\n});\r\n\r\nfunction RoomChatting() {\r\n  const { userId } = useSelector(\r\n    selectorRoomMessage,\r\n    shallowEqual,\r\n  );\r\n  const [chatMsgList, setChatMsgList] = useState<ChattingMessage[]>([]);\r\n  useEffect(() => {\r\n    const offReciveChatMessage = wsClient.on(ReservedEventName.ROOM_CHATTING, (_, msg) => {\r\n      const chatMsg = msg.data as ChattingMessage;\r\n      setChatMsgList(prev => [chatMsg].concat(...prev));\r\n    });\r\n    return offReciveChatMessage;\r\n  }, [setChatMsgList]);\r\n\r\n  // chat msg 相关\r\n\r\n  const [chattingContent, setChattingContent] = useState('');\r\n  const dispatch = useDispatch();\r\n  const sendChatMessage = useCallback(() => {\r\n    if (chattingContent.trim().length === 0) return;\r\n    setChattingContent('');\r\n    dispatch(roomEffects.sendChatMessage(chattingContent));\r\n  }, [chattingContent, dispatch, setChattingContent]);\r\n\r\n  return (\r\n    <div className=\"room-message\">\r\n      <div className=\"room-message-list\">\r\n        {chatMsgList.map(cm => (\r\n          <ListItem className=\"room-message-list-item\" key={cm.id}>\r\n            <div className=\"room-message-speaker\">\r\n              <span className=\"room-message-speaker-name\">\r\n                {cm.speaker.id === userId ? '我' : cm.speaker.name}:\r\n              </span>\r\n\r\n            </div>\r\n            <div className=\"room-message-content\">{cm.content}</div>\r\n            <div className=\"room-message-speaker-time\">\r\n              {new Date(cm.timestamp).toLocaleTimeString()}\r\n            </div>\r\n          </ListItem>\r\n        ))}\r\n      </div>\r\n      <div className=\"room-message-sender\">\r\n          <TextField\r\n            variant=\"outlined\"\r\n            value={chattingContent}\r\n            onChange={evt => setChattingContent(evt.target.value)}\r\n            onKeyUp={createHandleOnKeyEnterUp(sendChatMessage)}\r\n            fullWidth\r\n          />\r\n          &nbsp;\r\n          <Button\r\n            onClick={sendChatMessage}\r\n            variant=\"text\"\r\n          >\r\n            发送\r\n          </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomChatting;\r\n","import { useDocumentTitle } from '@client/hooks';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport { AppBar, Button, Toolbar, Typography } from '@material-ui/core';\r\nimport { ArrowBackOutlined as BackIcon } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { RoomType } from '../../../../../shared/constants';\r\n\r\n// import { IGame, IRoom, IUser } from 'shared/types';\r\n\r\nconst selectorPlayingRoom = ({ room: { currentRoom } }: IReduxState) => ({\r\n  roomId: currentRoom ? currentRoom.id : -1,\r\n  roomName: currentRoom ? currentRoom.name : '',\r\n  roomType: currentRoom ? currentRoom.type : RoomType.PUBLIC,\r\n});\r\n\r\nconst roomTypeTextMapping = {\r\n  [RoomType.PRIVATE]: '(私人)',\r\n  [RoomType.PUBLIC]: '',\r\n};\r\n\r\nconst RoomHeader = React.memo(function RoomHeader() {\r\n  useDocumentTitle('房间');\r\n  const { roomName, roomType, roomId } = useSelector(\r\n    selectorPlayingRoom,\r\n    shallowEqual,\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        boxShadow: 'none',\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <Toolbar>\r\n        <Button\r\n          onClick={() => {\r\n            console.log('cliuck');\r\n            dispatch(roomEffects.leaveRoom());\r\n          }}\r\n          color=\"inherit\"\r\n        >\r\n          <BackIcon />\r\n          离开房间\r\n        </Button>\r\n        <Typography\r\n          style={{\r\n            flex: 1,\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          {roomName}\r\n          {roomTypeTextMapping[roomType]}\r\n        </Typography>\r\n        <Button color=\"inherit\">\r\n          房间号: {String(roomId).padStart(5, '0')}\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n});\r\n\r\nexport default RoomHeader;\r\n","import React from 'react';\r\nimport { deepOrange } from '@material-ui/core/colors'\r\n\r\nimport './index.scss';\r\n\r\nfunction AvatarStatus({ text, bgColor }: { text: string, bgColor?: 'red' | 'blue' | 'green'}) {\r\n  return <div style={{\r\n    backgroundColor: bgColor || 'blue',\r\n  }} className=\"user-avatar-status\">{text}</div>;\r\n}\r\nReact.createElement(AvatarStatus);\r\nfunction UserAvatar({ children, avatar, style }: { children?: any; avatar: string, style?: React.CSSProperties  }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: '18vw',\r\n        width: '18vw',\r\n      }}\r\n      className=\"user-avatar-wrapper\"\r\n    >\r\n      {children}\r\n      <div style={{\r\n        backgroundColor: deepOrange[500],\r\n        ...style,\r\n      }} className=\"user-avatar\">{avatar}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nUserAvatar.AvatarStatus = AvatarStatus;\r\n\r\nexport default UserAvatar;\r\n","import './index.scss';\r\n\r\nimport UserAvatar from '@client/ui/UserAvatar';\r\nimport React from 'react';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\nimport { IReduxState } from 'store/reducers';\r\n\r\nimport { IUser } from '../../../../../../shared/types';\r\n\r\nconst arrOfEight = new Array(8).fill(null);\r\n\r\nconst selectorUserList = ({ user: { user } }: IReduxState) => ({\r\n  userId: user ? user.id : '',\r\n});\r\n\r\nconst UserList = React.memo(function UserList({ users }: { users: IUser[] }) {\r\n  const { userId } = useSelector(selectorUserList, shallowEqual);\r\n  return (\r\n    <div className=\"user-list\">\r\n      {arrOfEight.map((_, index) => {\r\n        if (index < users.length) {\r\n          const user = users[index];\r\n          return (\r\n            <div key={user.id} className=\"user-list-user\">\r\n              <UserAvatar avatar={user.username[0]}>\r\n                {user.id === userId ? (\r\n                  <UserAvatar.AvatarStatus text=\"我\" />\r\n                ) : null}\r\n                {user && index === 0 ? (\r\n                  <UserAvatar.AvatarStatus text=\"房主\" />\r\n                ) : null}\r\n                {user.isReady ? (\r\n                  <UserAvatar.AvatarStatus bgColor=\"green\" text=\"已准备\" />\r\n                ) : null}\r\n              </UserAvatar>\r\n              <div className=\"user-list-item-username\">{user.username}</div>\r\n            </div>\r\n          );\r\n        }\r\n        return (\r\n          <div key={index} className=\"user-list-user\">\r\n            <UserAvatar style={{\r\n              backgroundColor: '#fff',\r\n              color: '#000',\r\n            }} avatar=\"空\" />\r\n              <div className=\"user-list-item-username\">等待加入</div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default UserList;\r\n","import './index.scss';\r\n\r\nimport { useDocumentTitle } from '@client/hooks';\r\nimport { roomActions, userActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport { Button } from '@material-ui/core';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { batch as batchDispatch, shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect, useParams } from 'react-router-dom';\r\n\r\nimport { ReservedEventName } from '../../../../shared/constants';\r\nimport { RoomStatus } from '../../../../shared/constants/room';\r\nimport { IGame, IRoom, IUser } from '../../../../shared/types';\r\nimport RoomChatting from './components/RoomChatting';\r\nimport RoomHeader from './components/RoomHeader';\r\nimport UserList from './components/UserList';\r\n\r\n// import { IGame, IRoom, IUser } from 'shared/types';\r\n\r\nconst selectorPlayingRoom = ({\r\n  room: { currentRoom },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  currentRoom,\r\n  isReady: user == null ? false : user.isReady,\r\n});\r\n\r\n// const roomTypeTextMapping = {\r\n//   [RoomType.PRIVATE]: '(私人)',\r\n//   [RoomType.PUBLIC]: '',\r\n// };\r\n\r\nexport default function PlayingRoom() {\r\n  useDocumentTitle('房间');\r\n  const { currentRoom, isReady } = useSelector(\r\n    selectorPlayingRoom,\r\n    shallowEqual,\r\n  );\r\n\r\n  const { roomId: rawRoomId } = useParams<{ roomId: string }>();\r\n  const roomId = parseInt(rawRoomId, 10);\r\n\r\n  const dispatch = useDispatch();\r\n  const toggleGameReady = useCallback(() => {\r\n    dispatch(roomEffects.makeGameIsReady(!isReady));\r\n  }, [isReady, dispatch]);\r\n\r\n  useEffect(() => {\r\n    const refreshRoomInfoOff = wsClient.on(ReservedEventName.REFRESH_ROOM, (_, msg) => {\r\n      const room = msg.data as IRoom;\r\n      dispatch(roomActions.createSetRoom(room));\r\n    });\r\n    const startGameOff = wsClient.on(ReservedEventName.START_GAME, (_, msg) => {\r\n      const { user, game } = msg.data as {\r\n        user: IUser,\r\n        game: IGame,\r\n      };\r\n      batchDispatch(() => {\r\n        dispatch(roomActions.createSetCurrentGame(game));\r\n        dispatch(roomActions.createSetCurrentRoomStatus(RoomStatus.GAMING));\r\n        dispatch(userActions.createSetIsGaming(user.isGaming));\r\n        dispatch(userActions.createSetIsReady(user.isReady));\r\n      })\r\n    });\r\n    return () => {\r\n      refreshRoomInfoOff();\r\n      startGameOff();\r\n    };\r\n  }, [roomId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (Number.isNaN(roomId)) return;\r\n    dispatch(roomEffects.enterRoom(roomId));\r\n  }, [dispatch, roomId]);\r\n\r\n  if (rawRoomId == null) return <Redirect to=\"/\" />;\r\n  if (currentRoom == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <div className=\"view-playing-room\">\r\n      <div className=\"view-playing-room-header\">\r\n        <RoomHeader />\r\n      </div>\r\n      <div className=\"view-playing-room-main\">\r\n        <UserList users={currentRoom.users} />\r\n        <div className=\"start-game-button-wrapper\">\r\n          <Button style={{\r\n            // backgroundColor: 'orange',\r\n            // color: '#fff',\r\n            boxShadow: 'none',\r\n          }} onClick={toggleGameReady} color=\"primary\" className=\"start-game-button\" variant=\"contained\" fullWidth>\r\n            {isReady ? '取消准备' : '准备'}\r\n          </Button>\r\n        </div>\r\n        <div className=\"room-message-wrapper\">\r\n          <RoomChatting />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { replace } from 'connected-react-router';\r\nimport { IReduxState } from '../store/reducers';\r\nimport FullScreenLoading from '../ui/FullScreenLoading';\r\nimport { userEffects } from '../store/effects';\r\n\r\nconst selectorAuthLoyout = ({ user: { user }, router: { location: { pathname } } }: IReduxState) => ({\r\n  user,\r\n  pathname,\r\n});\r\n\r\nexport default function AuthLoyout({ children}: {children: any}) {\r\n\r\n  const { user, pathname } = useSelector(selectorAuthLoyout, shallowEqual);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (user == null) {\r\n      dispatch(userEffects.login());\r\n      return;\r\n    }\r\n\r\n    if (user.isGaming && user.currentRoomId == null) {\r\n      console.error('用户正在游戏中', '但找不到房间号');\r\n    }\r\n\r\n    if (user.isGaming && user.currentRoomId != null) {\r\n      const targetPath = `/game/${user.currentRoomId}`;\r\n      if (pathname !== targetPath) dispatch(replace(targetPath));\r\n    } else if (user.currentRoomId != null) {\r\n      const targetPath = `/room/${user.currentRoomId}`;\r\n      if (pathname !== targetPath) dispatch(replace(targetPath));\r\n    }\r\n  }, [user, pathname, dispatch]);\r\n\r\n  if (user == null) return <FullScreenLoading />\r\n\r\n  return children;\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { TextField, Button } from '@material-ui/core';\r\n\r\nimport './index.scss';\r\nimport WebsocketClient from '@client/WebsocketClient';\r\nimport RequestMessage from '../../../../../../shared/models/RequestMessage';\r\nimport { createHandleOnKeyEnterUp } from '@client/util/helper';\r\n\r\n// 以 375宽 为标准\r\n\r\nfunction AnswerInputBox({ wsClient }: { wsClient: WebsocketClient }) {\r\n  const [answer, setAnswer] = useState('');\r\n\r\n  const sendGuessAnswer = useCallback(() => {\r\n    if (answer.trim().length === 0) return;\r\n    const reqMsg = new RequestMessage(answer, 'guessAnswer');\r\n    wsClient.sendMessage(reqMsg);\r\n    setAnswer('');\r\n  }, [answer, wsClient, setAnswer]);\r\n\r\n  const handleOnKeyEnterUp = useCallback(\r\n    createHandleOnKeyEnterUp(sendGuessAnswer),\r\n    [sendGuessAnswer],\r\n  );\r\n\r\n  return (\r\n    <div className=\"answer-input-box\">\r\n      <TextField\r\n        onKeyUp={handleOnKeyEnterUp}\r\n        value={answer}\r\n        onChange={evt => setAnswer(evt.target.value.trim())}\r\n        placeholder=\"输入你猜测的答案\"\r\n        className=\"answer-input\"\r\n        variant=\"outlined\"\r\n        type=\"text\"\r\n      />\r\n      <Button variant=\"outlined\" onClick={sendGuessAnswer}>\r\n        发送\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerInputBox;\r\n","export enum DrawActionType {\r\n  START_DRAW_LINE = 'startDrawLine',\r\n  DRAW_LINE_TO = 'drawLineTo',\r\n  // END_DRAW_LINE = 'endDrawLine',\r\n  DRAW_IMAGE = 'drawImage',\r\n  // CLEAR_CANVAS = 'clearCanvas',\r\n  // SET_OPTIONS = 'setOptions',\r\n}\r\n\r\nexport type TDrawerExternals = Omit<DrawAction, 'type' | 'payload'>;\r\n\r\n\r\nexport default class DrawAction {\r\n  static Type = DrawActionType;\r\n  ignore?: boolean; // 要求服务器忽略转发此 action\r\n  constructor(public type: DrawActionType, public payload?: unknown, externals?: TDrawerExternals) {\r\n    Object.assign(this, externals);\r\n  }\r\n}\r\n","import Point from './Point';\r\n\r\nexport interface ICanvasControllerSetting {\r\n  penSize?: number;\r\n  penColor?: string;\r\n}\r\n\r\nexport default class CanvasController {\r\n  public ctx: CanvasRenderingContext2D;\r\n  public canvasEl: HTMLCanvasElement;\r\n  get penColor() {\r\n    return this.ctx.strokeStyle as string;\r\n  }\r\n  set penColor(color: string) {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n  }\r\n  get penSize() {\r\n    return this.ctx.lineWidth;\r\n  }\r\n  set penSize(size: number) {\r\n    this.ctx.lineWidth = size;\r\n  }\r\n  constructor(canvasEl?: HTMLCanvasElement, options?: {\r\n    penColor?: string;\r\n    penSize?: number;\r\n  }) {\r\n    this.canvasEl =\r\n      canvasEl == null ? document.createElement('canvas') : canvasEl;\r\n    this.ctx = this.canvasEl.getContext('2d') as CanvasRenderingContext2D;\r\n    this.init();\r\n    if (options != null) {\r\n      if (options.penColor != null) this.setPenColor(options.penColor);\r\n      if (options.penSize != null) this.setPenSize(options.penSize);\r\n    }\r\n  }\r\n\r\n  init() {\r\n    this.ctx.fillStyle = this.penColor;\r\n    this.ctx.strokeStyle = this.penColor;\r\n    this.ctx.lineWidth = this.penSize;\r\n  }\r\n\r\n  // new\r\n\r\n  getSetting(): Required<ICanvasControllerSetting> {\r\n    return {\r\n      penSize: this.penSize,\r\n      penColor: this.penColor,\r\n    }\r\n  }\r\n\r\n  setting(s: ICanvasControllerSetting) {\r\n    if (s.penColor != null) this.penColor = s.penColor;\r\n    if (s.penSize != null) this.penSize = s.penSize;\r\n  }\r\n\r\n  drawImage(image: HTMLImageElement | string) {\r\n    // console.log('image', image);\r\n    if (typeof image === 'string') {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        this.clearCanvas();\r\n        this.drawImage(img);\r\n      };\r\n      img.src = image;\r\n    } else {\r\n      this.ctx.drawImage(image, 0, 0);\r\n    }\r\n  }\r\n\r\n  drawPoint(to: Point, r: number = this.penSize / 2) {\r\n    const { ctx } = this;\r\n    console.log('drawPoint', 'r',r , 'lineWidth', this.ctx.lineWidth);\r\n    ctx.beginPath();\r\n    ctx.arc(to.x, to.y, r, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    // ctx.stroke();\r\n    ctx.closePath();\r\n  }\r\n\r\n  getSnapshot() {\r\n    return this.canvasEl.toDataURL('image/jpeg', 1);\r\n  }\r\n\r\n  startDrawLine(startPoint: Point) {\r\n    const sp = startPoint;\r\n    const { ctx } = this;\r\n    ctx.beginPath();\r\n    ctx.moveTo(sp.x, sp.y);\r\n  }\r\n\r\n  drawLineTo(to: Point) {\r\n    // console.log('to', to);\r\n    const { ctx } = this;\r\n    ctx.lineTo(to.x, to.y);\r\n    ctx.stroke();\r\n  }\r\n\r\n  mount(elementSelector: string) {\r\n    const el = document.querySelector(elementSelector);\r\n    // (window as any).el = el;\r\n    if (el != null) {\r\n      el.append(this.canvasEl);\r\n      this.canvasEl.height = el.clientHeight;\r\n      this.canvasEl.width = el.clientWidth;\r\n      this.clearCanvas();\r\n    } else {\r\n      throw new Error(`无法通过 ${elementSelector} 找到相应的元素，请确定选择器书写正确，或元素确实存在`);\r\n    }\r\n  }\r\n\r\n  clearCanvas() {\r\n    const prevFillStyle = this.ctx.fillStyle;\r\n    this.ctx.fillStyle = '#fff';\r\n    this.ctx.clearRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    this.ctx.fillRect(0, 0, this.canvasEl.width, this.canvasEl.height);\r\n    this.ctx.fillStyle = prevFillStyle;\r\n  }\r\n\r\n  // end new\r\n\r\n  setOptions(op: {\r\n    penColor?: string;\r\n    penSize?: number;\r\n  }) {\r\n    if (op.penColor != null) this.setPenColor(op.penColor);\r\n    if (op.penSize != null) this.setPenSize(op.penSize);\r\n  }\r\n\r\n  getOptions() {\r\n    return {\r\n      penColor: this.penColor,\r\n      penSize: this.penSize,\r\n    }\r\n  }\r\n\r\n  setPenSize(size: number) {\r\n    this.ctx.lineWidth = size;\r\n  }\r\n\r\n  setPenColor(color: string) {\r\n    this.ctx.strokeStyle = color;\r\n    this.ctx.fillStyle = color;\r\n  }\r\n\r\n\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Popover } from '@material-ui/core';\r\nimport {\r\n  ColorLens as ColorIcon,\r\n  FiberManualRecord as CircleIcon,\r\n} from '@material-ui/icons';\r\n\r\nimport CanvasController from '@client/controller/CanvasController';\r\n\r\nconst colors = [\r\n  '#000',\r\n  '#F44336',\r\n  '#E91E63',\r\n  '#9C27B0',\r\n  '#2196F3',\r\n  '#48C6FF',\r\n  '#4CAF50',\r\n  '#8BC34A',\r\n  '#FFEB3B',\r\n  '#FFC107',\r\n  '#FF9800',\r\n  '#795548',\r\n  '#607D8B',\r\n  '#666',\r\n  '#999',\r\n  '#BBB',\r\n  '#DDD',\r\n  '#FFF',\r\n];\r\n\r\nexport default function SetPenColorButton({\r\n  anchorEl,\r\n  penColor,\r\n  setPenColor,\r\n}: {\r\n  draw: CanvasController;\r\n  anchorEl: Element | null;\r\n  penColor: string;\r\n  setPenColor: (color: string) => void;\r\n}) {\r\n  const [isShowSetPenColor, setIsShowSetPenColor] = useState(false);\r\n  const updatePenColor = useCallback(\r\n    (color: string) => {\r\n      setPenColor(color);\r\n      setIsShowSetPenColor(false);\r\n    },\r\n    [setPenColor, setIsShowSetPenColor],\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{\r\n          flex: '1',\r\n        }}\r\n        onClick={() => setIsShowSetPenColor(prev => !prev)}\r\n        className=\"canvas-operation-list-item\"\r\n      >\r\n        <ColorIcon style={{\r\n          color: penColor,\r\n        }} fontSize=\"large\" />\r\n      </IconButton>\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        onClose={() => setIsShowSetPenColor(false)}\r\n        open={isShowSetPenColor}\r\n      >\r\n        <div className=\"pen-color-wrapper\">\r\n          {colors.map(color => (\r\n            <IconButton onClick={() => updatePenColor(color)} key={color}>\r\n              <CircleIcon style={{\r\n                border: '1px solid #000',\r\n                color,\r\n              }} />\r\n            </IconButton>\r\n          ))}\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function PlainLine(props: {\r\n  length?: number;\r\n  width?: number;\r\n  vertical?: boolean;\r\n  color?: string;\r\n}) {\r\n  let { length, width, vertical, color  } = props;\r\n  if (length == null) length = 24;\r\n  if (width == null) width = 2;\r\n  if (vertical == null) vertical = false;\r\n  if (color == null) color = '#000';\r\n  if (vertical) {\r\n    [length, width] = [width, length];\r\n  }\r\n  return (\r\n    <div\r\n      className=\"plain-line\"\r\n      style={{\r\n        height: width,\r\n        width: length,\r\n        backgroundColor: color,\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback, useState } from 'react';\r\nimport { IconButton, Popover, Slider } from '@material-ui/core';\r\n\r\nimport PlainLine from '@client/ui/PlainLine';\r\n\r\nexport default function SetPenSizeButton({\r\n  anchorEl,\r\n  penColor,\r\n  penSize,\r\n  setPenSize,\r\n}: {\r\n  anchorEl: Element | null;\r\n  penSize: number;\r\n  setPenSize: (size: number) => void;\r\n  penColor: string;\r\n}) {\r\n  const updatePenSize = useCallback(\r\n    (_: any, value: number | number[]) => {\r\n      const size = value as number;\r\n      setPenSize(size);\r\n    },\r\n    [setPenSize],\r\n  );\r\n  const [isShowSetPenSize, setIsShowSetPenSize] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        style={{\r\n          flex: '1',\r\n        }}\r\n        onClick={() => setIsShowSetPenSize(prev => !prev)}\r\n        className=\"canvas-operation-list-item\"\r\n      >\r\n        <PlainLine color={penColor} length={30} width={penSize} />\r\n      </IconButton>\r\n      <Popover\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        anchorEl={anchorEl == null ? undefined : anchorEl}\r\n        onClose={() => setIsShowSetPenSize(false)}\r\n        open={isShowSetPenSize}\r\n      >\r\n        <div className=\"pen-size-slider-wrapper\">\r\n          <Slider\r\n            style={{\r\n              width: '80vw',\r\n            }}\r\n            value={penSize}\r\n            onChange={updatePenSize}\r\n            valueLabelDisplay=\"auto\"\r\n            step={1}\r\n            marks\r\n            min={1}\r\n            max={20}\r\n          />\r\n        </div>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","import './Canvas.scss';\r\n\r\nimport CanvasController, {\r\n  ICanvasControllerSetting,\r\n} from '@client/controller/CanvasController';\r\nimport Point from '@client/controller/Point';\r\nimport { throttle } from '@client/util/helper';\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport { IconButton } from '@material-ui/core';\r\nimport {\r\n  Redo as RedoIcon,\r\n  RestoreFromTrash as ClearIcon,\r\n  Undo as UndoIcon,\r\n} from '@material-ui/icons';\r\nimport React, {\r\n  TouchEvent,\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\n\r\nimport { ReservedEventName } from '../../../../../../shared/constants';\r\nimport DrawAction, {\r\n  DrawActionType,\r\n  TDrawerExternals,\r\n} from '../../../../../../shared/models/DrawAction';\r\nimport RequestMessage from '../../../../../../shared/models/RequestMessage';\r\nimport { IGame } from '../../../../../../shared/types';\r\nimport SetPenColorButton from './SetPenColorButton';\r\nimport SetPenSizeButton from './SetPenSizeButton';\r\n\r\n// import RequestMessage from '@client/WebsocketClient/models/RequestMessage';\r\n\r\nfunction sendDrawActionToServer(\r\n  type: DrawActionType,\r\n  payload?: unknown,\r\n  externals?: TDrawerExternals,\r\n) {\r\n  const drawAction = new DrawAction(type, payload, externals);\r\n  const reqMsg = new RequestMessage(drawAction, ReservedEventName.DRAW_ACTION);\r\n  wsClient.sendMessage(reqMsg);\r\n}\r\n\r\nfunction getPointFromEvent(evt: TouchEvent): Point {\r\n  // 获得相对画布左上角的坐标\r\n  const { touches, target } = evt;\r\n  const t = touches[0];\r\n  const { clientX, clientY } = t;\r\n  const result = {\r\n    x: clientX - (target as HTMLCanvasElement).offsetLeft,\r\n    y: clientY - (target as HTMLCanvasElement).offsetTop,\r\n  };\r\n  return result;\r\n}\r\n\r\nfunction Canvas({\r\n  isSelfPlaying,\r\n  currentGame,\r\n}: {\r\n  isSelfPlaying: boolean;\r\n  currentGame: IGame;\r\n}) {\r\n  const drawRef = useRef(new CanvasController());\r\n  const draw = drawRef.current;\r\n  const [futureDrawings, setFutureDrawings] = useState<string[]>([]);\r\n  const [pastDrawings, setPastDrawings] = useState<string[]>([]);\r\n  const [penColor, setPenColor] = useState('#000');\r\n  const [penSize, setPenSize] = useState(1);\r\n  const isMountedRef = useRef(false);\r\n\r\n  // 生命周期\r\n\r\n  useLayoutEffect(() => {\r\n    if (isMountedRef.current === false) {\r\n      draw.mount('#id-canvas');\r\n      isMountedRef.current = true;\r\n    }\r\n    if (currentGame.newestDrawing !== undefined) {\r\n      draw.drawImage(currentGame.newestDrawing);\r\n    }\r\n  }, [draw, currentGame]);\r\n\r\n  useEffect(() => {\r\n    const changePlayingUserOff = wsClient.on(\r\n      ReservedEventName.CHANGE_DRAWER,\r\n      () => {\r\n        // 清除别人在画布上的东西\r\n        draw.clearCanvas();\r\n        setFutureDrawings([]);\r\n        setPastDrawings([]);\r\n      },\r\n    );\r\n\r\n    const drawActionOff = wsClient.on(\r\n      ReservedEventName.DRAW_ACTION,\r\n      respMsgData => {\r\n        const drawAction = respMsgData as DrawAction;\r\n        const { type, payload } = drawAction;\r\n        switch (type) {\r\n          case DrawActionType.START_DRAW_LINE:\r\n            {\r\n              const { point, setting } = payload as {\r\n                point: Point;\r\n                setting?: ICanvasControllerSetting;\r\n              };\r\n              let prevSetting = draw.getSetting();\r\n              if (setting != null) draw.setting(setting);\r\n              draw.drawPoint(point);\r\n              draw.startDrawLine(point);\r\n              draw.setting(prevSetting);\r\n            }\r\n            break;\r\n          case DrawActionType.DRAW_LINE_TO:\r\n            {\r\n              const { point, setting } = payload as {\r\n                point: Point;\r\n                setting?: ICanvasControllerSetting;\r\n              };\r\n              let prevSetting = draw.getSetting();\r\n              if (setting != null) draw.setting(setting);\r\n              draw.drawLineTo(point);\r\n              draw.setting(prevSetting);\r\n            }\r\n            break;\r\n          case DrawActionType.DRAW_IMAGE:\r\n            {\r\n              const imgData = payload as string;\r\n              draw.drawImage(imgData);\r\n            }\r\n            break;\r\n        }\r\n      },\r\n    );\r\n    return () => {\r\n      changePlayingUserOff();\r\n      drawActionOff();\r\n    };\r\n  }, [draw, setFutureDrawings, setPastDrawings]);\r\n\r\n  // 绘图相关\r\n\r\n  const snapshotCurrentDrawing = useCallback(() => {\r\n    const curDrawing = draw.getSnapshot();\r\n    setPastDrawings(prev => prev.concat(curDrawing));\r\n  }, [draw]);\r\n\r\n  const startDrawLine = useCallback(\r\n    (p: Point) => {\r\n      if (futureDrawings.length !== 0) {\r\n        setFutureDrawings([]);\r\n      }\r\n      draw.drawPoint(p);\r\n      draw.startDrawLine(p);\r\n\r\n      sendDrawActionToServer(DrawActionType.START_DRAW_LINE, {\r\n        point: p,\r\n        setting: draw.getSetting(),\r\n      });\r\n    },\r\n    [draw, futureDrawings, setFutureDrawings],\r\n  );\r\n\r\n  const drawLineTo = useCallback(\r\n    (to: Point) => {\r\n      draw.drawLineTo(to);\r\n      sendDrawActionToServer(DrawActionType.DRAW_LINE_TO, {\r\n        point: to,\r\n        setting: draw.getSetting(),\r\n      });\r\n    },\r\n    [draw],\r\n  );\r\n\r\n  const clearCanvas = useCallback(() => {\r\n    snapshotCurrentDrawing();\r\n\r\n    draw.clearCanvas();\r\n    sendDrawActionToServer(DrawActionType.DRAW_IMAGE, draw.getSnapshot());\r\n  }, [draw, snapshotCurrentDrawing]);\r\n\r\n  const undoDrawing = useCallback(() => {\r\n    if (pastDrawings.length === 0) return;\r\n    const pastDrawing = pastDrawings.pop() as string;\r\n    draw.drawImage(pastDrawing);\r\n    setPastDrawings([...pastDrawings]);\r\n    setFutureDrawings([...futureDrawings, draw.getSnapshot()]);\r\n    sendDrawActionToServer(DrawActionType.DRAW_IMAGE, pastDrawing);\r\n  }, [pastDrawings, futureDrawings, draw, setPastDrawings, setFutureDrawings]);\r\n\r\n  const redoDrawing = useCallback(() => {\r\n    if (futureDrawings.length === 0) return;\r\n\r\n    const futureDrawing = futureDrawings.pop() as string;\r\n    draw.drawImage(futureDrawing);\r\n    setPastDrawings([...pastDrawings, draw.getSnapshot()]);\r\n    setFutureDrawings([...futureDrawings]);\r\n    sendDrawActionToServer(DrawActionType.DRAW_IMAGE, futureDrawing);\r\n  }, [pastDrawings, futureDrawings, draw, setFutureDrawings, setPastDrawings]);\r\n\r\n  // event handler\r\n\r\n  const handleTouchStart = useCallback(\r\n    (evt: TouchEvent) => {\r\n      snapshotCurrentDrawing();\r\n\r\n      const p = getPointFromEvent(evt);\r\n      startDrawLine(p);\r\n    },\r\n    [snapshotCurrentDrawing, startDrawLine],\r\n  );\r\n\r\n  const handleTouchMove = useCallback(\r\n    throttle((evt: TouchEvent) => { // 节流\r\n      const p = getPointFromEvent(evt);\r\n      drawLineTo(p);\r\n    }, 34), // 最多30帧\r\n    [drawLineTo],\r\n  );\r\n\r\n  const handleTouchEnd = useCallback(() => {\r\n    // const drawing = draw.getSnapshot();\r\n    sendDrawActionToServer(DrawActionType.DRAW_IMAGE, draw.getSnapshot());\r\n  }, [draw]);\r\n\r\n  const [posDivEl, setPosDivEl] = useState<HTMLDivElement | null>(null);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"canvas-wrapper\">\r\n        <div\r\n          id=\"id-canvas\"\r\n          style={{\r\n            width: 375,\r\n            height: 300,\r\n          }}\r\n          onTouchStart={isSelfPlaying ? handleTouchStart : undefined}\r\n          onTouchMove={isSelfPlaying ? handleTouchMove : undefined}\r\n          onTouchEnd={isSelfPlaying ? handleTouchEnd : undefined}\r\n        />\r\n      </div>\r\n      {!isSelfPlaying ? null : (\r\n        <div ref={ref => setPosDivEl(ref)} className=\"game-canvas-operations\">\r\n          <SetPenColorButton\r\n            anchorEl={posDivEl}\r\n            draw={draw}\r\n            penColor={penColor}\r\n            setPenColor={(color: string) => {\r\n              draw.penColor = color;\r\n              setPenColor(color);\r\n            }}\r\n          />\r\n          <SetPenSizeButton\r\n            penSize={penSize}\r\n            penColor={penColor}\r\n            setPenSize={(size: number) => {\r\n              draw.penSize = size;\r\n              setPenSize(size);\r\n            }}\r\n            anchorEl={posDivEl}\r\n          />\r\n          <IconButton\r\n            disabled={pastDrawings.length === 0}\r\n            onClick={undoDrawing}\r\n            style={{ flex: '1' }}\r\n            className=\"canvas-operation-list-item\"\r\n          >\r\n            <UndoIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <IconButton\r\n            disabled={futureDrawings.length === 0}\r\n            style={{ flex: '1' }}\r\n            onClick={redoDrawing}\r\n            className=\"canvas-operation-list-item\"\r\n          >\r\n            <RedoIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <IconButton\r\n            style={{ flex: '1', color: '#000' }}\r\n            className=\"canvas-operation-list-item\"\r\n            onClick={clearCanvas}\r\n          >\r\n            <ClearIcon fontSize=\"large\" />\r\n          </IconButton>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Canvas);\r\n","import './index.scss';\r\n\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { ReservedEventName } from '../../../../../../shared/constants';\r\nimport ChattingMessage from '../../../../../../shared/models/ChattingMessage';\r\n\r\n// 以 375宽 为标准\r\n\r\nfunction GameChattingMessage() {\r\n\r\n  const [chattingMessageList, setChattingMessageList]  = useState<ChattingMessage[]>([]);\r\n\r\n  useEffect(() => {\r\n    const chattingMessageOff = wsClient.on(\r\n      ReservedEventName.GAME_CHATTING,\r\n      msgData => {\r\n        setChattingMessageList(prevList => [msgData as ChattingMessage, ...prevList]);\r\n      },\r\n    );\r\n    return () => {\r\n      chattingMessageOff();\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"game-chatting-message-list\">\r\n      {chattingMessageList.map(c => (\r\n        <div key={c.id} className=\"game-chatting-message-list-item\">\r\n          {c.speaker.name}: {c.content}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(GameChattingMessage);\r\n","import './index.scss';\r\n\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport { AppBar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport { ReservedEventName } from '../../../../../../shared/constants';\r\nimport { IGame } from '../../../../../../shared/types';\r\n\r\nfunction GameHeader({\r\n  isSelfPlaying,\r\n  currentGame,\r\n}: {\r\n  isSelfPlaying: boolean;\r\n  currentGame: IGame;\r\n}) {\r\n  const [gameTimeSoFar, setGameTimeSoFar] = useState(currentGame.playInfo.time);\r\n  useEffect(() => {\r\n    // let startTime: number;\r\n    const timeoutOff = wsClient.on(ReservedEventName.TIMEOUT, msgData => {\r\n      const leftTimeForPlay = msgData as number;\r\n      setGameTimeSoFar(leftTimeForPlay);\r\n    });\r\n    return () => {\r\n      timeoutOff();\r\n    };\r\n  }, [setGameTimeSoFar]);\r\n\r\n  const { playInfo } = currentGame;\r\n\r\n  return (\r\n    <AppBar\r\n      style={{\r\n        boxShadow: 'none',\r\n      }}\r\n      position=\"static\"\r\n    >\r\n      <div className=\"game-header\">\r\n        <span className=\"game-header-hint\">\r\n          {isSelfPlaying\r\n            ? `请画 ${playInfo.keyword.raw}`\r\n            : `${playInfo.keyword.raw.length}个字 ${playInfo.keyword.hint}`}\r\n        </span>\r\n        <span className=\"game-time-so-far\">剩余:{gameTimeSoFar}秒</span>\r\n      </div>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default React.memo(GameHeader);\r\n","import React from 'react';\r\nimport { IGame, IUser } from '../../../../../../shared/types';\r\nimport UserAvatar from '@client/ui/UserAvatar';\r\n\r\nimport './index.scss';\r\n\r\nfunction GameUserList({\r\n  currentGame,\r\n  user,\r\n}: {\r\n  currentGame: IGame;\r\n  user: IUser;\r\n}) {\r\n  return (\r\n    <div className=\"game-user-list\">\r\n      {currentGame.users.map(gameUser => (\r\n        <div key={gameUser.id} className=\"user-list-user\">\r\n          <UserAvatar avatar={gameUser.username[0]}>\r\n            {gameUser.id === user.id ? (\r\n              <UserAvatar.AvatarStatus text=\"我\" />\r\n            ) : null}\r\n            <UserAvatar.AvatarStatus\r\n              text={`${currentGame.userScores[gameUser.id]}分`}\r\n            />\r\n            {gameUser.id === currentGame.playInfo.drawer.id ? (\r\n              <UserAvatar.AvatarStatus text=\"正在绘画\" />\r\n            ) : null}\r\n            {gameUser.isOnLine ? null : (\r\n              <UserAvatar.AvatarStatus bgColor=\"red\" text=\"已离线\" />\r\n            )}\r\n          </UserAvatar>\r\n          <div className=\"username\">{gameUser.username}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(GameUserList);\r\n","import './index.scss';\r\n\r\nimport { roomActions, userActions } from '@client/store/actions';\r\nimport { roomEffects } from '@client/store/effects';\r\nimport { IReduxState } from '@client/store/reducers';\r\nimport FullScreenLoading from '@client/ui/FullScreenLoading';\r\nimport wsClient from '@client/WebsocketClient/wsClient';\r\nimport { Button, Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ReservedEventName } from '../../../../shared/constants';\r\nimport { IGame, IUser } from '../../../../shared/types';\r\nimport AnswerInputBox from './components/AnswerInputBox';\r\nimport CanvasContainer from './components/CanvasContainer';\r\nimport GameChattingMessage from './components/GameChattingMessage';\r\nimport GameHeader from './components/GameHeader';\r\nimport GameUserList from './components/GameUserList';\r\n\r\nconst selectorGame = ({\r\n  room: { currentGame },\r\n  user: { user },\r\n}: IReduxState) => ({\r\n  currentGame,\r\n  user,\r\n});\r\n\r\nexport default function Game() {\r\n  const { currentGame, user } = useSelector(selectorGame, shallowEqual);\r\n  const dispatch = useDispatch();\r\n  const [gameAnswer, setGameAnswer] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (currentGame == null) {\r\n      dispatch(roomEffects.getGame());\r\n    }\r\n  }, [currentGame, dispatch]);\r\n\r\n  const [isShowPlayOverPanel, setIsShowPlayOverPanel] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    const refreshGameUsersOff = wsClient.on(ReservedEventName.REFRESH_GAME_USERS, msgData => {\r\n      const gameUsers = msgData as IUser[];\r\n      dispatch(roomActions.createSetCurrentGameUsers(gameUsers));\r\n    });\r\n\r\n    const playOverOff = wsClient.on(ReservedEventName.PLAY_OVER, msgData => {\r\n      const { answer } = msgData as { answer: string };\r\n      setGameAnswer(answer);\r\n      setIsShowPlayOverPanel(true);\r\n    });\r\n\r\n    const gameOverOff = wsClient.on(ReservedEventName.GAME_OVER, msgData => {\r\n      const { user } = msgData as {\r\n        user: IUser;\r\n      };\r\n      dispatch(userActions.createSetIsGaming(user.isGaming));\r\n    });\r\n\r\n    const refreshGameOff = wsClient.on(\r\n      ReservedEventName.REFRESH_GAME,\r\n      msgData => {\r\n        const { game } = msgData as {\r\n          game: IGame;\r\n        };\r\n        dispatch(roomActions.createSetCurrentGame(game));\r\n      },\r\n    );\r\n\r\n    const changeDrawerOff = wsClient.on(\r\n      ReservedEventName.CHANGE_DRAWER,\r\n      msgData => {\r\n        const { game } = msgData as {\r\n          game: IGame;\r\n        };\r\n        dispatch(roomActions.createSetCurrentGame(game));\r\n        setIsShowPlayOverPanel(false);\r\n      },\r\n    );\r\n\r\n    return () => {\r\n      refreshGameUsersOff();\r\n      gameOverOff();\r\n      refreshGameOff();\r\n      changeDrawerOff();\r\n      playOverOff();\r\n    };\r\n  }, [setGameAnswer, setIsShowPlayOverPanel, dispatch]);\r\n\r\n  const isSelfPlaying = useMemo(() => {\r\n    // 自己是画家还是猜测的人\r\n    if (user == null || currentGame == null) return false;\r\n    if (user.id === currentGame.playInfo.drawer.id) return true;\r\n    return false;\r\n  }, [user, currentGame]);\r\n\r\n  if (currentGame == null || user == null) return <FullScreenLoading />;\r\n\r\n  return (\r\n    <>\r\n      <Dialog\r\n        open={isShowPlayOverPanel}\r\n        onClose={() => setIsShowPlayOverPanel(false)}\r\n      >\r\n        <DialogTitle>\r\n          正确答案是: {gameAnswer}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {isSelfPlaying ? (\r\n            <Button variant=\"outlined\" disabled={true}>\r\n              保存此次画作到本地\r\n            </Button>\r\n          ) : null}\r\n        </DialogContent>\r\n      </Dialog>\r\n      <div className=\"view-game\">\r\n        <GameHeader isSelfPlaying={isSelfPlaying} currentGame={currentGame} />\r\n        <div className=\"view-game-main\">\r\n          <CanvasContainer\r\n            isSelfPlaying={isSelfPlaying}\r\n            currentGame={currentGame}\r\n          />\r\n          {isSelfPlaying ? null : <AnswerInputBox wsClient={wsClient} />}\r\n          <GameUserList user={user} currentGame={currentGame} />\r\n          <GameChattingMessage />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport { deepOrange } from '@material-ui/core/colors'\r\nimport React from 'react';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    // type: 'dark',\r\n    primary: {\r\n      light: deepOrange[500],\r\n      main: deepOrange[500],\r\n      dark: deepOrange[500],\r\n    },\r\n  },\r\n});\r\n\r\nexport default function CustomThemeLayout({ children }: { children: any }) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n     {children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","import GameLobby from '@client/view/GameLobby';\r\nimport BasicLayout from '@client/layout/BasicLayout';\r\nimport CreateRoom from '@client/view/room/CreateRoom';\r\nimport PlayingRoom from '@client/view/room/PlayingRoom';\r\nimport AuthLoyout from '@client/layout/AuthLayout';\r\nimport Game from '@client/view/game/Game';\r\nimport CustomThemeLayout from '@client/layout/CustomThemeLayout';\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  component: (...args: any[]) => JSX.Element;\r\n  layout?: (...args: any[]) => JSX.Element;\r\n  children?: IRoute[];\r\n}\r\n\r\nconst routes: IRoute[] = [\r\n  {\r\n    path: '/',\r\n    component: AuthLoyout,\r\n    children: [\r\n      {\r\n        path: '/',\r\n        component: BasicLayout,\r\n        children: [\r\n          {\r\n            path: '/',\r\n            component: CustomThemeLayout,\r\n            children: [\r\n              {\r\n                path: '/create-room',\r\n                component: CreateRoom,\r\n              },\r\n              {\r\n                path: '/game/:id',\r\n                component: Game,\r\n              },\r\n              {\r\n                path: '/room/:roomId',\r\n                component: PlayingRoom,\r\n              },\r\n              {\r\n                path: '/',\r\n                component: GameLobby,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nexport default routes;\r\n","import React from 'react';\r\n\r\nimport './index.scss';\r\nimport NotificationPanel from '@client/component/NotificationPanel';\r\n\r\nexport default function BasicLayout({ children }: { children : any}) {\r\n    return (\r\n      <>\r\n        <div className=\"basic-layout\">\r\n            {children}\r\n        </div>\r\n        <NotificationPanel />\r\n      </>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport routes from './routes';\r\n\r\ninterface IRoute {\r\n  path: string;\r\n  component: (...args: any[]) => JSX.Element;\r\n  layout?: (...args: any[]) => JSX.Element;\r\n  children?: IRoute[];\r\n}\r\n\r\nfunction generateRoutes(routes?: IRoute[]) {\r\n  if (routes == null || routes.length === 0) return null;\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => {\r\n        const { layout: Layout, component: Component } = route;\r\n        if (Layout == null)\r\n          return (\r\n            <Route\r\n              key={index}\r\n              path={route.path}\r\n              render={() => <Component>{generateRoutes(route.children)}</Component>}\r\n            ></Route>\r\n          );\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={route.path}\r\n            render={() => (\r\n              <Layout>\r\n                <Component>{generateRoutes(route.children)}</Component>\r\n              </Layout>\r\n            )}\r\n          ></Route>\r\n        );\r\n      })}\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport const AppRoute = () => generateRoutes(routes);\r\n","import configureStore, { history } from '@client/store';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React, { useEffect } from 'react';\nimport { Provider, useDispatch } from 'react-redux';\n\n\nimport { AppRoute } from './route';\nimport { userActions } from './store/actions';\nimport wsClient from './WebsocketClient/wsClient';\nimport { IUser } from '../shared/types';\n\n// import { HashRouter } from 'react-router-dom';\nexport const store = configureStore();\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const refreshPlayerInfoOff = wsClient.on('refreshPlayerInfo', msgData => {\n      const user = msgData as IUser;\n      dispatch(userActions.createSetUser(user));\n    });\n    return () => {\n      refreshPlayerInfoOff();\n    };\n  }, [dispatch]);\n\n\n  return (\n    <div style={{\n      // height: '100vh',\n      // overflow: 'hidden',\n    }} className=\"App\">\n      <ConnectedRouter history={history}>\n        <AppRoute />\n      </ConnectedRouter>\n    </div>\n  );\n}\n\nconst AppWrapper = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nexport default AppWrapper;\n","import './index.scss';\nimport 'react-hot-loader';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { hot } from 'react-hot-loader/root';\n\nimport App from './App';\nimport { IS_DEV_CLIENT } from './util/constants';\n\nif (IS_DEV_CLIENT) {\n  console.log('开发模式');\n  ReactDOM.render(React.createElement(hot(App)), document.getElementById('root'));\n} else {\n  ReactDOM.render(React.createElement(App), document.getElementById('root'));\n}\n\n(function() { // 禁止手机浏览器下拉刷新的效果\n  const bodyEl = document.querySelector('body') as HTMLBodyElement;\n  bodyEl.addEventListener('touchmove', evt => {\n    // console.log('touchstart');\n    evt.preventDefault();\n  }, {\n    passive: false,\n  });\n}());\n"],"sourceRoot":""}